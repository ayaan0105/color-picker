{"ast":null,"code":"/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, function () {\n  'use strict';\n\n  var limit$2 = function (x, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return x < min ? min : x > max ? max : x;\n  };\n\n  var limit$1 = limit$2;\n\n  var clip_rgb$3 = function (rgb) {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n\n    for (var i = 0; i <= 3; i++) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n\n        rgb[i] = limit$1(rgb[i], 0, 255);\n      } else if (i === 3) {\n        rgb[i] = limit$1(rgb[i], 0, 1);\n      }\n    }\n\n    return rgb;\n  }; // ported from jQuery's $.type\n\n\n  var classToType = {};\n\n  for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n    var name = list$1[i$1];\n    classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n  }\n\n  var type$n = function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || \"object\";\n  };\n\n  var type$m = type$n;\n\n  var unpack$v = function (args, keyOrder) {\n    if (keyOrder === void 0) keyOrder = null; // if called with more than 3 arguments, we return the arguments\n\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n\n\n    if (type$m(args[0]) == 'object' && keyOrder) {\n      return keyOrder.split('').filter(function (k) {\n        return args[0][k] !== undefined;\n      }).map(function (k) {\n        return args[0][k];\n      });\n    } // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n\n\n    return args[0];\n  };\n\n  var type$l = type$n;\n\n  var last$4 = function (args) {\n    if (args.length < 2) {\n      return null;\n    }\n\n    var l = args.length - 1;\n\n    if (type$l(args[l]) == 'string') {\n      return args[l].toLowerCase();\n    }\n\n    return null;\n  };\n\n  var PI$2 = Math.PI;\n  var utils = {\n    clip_rgb: clip_rgb$3,\n    limit: limit$2,\n    type: type$n,\n    unpack: unpack$v,\n    last: last$4,\n    PI: PI$2,\n    TWOPI: PI$2 * 2,\n    PITHIRD: PI$2 / 3,\n    DEG2RAD: PI$2 / 180,\n    RAD2DEG: 180 / PI$2\n  };\n  var input$f = {\n    format: {},\n    autodetect: []\n  };\n  var last$3 = utils.last;\n  var clip_rgb$2 = utils.clip_rgb;\n  var type$k = utils.type;\n  var _input = input$f;\n\n  var Color$A = function Color() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var me = this;\n\n    if (type$k(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    } // last argument could be the mode\n\n\n    var mode = last$3(args);\n    var autodetect = false;\n\n    if (!mode) {\n      autodetect = true;\n\n      if (!_input.sorted) {\n        _input.autodetect = _input.autodetect.sort(function (a, b) {\n          return b.p - a.p;\n        });\n        _input.sorted = true;\n      } // auto-detect format\n\n\n      for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n        var chk = list[i];\n        mode = chk.test.apply(chk, args);\n\n        if (mode) {\n          break;\n        }\n      }\n    }\n\n    if (_input.format[mode]) {\n      var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n\n      me._rgb = clip_rgb$2(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    } // add alpha channel\n\n\n    if (me._rgb.length === 3) {\n      me._rgb.push(1);\n    }\n  };\n\n  Color$A.prototype.toString = function toString() {\n    if (type$k(this.hex) == 'function') {\n      return this.hex();\n    }\n\n    return \"[\" + this._rgb.join(',') + \"]\";\n  };\n\n  var Color_1 = Color$A;\n\n  var chroma$i = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(chroma$i.Color, [null].concat(args)))();\n  };\n\n  chroma$i.Color = Color_1;\n  chroma$i.version = '2.3.0';\n  var chroma_1 = chroma$i;\n  var unpack$u = utils.unpack;\n  var max$2 = Math.max;\n\n  var rgb2cmyk$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$u(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var k = 1 - max$2(r, max$2(g, b));\n    var f = k < 1 ? 1 / (1 - k) : 0;\n    var c = (1 - r - k) * f;\n    var m = (1 - g - k) * f;\n    var y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  var rgb2cmyk_1 = rgb2cmyk$1;\n  var unpack$t = utils.unpack;\n\n  var cmyk2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$t(args, 'cmyk');\n    var c = args[0];\n    var m = args[1];\n    var y = args[2];\n    var k = args[3];\n    var alpha = args.length > 4 ? args[4] : 1;\n\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n\n    return [c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n    m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n    y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n    alpha];\n  };\n\n  var cmyk2rgb_1 = cmyk2rgb;\n  var chroma$h = chroma_1;\n  var Color$z = Color_1;\n  var input$e = input$f;\n  var unpack$s = utils.unpack;\n  var type$j = utils.type;\n  var rgb2cmyk = rgb2cmyk_1;\n\n  Color$z.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n  };\n\n  chroma$h.cmyk = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$z, [null].concat(args, ['cmyk'])))();\n  };\n\n  input$e.format.cmyk = cmyk2rgb_1;\n  input$e.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$s(args, 'cmyk');\n\n      if (type$j(args) === 'array' && args.length === 4) {\n        return 'cmyk';\n      }\n    }\n  });\n  var unpack$r = utils.unpack;\n  var last$2 = utils.last;\n\n  var rnd = function (a) {\n    return Math.round(a * 100) / 100;\n  };\n  /*\n   * supported arguments:\n   * - hsl2css(h,s,l)\n   * - hsl2css(h,s,l,a)\n   * - hsl2css([h,s,l], mode)\n   * - hsl2css([h,s,l,a], mode)\n   * - hsl2css({h,s,l,a}, mode)\n   */\n\n\n  var hsl2css$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var hsla = unpack$r(args, 'hsla');\n    var mode = last$2(args) || 'lsa';\n    hsla[0] = rnd(hsla[0] || 0);\n    hsla[1] = rnd(hsla[1] * 100) + '%';\n    hsla[2] = rnd(hsla[2] * 100) + '%';\n\n    if (mode === 'hsla' || hsla.length > 3 && hsla[3] < 1) {\n      hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n      mode = 'hsla';\n    } else {\n      hsla.length = 3;\n    }\n\n    return mode + \"(\" + hsla.join(',') + \")\";\n  };\n\n  var hsl2css_1 = hsl2css$1;\n  var unpack$q = utils.unpack;\n  /*\n   * supported arguments:\n   * - rgb2hsl(r,g,b)\n   * - rgb2hsl(r,g,b,a)\n   * - rgb2hsl([r,g,b])\n   * - rgb2hsl([r,g,b,a])\n   * - rgb2hsl({r,g,b,a})\n   */\n\n  var rgb2hsl$3 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$q(args, 'rgba');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var l = (max + min) / 2;\n    var s, h;\n\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n\n    if (r == max) {\n      h = (g - b) / (max - min);\n    } else if (g == max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b == max) {\n      h = 4 + (r - g) / (max - min);\n    }\n\n    h *= 60;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    if (args.length > 3 && args[3] !== undefined) {\n      return [h, s, l, args[3]];\n    }\n\n    return [h, s, l];\n  };\n\n  var rgb2hsl_1 = rgb2hsl$3;\n  var unpack$p = utils.unpack;\n  var last$1 = utils.last;\n  var hsl2css = hsl2css_1;\n  var rgb2hsl$2 = rgb2hsl_1;\n  var round$6 = Math.round;\n  /*\n   * supported arguments:\n   * - rgb2css(r,g,b)\n   * - rgb2css(r,g,b,a)\n   * - rgb2css([r,g,b], mode)\n   * - rgb2css([r,g,b,a], mode)\n   * - rgb2css({r,g,b,a}, mode)\n   */\n\n  var rgb2css$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgba = unpack$p(args, 'rgba');\n    var mode = last$1(args) || 'rgb';\n\n    if (mode.substr(0, 3) == 'hsl') {\n      return hsl2css(rgb2hsl$2(rgba), mode);\n    }\n\n    rgba[0] = round$6(rgba[0]);\n    rgba[1] = round$6(rgba[1]);\n    rgba[2] = round$6(rgba[2]);\n\n    if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n      rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n      mode = 'rgba';\n    }\n\n    return mode + \"(\" + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + \")\";\n  };\n\n  var rgb2css_1 = rgb2css$1;\n  var unpack$o = utils.unpack;\n  var round$5 = Math.round;\n\n  var hsl2rgb$1 = function () {\n    var assign;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$o(args, 'hsl');\n    var h = args[0];\n    var s = args[1];\n    var l = args[2];\n    var r, g, b;\n\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      var t3 = [0, 0, 0];\n      var c = [0, 0, 0];\n      var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var t1 = 2 * l - t2;\n      var h_ = h / 360;\n      t3[0] = h_ + 1 / 3;\n      t3[1] = h_;\n      t3[2] = h_ - 1 / 3;\n\n      for (var i = 0; i < 3; i++) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n\n      assign = [round$5(c[0] * 255), round$5(c[1] * 255), round$5(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2];\n    }\n\n    if (args.length > 3) {\n      // keep alpha channel\n      return [r, g, b, args[3]];\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var hsl2rgb_1 = hsl2rgb$1;\n  var hsl2rgb = hsl2rgb_1;\n  var input$d = input$f;\n  var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n  var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var round$4 = Math.round;\n\n  var css2rgb$1 = function (css) {\n    css = css.toLowerCase().trim();\n    var m;\n\n    if (input$d.format.named) {\n      try {\n        return input$d.format.named(css);\n      } catch (e) {// eslint-disable-next-line\n      }\n    } // rgb(250,20,0)\n\n\n    if (m = css.match(RE_RGB)) {\n      var rgb = m.slice(1, 4);\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = +rgb[i];\n      }\n\n      rgb[3] = 1; // default alpha\n\n      return rgb;\n    } // rgba(250,20,0,0.4)\n\n\n    if (m = css.match(RE_RGBA)) {\n      var rgb$1 = m.slice(1, 5);\n\n      for (var i$1 = 0; i$1 < 4; i$1++) {\n        rgb$1[i$1] = +rgb$1[i$1];\n      }\n\n      return rgb$1;\n    } // rgb(100%,0%,0%)\n\n\n    if (m = css.match(RE_RGB_PCT)) {\n      var rgb$2 = m.slice(1, 4);\n\n      for (var i$2 = 0; i$2 < 3; i$2++) {\n        rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n      }\n\n      rgb$2[3] = 1; // default alpha\n\n      return rgb$2;\n    } // rgba(100%,0%,0%,0.4)\n\n\n    if (m = css.match(RE_RGBA_PCT)) {\n      var rgb$3 = m.slice(1, 5);\n\n      for (var i$3 = 0; i$3 < 3; i$3++) {\n        rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n      }\n\n      rgb$3[3] = +rgb$3[3];\n      return rgb$3;\n    } // hsl(0,100%,50%)\n\n\n    if (m = css.match(RE_HSL)) {\n      var hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      var rgb$4 = hsl2rgb(hsl);\n      rgb$4[3] = 1;\n      return rgb$4;\n    } // hsla(0,100%,50%,0.5)\n\n\n    if (m = css.match(RE_HSLA)) {\n      var hsl$1 = m.slice(1, 4);\n      hsl$1[1] *= 0.01;\n      hsl$1[2] *= 0.01;\n      var rgb$5 = hsl2rgb(hsl$1);\n      rgb$5[3] = +m[4]; // default alpha = 1\n\n      return rgb$5;\n    }\n  };\n\n  css2rgb$1.test = function (s) {\n    return RE_RGB.test(s) || RE_RGBA.test(s) || RE_RGB_PCT.test(s) || RE_RGBA_PCT.test(s) || RE_HSL.test(s) || RE_HSLA.test(s);\n  };\n\n  var css2rgb_1 = css2rgb$1;\n  var chroma$g = chroma_1;\n  var Color$y = Color_1;\n  var input$c = input$f;\n  var type$i = utils.type;\n  var rgb2css = rgb2css_1;\n  var css2rgb = css2rgb_1;\n\n  Color$y.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n  };\n\n  chroma$g.css = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$y, [null].concat(args, ['css'])))();\n  };\n\n  input$c.format.css = css2rgb;\n  input$c.autodetect.push({\n    p: 5,\n    test: function (h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$i(h) === 'string' && css2rgb.test(h)) {\n        return 'css';\n      }\n    }\n  });\n  var Color$x = Color_1;\n  var chroma$f = chroma_1;\n  var input$b = input$f;\n  var unpack$n = utils.unpack;\n\n  input$b.format.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgb = unpack$n(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n  };\n\n  chroma$f.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$x, [null].concat(args, ['gl'])))();\n  };\n\n  Color$x.prototype.gl = function () {\n    var rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  var unpack$m = utils.unpack;\n\n  var rgb2hcg$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$m(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var c = delta * 100 / 255;\n\n    var _g = min / (255 - delta) * 100;\n\n    var h;\n\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, c, _g];\n  };\n\n  var rgb2hcg_1 = rgb2hcg$1;\n  var unpack$l = utils.unpack;\n  var floor$3 = Math.floor;\n  /*\n   * this is basically just HSV with some minor tweaks\n   *\n   * hue.. [0..360]\n   * chroma .. [0..1]\n   * grayness .. [0..1]\n   */\n\n  var hcg2rgb = function () {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$l(args, 'hcg');\n    var h = args[0];\n    var c = args[1];\n    var _g = args[2];\n    var r, g, b;\n    _g = _g * 255;\n\n    var _c = c * 255;\n\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor$3(h);\n      var f = h - i;\n      var p = _g * (1 - c);\n      var q = p + _c * (1 - f);\n      var t = p + _c * f;\n      var v = p + _c;\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hcg2rgb_1 = hcg2rgb;\n  var unpack$k = utils.unpack;\n  var type$h = utils.type;\n  var chroma$e = chroma_1;\n  var Color$w = Color_1;\n  var input$a = input$f;\n  var rgb2hcg = rgb2hcg_1;\n\n  Color$w.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n  };\n\n  chroma$e.hcg = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$w, [null].concat(args, ['hcg'])))();\n  };\n\n  input$a.format.hcg = hcg2rgb_1;\n  input$a.autodetect.push({\n    p: 1,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$k(args, 'hcg');\n\n      if (type$h(args) === 'array' && args.length === 3) {\n        return 'hcg';\n      }\n    }\n  });\n  var unpack$j = utils.unpack;\n  var last = utils.last;\n  var round$3 = Math.round;\n\n  var rgb2hex$2 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$j(args, 'rgba');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n    var mode = last(args) || 'auto';\n\n    if (a === undefined) {\n      a = 1;\n    }\n\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n\n    r = round$3(r);\n    g = round$3(g);\n    b = round$3(b);\n    var u = r << 16 | g << 8 | b;\n    var str = \"000000\" + u.toString(16); //#.toUpperCase();\n\n    str = str.substr(str.length - 6);\n    var hxa = '0' + round$3(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n\n    switch (mode.toLowerCase()) {\n      case 'rgba':\n        return \"#\" + str + hxa;\n\n      case 'argb':\n        return \"#\" + hxa + str;\n\n      default:\n        return \"#\" + str;\n    }\n  };\n\n  var rgb2hex_1 = rgb2hex$2;\n  var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n  var hex2rgb$1 = function (hex) {\n    if (hex.match(RE_HEX)) {\n      // remove optional leading #\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      } // expand short-notation to full six-digit\n\n\n      if (hex.length === 3) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      var u = parseInt(hex, 16);\n      var r = u >> 16;\n      var g = u >> 8 & 0xFF;\n      var b = u & 0xFF;\n      return [r, g, b, 1];\n    } // match rgba hex format, eg #FF000077\n\n\n    if (hex.match(RE_HEXA)) {\n      if (hex.length === 5 || hex.length === 9) {\n        // remove optional leading #\n        hex = hex.substr(1);\n      } // expand short-notation to full eight-digit\n\n\n      if (hex.length === 4) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n      }\n\n      var u$1 = parseInt(hex, 16);\n      var r$1 = u$1 >> 24 & 0xFF;\n      var g$1 = u$1 >> 16 & 0xFF;\n      var b$1 = u$1 >> 8 & 0xFF;\n      var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n      return [r$1, g$1, b$1, a];\n    } // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n\n    throw new Error(\"unknown hex color: \" + hex);\n  };\n\n  var hex2rgb_1 = hex2rgb$1;\n  var chroma$d = chroma_1;\n  var Color$v = Color_1;\n  var type$g = utils.type;\n  var input$9 = input$f;\n  var rgb2hex$1 = rgb2hex_1;\n\n  Color$v.prototype.hex = function (mode) {\n    return rgb2hex$1(this._rgb, mode);\n  };\n\n  chroma$d.hex = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$v, [null].concat(args, ['hex'])))();\n  };\n\n  input$9.format.hex = hex2rgb_1;\n  input$9.autodetect.push({\n    p: 4,\n    test: function (h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$g(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {\n        return 'hex';\n      }\n    }\n  });\n  var unpack$i = utils.unpack;\n  var TWOPI$2 = utils.TWOPI;\n  var min$2 = Math.min;\n  var sqrt$4 = Math.sqrt;\n  var acos = Math.acos;\n\n  var rgb2hsi$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n\n\n    var ref = unpack$i(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var h;\n    var min_ = min$2(r, g, b);\n    var i = (r + g + b) / 3;\n    var s = i > 0 ? 1 - min_ / i : 0;\n\n    if (s === 0) {\n      h = NaN;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= sqrt$4((r - g) * (r - g) + (r - b) * (g - b));\n      h = acos(h);\n\n      if (b > g) {\n        h = TWOPI$2 - h;\n      }\n\n      h /= TWOPI$2;\n    }\n\n    return [h * 360, s, i];\n  };\n\n  var rgb2hsi_1 = rgb2hsi$1;\n  var unpack$h = utils.unpack;\n  var limit = utils.limit;\n  var TWOPI$1 = utils.TWOPI;\n  var PITHIRD = utils.PITHIRD;\n  var cos$4 = Math.cos;\n  /*\n   * hue [0..360]\n   * saturation [0..1]\n   * intensity [0..1]\n   */\n\n  var hsi2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n\n\n    args = unpack$h(args, 'hsi');\n    var h = args[0];\n    var s = args[1];\n    var i = args[2];\n    var r, g, b;\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    if (isNaN(s)) {\n      s = 0;\n    } // normalize hue\n\n\n    if (h > 360) {\n      h -= 360;\n    }\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    h /= 360;\n\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      r = 1 - (g + b);\n    }\n\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsi2rgb_1 = hsi2rgb;\n  var unpack$g = utils.unpack;\n  var type$f = utils.type;\n  var chroma$c = chroma_1;\n  var Color$u = Color_1;\n  var input$8 = input$f;\n  var rgb2hsi = rgb2hsi_1;\n\n  Color$u.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n  };\n\n  chroma$c.hsi = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$u, [null].concat(args, ['hsi'])))();\n  };\n\n  input$8.format.hsi = hsi2rgb_1;\n  input$8.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$g(args, 'hsi');\n\n      if (type$f(args) === 'array' && args.length === 3) {\n        return 'hsi';\n      }\n    }\n  });\n  var unpack$f = utils.unpack;\n  var type$e = utils.type;\n  var chroma$b = chroma_1;\n  var Color$t = Color_1;\n  var input$7 = input$f;\n  var rgb2hsl$1 = rgb2hsl_1;\n\n  Color$t.prototype.hsl = function () {\n    return rgb2hsl$1(this._rgb);\n  };\n\n  chroma$b.hsl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['hsl'])))();\n  };\n\n  input$7.format.hsl = hsl2rgb_1;\n  input$7.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$f(args, 'hsl');\n\n      if (type$e(args) === 'array' && args.length === 3) {\n        return 'hsl';\n      }\n    }\n  });\n  var unpack$e = utils.unpack;\n  var min$1 = Math.min;\n  var max$1 = Math.max;\n  /*\n   * supported arguments:\n   * - rgb2hsv(r,g,b)\n   * - rgb2hsv([r,g,b])\n   * - rgb2hsv({r,g,b})\n   */\n\n  var rgb2hsl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$e(args, 'rgb');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var min_ = min$1(r, g, b);\n    var max_ = max$1(r, g, b);\n    var delta = max_ - min_;\n    var h, s, v;\n    v = max_ / 255.0;\n\n    if (max_ === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max_;\n\n      if (r === max_) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max_) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max_) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, s, v];\n  };\n\n  var rgb2hsv$1 = rgb2hsl;\n  var unpack$d = utils.unpack;\n  var floor$2 = Math.floor;\n\n  var hsv2rgb = function () {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$d(args, 'hsv');\n    var h = args[0];\n    var s = args[1];\n    var v = args[2];\n    var r, g, b;\n    v *= 255;\n\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor$2(h);\n      var f = h - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsv2rgb_1 = hsv2rgb;\n  var unpack$c = utils.unpack;\n  var type$d = utils.type;\n  var chroma$a = chroma_1;\n  var Color$s = Color_1;\n  var input$6 = input$f;\n  var rgb2hsv = rgb2hsv$1;\n\n  Color$s.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n\n  chroma$a.hsv = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$s, [null].concat(args, ['hsv'])))();\n  };\n\n  input$6.format.hsv = hsv2rgb_1;\n  input$6.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$c(args, 'hsv');\n\n      if (type$d(args) === 'array' && args.length === 3) {\n        return 'hsv';\n      }\n    }\n  });\n  var labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n    // D65 standard referent\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    // 4 / 29\n    t1: 0.206896552,\n    // 6 / 29\n    t2: 0.12841855,\n    // 3 * t1 * t1\n    t3: 0.008856452 // t1 * t1 * t1\n\n  };\n  var LAB_CONSTANTS$3 = labConstants;\n  var unpack$b = utils.unpack;\n  var pow$8 = Math.pow;\n\n  var rgb2lab$2 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$b(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2xyz(r, g, b);\n    var x = ref$1[0];\n    var y = ref$1[1];\n    var z = ref$1[2];\n    var l = 116 * y - 16;\n    return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n  };\n\n  var rgb_xyz = function (r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    }\n\n    return pow$8((r + 0.055) / 1.055, 2.4);\n  };\n\n  var xyz_lab = function (t) {\n    if (t > LAB_CONSTANTS$3.t3) {\n      return pow$8(t, 1 / 3);\n    }\n\n    return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n  };\n\n  var rgb2xyz = function (r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n    return [x, y, z];\n  };\n\n  var rgb2lab_1 = rgb2lab$2;\n  var LAB_CONSTANTS$2 = labConstants;\n  var unpack$a = utils.unpack;\n  var pow$7 = Math.pow;\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n\n  var lab2rgb$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$a(args, 'lab');\n    var l = args[0];\n    var a = args[1];\n    var b = args[2];\n    var x, y, z, r, g, b_;\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n  };\n\n  var xyz_rgb = function (r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$7(r, 1 / 2.4) - 0.055);\n  };\n\n  var lab_xyz = function (t) {\n    return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0);\n  };\n\n  var lab2rgb_1 = lab2rgb$1;\n  var unpack$9 = utils.unpack;\n  var type$c = utils.type;\n  var chroma$9 = chroma_1;\n  var Color$r = Color_1;\n  var input$5 = input$f;\n  var rgb2lab$1 = rgb2lab_1;\n\n  Color$r.prototype.lab = function () {\n    return rgb2lab$1(this._rgb);\n  };\n\n  chroma$9.lab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$r, [null].concat(args, ['lab'])))();\n  };\n\n  input$5.format.lab = lab2rgb_1;\n  input$5.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$9(args, 'lab');\n\n      if (type$c(args) === 'array' && args.length === 3) {\n        return 'lab';\n      }\n    }\n  });\n  var unpack$8 = utils.unpack;\n  var RAD2DEG = utils.RAD2DEG;\n  var sqrt$3 = Math.sqrt;\n  var atan2$2 = Math.atan2;\n  var round$2 = Math.round;\n\n  var lab2lch$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$8(args, 'lab');\n    var l = ref[0];\n    var a = ref[1];\n    var b = ref[2];\n    var c = sqrt$3(a * a + b * b);\n    var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n\n    if (round$2(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n\n    return [l, c, h];\n  };\n\n  var lab2lch_1 = lab2lch$1;\n  var unpack$7 = utils.unpack;\n  var rgb2lab = rgb2lab_1;\n  var lab2lch = lab2lch_1;\n\n  var rgb2lch$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$7(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2lab(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch(l, a, b_);\n  };\n\n  var rgb2lch_1 = rgb2lch$1;\n  var unpack$6 = utils.unpack;\n  var DEG2RAD = utils.DEG2RAD;\n  var sin$3 = Math.sin;\n  var cos$3 = Math.cos;\n\n  var lch2lab$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n     A saturation multiplier was added by Gregor Aisch\n    */\n\n\n    var ref = unpack$6(args, 'lch');\n    var l = ref[0];\n    var c = ref[1];\n    var h = ref[2];\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    h = h * DEG2RAD;\n    return [l, cos$3(h) * c, sin$3(h) * c];\n  };\n\n  var lch2lab_1 = lch2lab$1;\n  var unpack$5 = utils.unpack;\n  var lch2lab = lch2lab_1;\n  var lab2rgb = lab2rgb_1;\n\n  var lch2rgb$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$5(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = lab2rgb(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var lch2rgb_1 = lch2rgb$1;\n  var unpack$4 = utils.unpack;\n  var lch2rgb = lch2rgb_1;\n\n  var hcl2rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var hcl = unpack$4(args, 'hcl').reverse();\n    return lch2rgb.apply(void 0, hcl);\n  };\n\n  var hcl2rgb_1 = hcl2rgb;\n  var unpack$3 = utils.unpack;\n  var type$b = utils.type;\n  var chroma$8 = chroma_1;\n  var Color$q = Color_1;\n  var input$4 = input$f;\n  var rgb2lch = rgb2lch_1;\n\n  Color$q.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n  };\n\n  Color$q.prototype.hcl = function () {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  chroma$8.lch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$q, [null].concat(args, ['lch'])))();\n  };\n\n  chroma$8.hcl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$q, [null].concat(args, ['hcl'])))();\n  };\n\n  input$4.format.lch = lch2rgb_1;\n  input$4.format.hcl = hcl2rgb_1;\n  ['lch', 'hcl'].forEach(function (m) {\n    return input$4.autodetect.push({\n      p: 2,\n      test: function () {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) args[len] = arguments[len];\n\n        args = unpack$3(args, m);\n\n        if (type$b(args) === 'array' && args.length === 3) {\n          return m;\n        }\n      }\n    });\n  });\n  /**\n  \tX11 color names\n   \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n  var w3cx11$1 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n  var w3cx11_1 = w3cx11$1;\n  var Color$p = Color_1;\n  var input$3 = input$f;\n  var type$a = utils.type;\n  var w3cx11 = w3cx11_1;\n  var hex2rgb = hex2rgb_1;\n  var rgb2hex = rgb2hex_1;\n\n  Color$p.prototype.name = function () {\n    var hex = rgb2hex(this._rgb, 'rgb');\n\n    for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n      var n = list[i];\n\n      if (w3cx11[n] === hex) {\n        return n.toLowerCase();\n      }\n    }\n\n    return hex;\n  };\n\n  input$3.format.named = function (name) {\n    name = name.toLowerCase();\n\n    if (w3cx11[name]) {\n      return hex2rgb(w3cx11[name]);\n    }\n\n    throw new Error('unknown color name: ' + name);\n  };\n\n  input$3.autodetect.push({\n    p: 5,\n    test: function (h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$a(h) === 'string' && w3cx11[h.toLowerCase()]) {\n        return 'named';\n      }\n    }\n  });\n  var unpack$2 = utils.unpack;\n\n  var rgb2num$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$2(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  var rgb2num_1 = rgb2num$1;\n  var type$9 = utils.type;\n\n  var num2rgb = function (num) {\n    if (type$9(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      var r = num >> 16;\n      var g = num >> 8 & 0xFF;\n      var b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    throw new Error(\"unknown num color: \" + num);\n  };\n\n  var num2rgb_1 = num2rgb;\n  var chroma$7 = chroma_1;\n  var Color$o = Color_1;\n  var input$2 = input$f;\n  var type$8 = utils.type;\n  var rgb2num = rgb2num_1;\n\n  Color$o.prototype.num = function () {\n    return rgb2num(this._rgb);\n  };\n\n  chroma$7.num = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$o, [null].concat(args, ['num'])))();\n  };\n\n  input$2.format.num = num2rgb_1;\n  input$2.autodetect.push({\n    p: 5,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      if (args.length === 1 && type$8(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n  var chroma$6 = chroma_1;\n  var Color$n = Color_1;\n  var input$1 = input$f;\n  var unpack$1 = utils.unpack;\n  var type$7 = utils.type;\n  var round$1 = Math.round;\n\n  Color$n.prototype.rgb = function (rnd) {\n    if (rnd === void 0) rnd = true;\n\n    if (rnd === false) {\n      return this._rgb.slice(0, 3);\n    }\n\n    return this._rgb.slice(0, 3).map(round$1);\n  };\n\n  Color$n.prototype.rgba = function (rnd) {\n    if (rnd === void 0) rnd = true;\n    return this._rgb.slice(0, 4).map(function (v, i) {\n      return i < 3 ? rnd === false ? v : round$1(v) : v;\n    });\n  };\n\n  chroma$6.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$n, [null].concat(args, ['rgb'])))();\n  };\n\n  input$1.format.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgba = unpack$1(args, 'rgba');\n\n    if (rgba[3] === undefined) {\n      rgba[3] = 1;\n    }\n\n    return rgba;\n  };\n\n  input$1.autodetect.push({\n    p: 3,\n    test: function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$1(args, 'rgba');\n\n      if (type$7(args) === 'array' && (args.length === 3 || args.length === 4 && type$7(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n        return 'rgb';\n      }\n    }\n  });\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   */\n\n  var log$1 = Math.log;\n\n  var temperature2rgb$1 = function (kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n\n    if (temp < 66) {\n      r = 255;\n      g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log$1(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log$1(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log$1(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log$1(g);\n      b = 255;\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var temperature2rgb_1 = temperature2rgb$1;\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   **/\n\n  var temperature2rgb = temperature2rgb_1;\n  var unpack = utils.unpack;\n  var round = Math.round;\n\n  var rgb2temperature$1 = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var rgb = unpack(args, 'rgb');\n    var r = rgb[0],\n        b = rgb[2];\n    var minTemp = 1000;\n    var maxTemp = 40000;\n    var eps = 0.4;\n    var temp;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      var rgb$1 = temperature2rgb(temp);\n\n      if (rgb$1[2] / rgb$1[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return round(temp);\n  };\n\n  var rgb2temperature_1 = rgb2temperature$1;\n  var chroma$5 = chroma_1;\n  var Color$m = Color_1;\n  var input = input$f;\n  var rgb2temperature = rgb2temperature_1;\n\n  Color$m.prototype.temp = Color$m.prototype.kelvin = Color$m.prototype.temperature = function () {\n    return rgb2temperature(this._rgb);\n  };\n\n  chroma$5.temp = chroma$5.kelvin = chroma$5.temperature = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$m, [null].concat(args, ['temp'])))();\n  };\n\n  input.format.temp = input.format.kelvin = input.format.temperature = temperature2rgb_1;\n  var Color$l = Color_1;\n  var type$6 = utils.type;\n\n  Color$l.prototype.alpha = function (a, mutate) {\n    if (mutate === void 0) mutate = false;\n\n    if (a !== undefined && type$6(a) === 'number') {\n      if (mutate) {\n        this._rgb[3] = a;\n        return this;\n      }\n\n      return new Color$l([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n\n    return this._rgb[3];\n  };\n\n  var Color$k = Color_1;\n\n  Color$k.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n\n  var Color$j = Color_1;\n  var LAB_CONSTANTS$1 = labConstants;\n\n  Color$j.prototype.darken = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lab = me.lab();\n    lab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    return new Color$j(lab, 'lab').alpha(me.alpha(), true);\n  };\n\n  Color$j.prototype.brighten = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.darken(-amount);\n  };\n\n  Color$j.prototype.darker = Color$j.prototype.darken;\n  Color$j.prototype.brighter = Color$j.prototype.brighten;\n  var Color$i = Color_1;\n\n  Color$i.prototype.get = function (mc) {\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel);\n\n      if (i > -1) {\n        return src[i];\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var Color$h = Color_1;\n  var type$5 = utils.type;\n  var pow$6 = Math.pow;\n  var EPS = 1e-7;\n  var MAX_ITER = 20;\n\n  Color$h.prototype.luminance = function (lum) {\n    if (lum !== undefined && type$5(lum) === 'number') {\n      if (lum === 0) {\n        // return pure black\n        return new Color$h([0, 0, 0, this._rgb[3]], 'rgb');\n      }\n\n      if (lum === 1) {\n        // return pure white\n        return new Color$h([255, 255, 255, this._rgb[3]], 'rgb');\n      } // compute new color using...\n\n\n      var cur_lum = this.luminance();\n      var mode = 'rgb';\n      var max_iter = MAX_ITER;\n\n      var test = function (low, high) {\n        var mid = low.interpolate(high, 0.5, mode);\n        var lm = mid.luminance();\n\n        if (Math.abs(lum - lm) < EPS || !max_iter--) {\n          // close enough\n          return mid;\n        }\n\n        return lm > lum ? test(low, mid) : test(mid, high);\n      };\n\n      var rgb = (cur_lum > lum ? test(new Color$h([0, 0, 0]), this) : test(this, new Color$h([255, 255, 255]))).rgb();\n      return new Color$h(rgb.concat([this._rgb[3]]));\n    }\n\n    return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\n  };\n\n  var rgb2luminance = function (r, g, b) {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  var luminance_x = function (x) {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow$6((x + 0.055) / 1.055, 2.4);\n  };\n\n  var interpolator$1 = {};\n  var Color$g = Color_1;\n  var type$4 = utils.type;\n  var interpolator = interpolator$1;\n\n  var mix$1 = function (col1, col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 3;\n\n    while (len-- > 0) rest[len] = arguments[len + 3];\n\n    var mode = rest[0] || 'lrgb';\n\n    if (!interpolator[mode] && !rest.length) {\n      // fall back to the first supported mode\n      mode = Object.keys(interpolator)[0];\n    }\n\n    if (!interpolator[mode]) {\n      throw new Error(\"interpolation mode \" + mode + \" is not defined\");\n    }\n\n    if (type$4(col1) !== 'object') {\n      col1 = new Color$g(col1);\n    }\n\n    if (type$4(col2) !== 'object') {\n      col2 = new Color$g(col2);\n    }\n\n    return interpolator[mode](col1, col2, f).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  var Color$f = Color_1;\n  var mix = mix$1;\n\n  Color$f.prototype.mix = Color$f.prototype.interpolate = function (col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 2;\n\n    while (len-- > 0) rest[len] = arguments[len + 2];\n\n    return mix.apply(void 0, [this, col2, f].concat(rest));\n  };\n\n  var Color$e = Color_1;\n\n  Color$e.prototype.premultiply = function (mutate) {\n    if (mutate === void 0) mutate = false;\n    var rgb = this._rgb;\n    var a = rgb[3];\n\n    if (mutate) {\n      this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n      return this;\n    } else {\n      return new Color$e([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n  };\n\n  var Color$d = Color_1;\n  var LAB_CONSTANTS = labConstants;\n\n  Color$d.prototype.saturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n\n    return new Color$d(lch, 'lch').alpha(me.alpha(), true);\n  };\n\n  Color$d.prototype.desaturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.saturate(-amount);\n  };\n\n  var Color$c = Color_1;\n  var type$3 = utils.type;\n\n  Color$c.prototype.set = function (mc, value, mutate) {\n    if (mutate === void 0) mutate = false;\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel);\n\n      if (i > -1) {\n        if (type$3(value) == 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n\n            case '-':\n              src[i] += +value;\n              break;\n\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n\n            default:\n              src[i] = +value;\n          }\n        } else if (type$3(value) === 'number') {\n          src[i] = value;\n        } else {\n          throw new Error(\"unsupported value for Color.set\");\n        }\n\n        var out = new Color$c(src, mode);\n\n        if (mutate) {\n          this._rgb = out._rgb;\n          return this;\n        }\n\n        return out;\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var Color$b = Color_1;\n\n  var rgb = function (col1, col2, f) {\n    var xyz0 = col1._rgb;\n    var xyz1 = col2._rgb;\n    return new Color$b(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'rgb');\n  }; // register interpolator\n\n\n  interpolator$1.rgb = rgb;\n  var Color$a = Color_1;\n  var sqrt$2 = Math.sqrt;\n  var pow$5 = Math.pow;\n\n  var lrgb = function (col1, col2, f) {\n    var ref = col1._rgb;\n    var x1 = ref[0];\n    var y1 = ref[1];\n    var z1 = ref[2];\n    var ref$1 = col2._rgb;\n    var x2 = ref$1[0];\n    var y2 = ref$1[1];\n    var z2 = ref$1[2];\n    return new Color$a(sqrt$2(pow$5(x1, 2) * (1 - f) + pow$5(x2, 2) * f), sqrt$2(pow$5(y1, 2) * (1 - f) + pow$5(y2, 2) * f), sqrt$2(pow$5(z1, 2) * (1 - f) + pow$5(z2, 2) * f), 'rgb');\n  }; // register interpolator\n\n\n  interpolator$1.lrgb = lrgb;\n  var Color$9 = Color_1;\n\n  var lab = function (col1, col2, f) {\n    var xyz0 = col1.lab();\n    var xyz1 = col2.lab();\n    return new Color$9(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'lab');\n  }; // register interpolator\n\n\n  interpolator$1.lab = lab;\n  var Color$8 = Color_1;\n\n  var _hsx = function (col1, col2, f, m) {\n    var assign, assign$1;\n    var xyz0, xyz1;\n\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n\n    var hue0, hue1, sat0, sat1, lbv0, lbv1;\n\n    if (m.substr(0, 1) === 'h') {\n      assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2];\n      assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2];\n    }\n\n    var sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      // both colors have hue\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n\n      if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n\n      if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n\n    if (sat === undefined) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return new Color$8([hue, sat, lbv], m);\n  };\n\n  var interpolate_hsx$4 = _hsx;\n\n  var lch = function (col1, col2, f) {\n    return interpolate_hsx$4(col1, col2, f, 'lch');\n  }; // register interpolator\n\n\n  interpolator$1.lch = lch;\n  interpolator$1.hcl = lch;\n  var Color$7 = Color_1;\n\n  var num = function (col1, col2, f) {\n    var c1 = col1.num();\n    var c2 = col2.num();\n    return new Color$7(c1 + f * (c2 - c1), 'num');\n  }; // register interpolator\n\n\n  interpolator$1.num = num;\n  var interpolate_hsx$3 = _hsx;\n\n  var hcg = function (col1, col2, f) {\n    return interpolate_hsx$3(col1, col2, f, 'hcg');\n  }; // register interpolator\n\n\n  interpolator$1.hcg = hcg;\n  var interpolate_hsx$2 = _hsx;\n\n  var hsi = function (col1, col2, f) {\n    return interpolate_hsx$2(col1, col2, f, 'hsi');\n  }; // register interpolator\n\n\n  interpolator$1.hsi = hsi;\n  var interpolate_hsx$1 = _hsx;\n\n  var hsl = function (col1, col2, f) {\n    return interpolate_hsx$1(col1, col2, f, 'hsl');\n  }; // register interpolator\n\n\n  interpolator$1.hsl = hsl;\n  var interpolate_hsx = _hsx;\n\n  var hsv = function (col1, col2, f) {\n    return interpolate_hsx(col1, col2, f, 'hsv');\n  }; // register interpolator\n\n\n  interpolator$1.hsv = hsv;\n  var Color$6 = Color_1;\n  var clip_rgb$1 = utils.clip_rgb;\n  var pow$4 = Math.pow;\n  var sqrt$1 = Math.sqrt;\n  var PI$1 = Math.PI;\n  var cos$2 = Math.cos;\n  var sin$2 = Math.sin;\n  var atan2$1 = Math.atan2;\n\n  var average = function (colors, mode, weights) {\n    if (mode === void 0) mode = 'lrgb';\n    if (weights === void 0) weights = null;\n    var l = colors.length;\n\n    if (!weights) {\n      weights = Array.from(new Array(l)).map(function () {\n        return 1;\n      });\n    } // normalize weights\n\n\n    var k = l / weights.reduce(function (a, b) {\n      return a + b;\n    });\n    weights.forEach(function (w, i) {\n      weights[i] *= k;\n    }); // convert colors to Color objects\n\n    colors = colors.map(function (c) {\n      return new Color$6(c);\n    });\n\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors, weights);\n    }\n\n    var first = colors.shift();\n    var xyz = first.get(mode);\n    var cnt = [];\n    var dx = 0;\n    var dy = 0; // initial color\n\n    for (var i = 0; i < xyz.length; i++) {\n      xyz[i] = (xyz[i] || 0) * weights[0];\n      cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        var A = xyz[i] / 180 * PI$1;\n        dx += cos$2(A) * weights[0];\n        dy += sin$2(A) * weights[0];\n      }\n    }\n\n    var alpha = first.alpha() * weights[0];\n    colors.forEach(function (c, ci) {\n      var xyz2 = c.get(mode);\n      alpha += c.alpha() * weights[ci + 1];\n\n      for (var i = 0; i < xyz.length; i++) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += weights[ci + 1];\n\n          if (mode.charAt(i) === 'h') {\n            var A = xyz2[i] / 180 * PI$1;\n            dx += cos$2(A) * weights[ci + 1];\n            dy += sin$2(A) * weights[ci + 1];\n          } else {\n            xyz[i] += xyz2[i] * weights[ci + 1];\n          }\n        }\n      }\n    });\n\n    for (var i$1 = 0; i$1 < xyz.length; i$1++) {\n      if (mode.charAt(i$1) === 'h') {\n        var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n\n        while (A$1 < 0) {\n          A$1 += 360;\n        }\n\n        while (A$1 >= 360) {\n          A$1 -= 360;\n        }\n\n        xyz[i$1] = A$1;\n      } else {\n        xyz[i$1] = xyz[i$1] / cnt[i$1];\n      }\n    }\n\n    alpha /= l;\n    return new Color$6(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n  };\n\n  var _average_lrgb = function (colors, weights) {\n    var l = colors.length;\n    var xyz = [0, 0, 0, 0];\n\n    for (var i = 0; i < colors.length; i++) {\n      var col = colors[i];\n      var f = weights[i] / l;\n      var rgb = col._rgb;\n      xyz[0] += pow$4(rgb[0], 2) * f;\n      xyz[1] += pow$4(rgb[1], 2) * f;\n      xyz[2] += pow$4(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n\n    xyz[0] = sqrt$1(xyz[0]);\n    xyz[1] = sqrt$1(xyz[1]);\n    xyz[2] = sqrt$1(xyz[2]);\n\n    if (xyz[3] > 0.9999999) {\n      xyz[3] = 1;\n    }\n\n    return new Color$6(clip_rgb$1(xyz));\n  }; // minimal multi-purpose interface\n  // @requires utils color analyze\n\n\n  var chroma$4 = chroma_1;\n  var type$2 = utils.type;\n  var pow$3 = Math.pow;\n\n  var scale$2 = function (colors) {\n    // constructor\n    var _mode = 'rgb';\n\n    var _nacol = chroma$4('#ccc');\n\n    var _spread = 0; // const _fixed = false;\n\n    var _domain = [0, 1];\n    var _pos = [];\n    var _padding = [0, 0];\n    var _classes = false;\n    var _colors = [];\n    var _out = false;\n    var _min = 0;\n    var _max = 1;\n    var _correctLightness = false;\n    var _colorCache = {};\n    var _useCache = true;\n    var _gamma = 1; // private methods\n\n    var setColors = function (colors) {\n      colors = colors || ['#fff', '#000'];\n\n      if (colors && type$2(colors) === 'string' && chroma$4.brewer && chroma$4.brewer[colors.toLowerCase()]) {\n        colors = chroma$4.brewer[colors.toLowerCase()];\n      }\n\n      if (type$2(colors) === 'array') {\n        // handle single color\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        } // make a copy of the colors\n\n\n        colors = colors.slice(0); // convert to chroma classes\n\n        for (var c = 0; c < colors.length; c++) {\n          colors[c] = chroma$4(colors[c]);\n        } // auto-fill color position\n\n\n        _pos.length = 0;\n\n        for (var c$1 = 0; c$1 < colors.length; c$1++) {\n          _pos.push(c$1 / (colors.length - 1));\n        }\n      }\n\n      resetCache();\n      return _colors = colors;\n    };\n\n    var getClass = function (value) {\n      if (_classes != null) {\n        var n = _classes.length - 1;\n        var i = 0;\n\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n\n        return i - 1;\n      }\n\n      return 0;\n    };\n\n    var tMapLightness = function (t) {\n      return t;\n    };\n\n    var tMapDomain = function (t) {\n      return t;\n    }; // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n\n    var getColor = function (val, bypassMap) {\n      var col, t;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          // find the class\n          var c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          // just interpolate between min/max\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      } // domain map\n\n\n      t = tMapDomain(t);\n\n      if (!bypassMap) {\n        t = tMapLightness(t); // lightness correction\n      }\n\n      if (_gamma !== 1) {\n        t = pow$3(t, _gamma);\n      }\n\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n      t = Math.min(1, Math.max(0, t));\n      var k = Math.floor(t * 10000);\n\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type$2(_colors) === 'array') {\n          //for i in [0.._pos.length-1]\n          for (var i = 0; i < _pos.length; i++) {\n            var p = _pos[i];\n\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma$4.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type$2(_colors) === 'function') {\n          col = _colors(t);\n        }\n\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n\n      return col;\n    };\n\n    var resetCache = function () {\n      return _colorCache = {};\n    };\n\n    setColors(colors); // public interface\n\n    var f = function (v) {\n      var c = chroma$4(getColor(v));\n\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n\n    f.classes = function (classes) {\n      if (classes != null) {\n        if (type$2(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          var d = chroma$4.analyze(_domain);\n\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma$4.limits(d, 'e', classes);\n          }\n        }\n\n        return f;\n      }\n\n      return _classes;\n    };\n\n    f.domain = function (domain) {\n      if (!arguments.length) {\n        return _domain;\n      }\n\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      var k = _colors.length;\n\n      if (domain.length === k && _min !== _max) {\n        // update positions\n        for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n          var d = list[i];\n\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (var c = 0; c < k; c++) {\n          _pos.push(c / (k - 1));\n        }\n\n        if (domain.length > 2) {\n          // set domain map\n          var tOut = domain.map(function (d, i) {\n            return i / (domain.length - 1);\n          });\n          var tBreaks = domain.map(function (d) {\n            return (d - _min) / (_max - _min);\n          });\n\n          if (!tBreaks.every(function (val, i) {\n            return tOut[i] === val;\n          })) {\n            tMapDomain = function (t) {\n              if (t <= 0 || t >= 1) {\n                return t;\n              }\n\n              var i = 0;\n\n              while (t >= tBreaks[i + 1]) {\n                i++;\n              }\n\n              var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n              var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n              return out;\n            };\n          }\n        }\n      }\n\n      _domain = [_min, _max];\n      return f;\n    };\n\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n\n    f.range = function (colors, _pos) {\n      setColors(colors);\n      return f;\n    };\n\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n\n      _spread = val;\n      return f;\n    };\n\n    f.correctLightness = function (v) {\n      if (v == null) {\n        v = true;\n      }\n\n      _correctLightness = v;\n      resetCache();\n\n      if (_correctLightness) {\n        tMapLightness = function (t) {\n          var L0 = getColor(0, true).lab()[0];\n          var L1 = getColor(1, true).lab()[0];\n          var pol = L0 > L1;\n          var L_actual = getColor(t, true).lab()[0];\n          var L_ideal = L0 + (L1 - L0) * t;\n          var L_diff = L_actual - L_ideal;\n          var t0 = 0;\n          var t1 = 1;\n          var max_iter = 20;\n\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {\n                L_diff *= -1;\n              }\n\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n\n          return t;\n        };\n      } else {\n        tMapLightness = function (t) {\n          return t;\n        };\n      }\n\n      return f;\n    };\n\n    f.padding = function (p) {\n      if (p != null) {\n        if (type$2(p) === 'number') {\n          p = [p, p];\n        }\n\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n\n    f.colors = function (numColors, out) {\n      // If no arguments are given, return the original colors that were provided\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n\n      var result = [];\n\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        var dm = _domain[0];\n        var dd = _domain[1] - dm;\n        result = __range__(0, numColors, false).map(function (i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        // returns all colors based on the defined classes\n        colors = [];\n        var samples = [];\n\n        if (_classes && _classes.length > 2) {\n          for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n\n        result = samples.map(function (v) {\n          return f(v);\n        });\n      }\n\n      if (chroma$4[out]) {\n        result = result.map(function (c) {\n          return c[out]();\n        });\n      }\n\n      return result;\n    };\n\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma$4(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n\n    return f;\n  };\n\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n\n    return range;\n  } //\n  // interpolates between a set of colors uzing a bezier spline\n  //\n  // @requires utils lab\n\n\n  var Color$5 = Color_1;\n  var scale$1 = scale$2; // nth row of the pascal triangle\n\n  var binom_row = function (n) {\n    var row = [1, 1];\n\n    for (var i = 1; i < n; i++) {\n      var newrow = [1];\n\n      for (var j = 1; j <= row.length; j++) {\n        newrow[j] = (row[j] || 0) + row[j - 1];\n      }\n\n      row = newrow;\n    }\n\n    return row;\n  };\n\n  var bezier = function (colors) {\n    var assign, assign$1, assign$2;\n    var I, lab0, lab1, lab2;\n    colors = colors.map(function (c) {\n      return new Color$5(c);\n    });\n\n    if (colors.length === 2) {\n      // linear interpolation\n      assign = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign[0], lab1 = assign[1];\n\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return lab0[i] + t * (lab1[i] - lab0[i]);\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length === 3) {\n      // quadratic bezier interpolation\n      assign$1 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2];\n\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i];\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length === 4) {\n      // cubic bezier interpolation\n      var lab3;\n      assign$2 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3];\n\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i];\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length >= 5) {\n      // general case (degree n bezier)\n      var labs, row, n;\n      labs = colors.map(function (c) {\n        return c.lab();\n      });\n      n = colors.length - 1;\n      row = binom_row(n);\n\n      I = function (t) {\n        var u = 1 - t;\n        var lab = [0, 1, 2].map(function (i) {\n          return labs.reduce(function (sum, el, j) {\n            return sum + row[j] * Math.pow(u, n - j) * Math.pow(t, j) * el[i];\n          }, 0);\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else {\n      throw new RangeError(\"No point in running bezier with only one color.\");\n    }\n\n    return I;\n  };\n\n  var bezier_1 = function (colors) {\n    var f = bezier(colors);\n\n    f.scale = function () {\n      return scale$1(f);\n    };\n\n    return f;\n  };\n  /*\n   * interpolates between a set of colors uzing a bezier spline\n   * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n   */\n\n\n  var chroma$3 = chroma_1;\n\n  var blend = function (bottom, top, mode) {\n    if (!blend[mode]) {\n      throw new Error('unknown blend mode ' + mode);\n    }\n\n    return blend[mode](bottom, top);\n  };\n\n  var blend_f = function (f) {\n    return function (bottom, top) {\n      var c0 = chroma$3(top).rgb();\n      var c1 = chroma$3(bottom).rgb();\n      return chroma$3.rgb(f(c0, c1));\n    };\n  };\n\n  var each = function (f) {\n    return function (c0, c1) {\n      var out = [];\n      out[0] = f(c0[0], c1[0]);\n      out[1] = f(c0[1], c1[1]);\n      out[2] = f(c0[2], c1[2]);\n      return out;\n    };\n  };\n\n  var normal = function (a) {\n    return a;\n  };\n\n  var multiply = function (a, b) {\n    return a * b / 255;\n  };\n\n  var darken = function (a, b) {\n    return a > b ? b : a;\n  };\n\n  var lighten = function (a, b) {\n    return a > b ? a : b;\n  };\n\n  var screen = function (a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  var overlay = function (a, b) {\n    return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n  };\n\n  var burn = function (a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  var dodge = function (a, b) {\n    if (a === 255) {\n      return 255;\n    }\n\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  }; // # add = (a,b) ->\n  // #     if (a + b > 255) then 255 else a + b\n\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn)); // blend.add = blend_f(each(add));\n\n  var blend_1 = blend; // cubehelix interpolation\n  // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n  // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n  var type$1 = utils.type;\n  var clip_rgb = utils.clip_rgb;\n  var TWOPI = utils.TWOPI;\n  var pow$2 = Math.pow;\n  var sin$1 = Math.sin;\n  var cos$1 = Math.cos;\n  var chroma$2 = chroma_1;\n\n  var cubehelix = function (start, rotations, hue, gamma, lightness) {\n    if (start === void 0) start = 300;\n    if (rotations === void 0) rotations = -1.5;\n    if (hue === void 0) hue = 1;\n    if (gamma === void 0) gamma = 1;\n    if (lightness === void 0) lightness = [0, 1];\n    var dh = 0,\n        dl;\n\n    if (type$1(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n\n    var f = function (fract) {\n      var a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      var l = pow$2(lightness[0] + dl * fract, gamma);\n      var h = dh !== 0 ? hue[0] + fract * dh : hue;\n      var amp = h * l * (1 - l) / 2;\n      var cos_a = cos$1(a);\n      var sin_a = sin$1(a);\n      var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      var b = l + amp * (+1.97294 * cos_a);\n      return chroma$2(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n\n    f.start = function (s) {\n      if (s == null) {\n        return start;\n      }\n\n      start = s;\n      return f;\n    };\n\n    f.rotations = function (r) {\n      if (r == null) {\n        return rotations;\n      }\n\n      rotations = r;\n      return f;\n    };\n\n    f.gamma = function (g) {\n      if (g == null) {\n        return gamma;\n      }\n\n      gamma = g;\n      return f;\n    };\n\n    f.hue = function (h) {\n      if (h == null) {\n        return hue;\n      }\n\n      hue = h;\n\n      if (type$1(hue) === 'array') {\n        dh = hue[1] - hue[0];\n\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n\n      return f;\n    };\n\n    f.lightness = function (h) {\n      if (h == null) {\n        return lightness;\n      }\n\n      if (type$1(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n\n      return f;\n    };\n\n    f.scale = function () {\n      return chroma$2.scale(f);\n    };\n\n    f.hue(hue);\n    return f;\n  };\n\n  var Color$4 = Color_1;\n  var digits = '0123456789abcdef';\n  var floor$1 = Math.floor;\n  var random = Math.random;\n\n  var random_1 = function () {\n    var code = '#';\n\n    for (var i = 0; i < 6; i++) {\n      code += digits.charAt(floor$1(random() * 16));\n    }\n\n    return new Color$4(code, 'hex');\n  };\n\n  var type = type$n;\n  var log = Math.log;\n  var pow$1 = Math.pow;\n  var floor = Math.floor;\n  var abs$1 = Math.abs;\n\n  var analyze = function (data, key) {\n    if (key === void 0) key = null;\n    var r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n\n    if (type(data) === 'object') {\n      data = Object.values(data);\n    }\n\n    data.forEach(function (val) {\n      if (key && type(val) === 'object') {\n        val = val[key];\n      }\n\n      if (val !== undefined && val !== null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n\n        if (val < r.min) {\n          r.min = val;\n        }\n\n        if (val > r.max) {\n          r.max = val;\n        }\n\n        r.count += 1;\n      }\n    });\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {\n      return limits(r, mode, num);\n    };\n\n    return r;\n  };\n\n  var limits = function (data, mode, num) {\n    if (mode === void 0) mode = 'equal';\n    if (num === void 0) num = 7;\n\n    if (type(data) == 'array') {\n      data = analyze(data);\n    }\n\n    var min = data.min;\n    var max = data.max;\n    var values = data.values.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (num === 1) {\n      return [min, max];\n    }\n\n    var limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n      // continuous\n      limits.push(min);\n      limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n      // equal interval\n      limits.push(min);\n\n      for (var i = 1; i < num; i++) {\n        limits.push(min + i / num * (max - min));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      // log scale\n      if (min <= 0) {\n        throw new Error('Logarithmic scales are only possible for values > 0');\n      }\n\n      var min_log = Math.LOG10E * log(min);\n      var max_log = Math.LOG10E * log(max);\n      limits.push(min);\n\n      for (var i$1 = 1; i$1 < num; i$1++) {\n        limits.push(pow$1(10, min_log + i$1 / num * (max_log - min_log)));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      // quantile scale\n      limits.push(min);\n\n      for (var i$2 = 1; i$2 < num; i$2++) {\n        var p = (values.length - 1) * i$2 / num;\n        var pb = floor(p);\n\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          // p > pb\n          var pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      // k-means clustering\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n      var cluster;\n      var n = values.length;\n      var assignments = new Array(n);\n      var clusterSizes = new Array(num);\n      var repeat = true;\n      var nb_iters = 0;\n      var centroids = null; // get seed values\n\n      centroids = [];\n      centroids.push(min);\n\n      for (var i$3 = 1; i$3 < num; i$3++) {\n        centroids.push(min + i$3 / num * (max - min));\n      }\n\n      centroids.push(max);\n\n      while (repeat) {\n        // assignment step\n        for (var j = 0; j < num; j++) {\n          clusterSizes[j] = 0;\n        }\n\n        for (var i$4 = 0; i$4 < n; i$4++) {\n          var value = values[i$4];\n          var mindist = Number.MAX_VALUE;\n          var best = void 0;\n\n          for (var j$1 = 0; j$1 < num; j$1++) {\n            var dist = abs$1(centroids[j$1] - value);\n\n            if (dist < mindist) {\n              mindist = dist;\n              best = j$1;\n            }\n\n            clusterSizes[best]++;\n            assignments[i$4] = best;\n          }\n        } // update centroids step\n\n\n        var newCentroids = new Array(num);\n\n        for (var j$2 = 0; j$2 < num; j$2++) {\n          newCentroids[j$2] = null;\n        }\n\n        for (var i$5 = 0; i$5 < n; i$5++) {\n          cluster = assignments[i$5];\n\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i$5];\n          } else {\n            newCentroids[cluster] += values[i$5];\n          }\n        }\n\n        for (var j$3 = 0; j$3 < num; j$3++) {\n          newCentroids[j$3] *= 1 / clusterSizes[j$3];\n        } // check convergence\n\n\n        repeat = false;\n\n        for (var j$4 = 0; j$4 < num; j$4++) {\n          if (newCentroids[j$4] !== centroids[j$4]) {\n            repeat = true;\n            break;\n          }\n        }\n\n        centroids = newCentroids;\n        nb_iters++;\n\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      } // finished k-means clustering\n      // the next part is borrowed from gabrielflor.it\n\n\n      var kClusters = {};\n\n      for (var j$5 = 0; j$5 < num; j$5++) {\n        kClusters[j$5] = [];\n      }\n\n      for (var i$6 = 0; i$6 < n; i$6++) {\n        cluster = assignments[i$6];\n        kClusters[cluster].push(values[i$6]);\n      }\n\n      var tmpKMeansBreaks = [];\n\n      for (var j$6 = 0; j$6 < num; j$6++) {\n        tmpKMeansBreaks.push(kClusters[j$6][0]);\n        tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\n      }\n\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n\n      for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\n        var v = tmpKMeansBreaks[i$7];\n\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n\n    return limits;\n  };\n\n  var analyze_1 = {\n    analyze: analyze,\n    limits: limits\n  };\n  var Color$3 = Color_1;\n\n  var contrast = function (a, b) {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color$3(a);\n    b = new Color$3(b);\n    var l1 = a.luminance();\n    var l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n  };\n\n  var Color$2 = Color_1;\n  var sqrt = Math.sqrt;\n  var pow = Math.pow;\n  var min = Math.min;\n  var max = Math.max;\n  var atan2 = Math.atan2;\n  var abs = Math.abs;\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var exp = Math.exp;\n  var PI = Math.PI;\n\n  var deltaE = function (a, b, Kl, Kc, Kh) {\n    if (Kl === void 0) Kl = 1;\n    if (Kc === void 0) Kc = 1;\n    if (Kh === void 0) Kh = 1; // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n\n    var rad2deg = function (rad) {\n      return 360 * rad / (2 * PI);\n    };\n\n    var deg2rad = function (deg) {\n      return 2 * PI * deg / 360;\n    };\n\n    a = new Color$2(a);\n    b = new Color$2(b);\n    var ref = Array.from(a.lab());\n    var L1 = ref[0];\n    var a1 = ref[1];\n    var b1 = ref[2];\n    var ref$1 = Array.from(b.lab());\n    var L2 = ref$1[0];\n    var a2 = ref$1[1];\n    var b2 = ref$1[2];\n    var avgL = (L1 + L2) / 2;\n    var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    var avgC = (C1 + C2) / 2;\n    var G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    var a1p = a1 * (1 + G);\n    var a2p = a2 * (1 + G);\n    var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    var avgCp = (C1p + C2p) / 2;\n    var arctan1 = rad2deg(atan2(b1, a1p));\n    var arctan2 = rad2deg(atan2(b2, a2p));\n    var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    var T = 1 - 0.17 * cos(deg2rad(avgHp - 30)) + 0.24 * cos(deg2rad(2 * avgHp)) + 0.32 * cos(deg2rad(3 * avgHp + 6)) - 0.2 * cos(deg2rad(4 * avgHp - 63));\n    var deltaHp = h2p - h1p;\n    deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    var deltaL = L2 - L1;\n    var deltaCp = C2p - C1p;\n    var sl = 1 + 0.015 * pow(avgL - 50, 2) / sqrt(20 + pow(avgL - 50, 2));\n    var sc = 1 + 0.045 * avgCp;\n    var sh = 1 + 0.015 * avgCp * T;\n    var deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    var Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    var Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    var result = sqrt(pow(deltaL / (Kl * sl), 2) + pow(deltaCp / (Kc * sc), 2) + pow(deltaHp / (Kh * sh), 2) + Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh)));\n    return max(0, min(100, result));\n  };\n\n  var Color$1 = Color_1; // simple Euclidean distance\n\n  var distance = function (a, b, mode) {\n    if (mode === void 0) mode = 'lab'; // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n\n    a = new Color$1(a);\n    b = new Color$1(b);\n    var l1 = a.get(mode);\n    var l2 = b.get(mode);\n    var sum_sq = 0;\n\n    for (var i in l1) {\n      var d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n\n    return Math.sqrt(sum_sq);\n  };\n\n  var Color = Color_1;\n\n  var valid = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    try {\n      new (Function.prototype.bind.apply(Color, [null].concat(args)))();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }; // some pre-defined color scales:\n\n\n  var chroma$1 = chroma_1;\n  var scale = scale$2;\n  var scales = {\n    cool: function cool() {\n      return scale([chroma$1.hsl(180, 1, .9), chroma$1.hsl(250, .7, .4)]);\n    },\n    hot: function hot() {\n      return scale(['#000', '#f00', '#ff0', '#fff']).mode('rgb');\n    }\n  };\n  /**\n      ColorBrewer colors for chroma.js\n       Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n      Pennsylvania State University.\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n       Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  */\n\n  var colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  }; // add lowercase aliases for case-insensitive matches\n\n  for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n    var key = list[i];\n    colorbrewer[key.toLowerCase()] = colorbrewer[key];\n  }\n\n  var colorbrewer_1 = colorbrewer;\n  var chroma = chroma_1; // feel free to comment out anything to rollup\n  // a smaller chroma.js built\n  // io --> convert colors\n  // operators --> modify existing Colors\n  // interpolators\n  // generators -- > create new colors\n\n  chroma.average = average;\n  chroma.bezier = bezier_1;\n  chroma.blend = blend_1;\n  chroma.cubehelix = cubehelix;\n  chroma.mix = chroma.interpolate = mix$1;\n  chroma.random = random_1;\n  chroma.scale = scale$2; // other utility methods\n\n  chroma.analyze = analyze_1.analyze;\n  chroma.contrast = contrast;\n  chroma.deltaE = deltaE;\n  chroma.distance = distance;\n  chroma.limits = analyze_1.limits;\n  chroma.valid = valid; // scale\n\n  chroma.scales = scales; // colors\n\n  chroma.colors = w3cx11_1;\n  chroma.brewer = colorbrewer_1;\n  var chroma_js = chroma;\n  return chroma_js;\n});","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/React Apps/z-color-palette/node_modules/chroma-js/chroma.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","chroma","limit$2","x","min","max","limit$1","clip_rgb$3","rgb","_clipped","_unclipped","slice","i","classToType","i$1","list$1","length","name","toLowerCase","type$n","obj","Object","prototype","toString","call","type$m","unpack$v","args","keyOrder","Array","split","filter","k","undefined","map","type$l","last$4","l","PI$2","Math","PI","utils","clip_rgb","limit","type","unpack","last","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$f","format","autodetect","last$3","clip_rgb$2","type$k","_input","Color$A","Color","len","arguments","me","constructor","mode","sorted","sort","a","b","p","list","chk","test","apply","_rgb","Error","push","hex","join","Color_1","chroma$i","Function","bind","concat","version","chroma_1","unpack$u","max$2","rgb2cmyk$1","ref","r","g","f","c","m","y","rgb2cmyk_1","unpack$t","cmyk2rgb","alpha","cmyk2rgb_1","chroma$h","Color$z","input$e","unpack$s","type$j","rgb2cmyk","cmyk","unpack$r","last$2","rnd","round","hsl2css$1","hsla","hsl2css_1","unpack$q","rgb2hsl$3","s","h","Number","NaN","rgb2hsl_1","unpack$p","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css$1","rgba","substr","rgb2css_1","unpack$o","round$5","hsl2rgb$1","assign","t3","t2","t1","h_","hsl2rgb_1","hsl2rgb","input$d","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","trim","named","e","match","rgb$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","chroma$g","Color$y","input$c","type$i","rgb2css","css2rgb","rest","Color$x","chroma$f","input$b","unpack$n","gl","unpack$m","rgb2hcg$1","delta","_g","rgb2hcg_1","unpack$l","floor$3","floor","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","hcg2rgb_1","unpack$k","type$h","chroma$e","Color$w","input$a","rgb2hcg","hcg","unpack$j","round$3","rgb2hex$2","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb$1","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","chroma$d","Color$v","type$g","input$9","rgb2hex$1","indexOf","unpack$i","TWOPI$2","min$2","sqrt$4","sqrt","acos","rgb2hsi$1","min_","rgb2hsi_1","unpack$h","TWOPI$1","cos$4","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$g","type$f","chroma$c","Color$u","input$8","rgb2hsi","hsi","unpack$f","type$e","chroma$b","Color$t","input$7","rgb2hsl$1","unpack$e","min$1","max$1","rgb2hsl","max_","rgb2hsv$1","unpack$d","floor$2","hsv2rgb","hsv2rgb_1","unpack$c","type$d","chroma$a","Color$s","input$6","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$b","pow$8","pow","rgb2lab$2","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","LAB_CONSTANTS$2","unpack$a","pow$7","lab2rgb$1","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$9","type$c","chroma$9","Color$r","input$5","rgb2lab$1","lab","unpack$8","sqrt$3","atan2$2","atan2","round$2","lab2lch$1","lab2lch_1","unpack$7","rgb2lab","lab2lch","rgb2lch$1","rgb2lch_1","unpack$6","sin$3","sin","cos$3","lch2lab$1","lch2lab_1","unpack$5","lch2lab","lab2rgb","lch2rgb$1","L","lch2rgb_1","unpack$4","lch2rgb","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$3","type$b","chroma$8","Color$q","input$4","rgb2lch","lch","forEach","w3cx11$1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","Color$p","input$3","type$a","w3cx11","hex2rgb","rgb2hex","keys","n","unpack$2","rgb2num$1","rgb2num_1","type$9","num2rgb","num","num2rgb_1","chroma$7","Color$o","input$2","type$8","rgb2num","chroma$6","Color$n","input$1","unpack$1","type$7","round$1","log$1","log","temperature2rgb$1","kelvin","temp","temperature2rgb_1","temperature2rgb","rgb2temperature$1","minTemp","maxTemp","eps","rgb2temperature_1","chroma$5","Color$m","input","rgb2temperature","temperature","Color$l","type$6","mutate","Color$k","clipped","Color$j","LAB_CONSTANTS$1","darken","amount","brighten","darker","brighter","Color$i","get","mc","channel","src","Color$h","type$5","pow$6","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator$1","Color$g","type$4","interpolator","mix$1","col1","col2","Color$f","mix","Color$e","premultiply","Color$d","LAB_CONSTANTS","saturate","desaturate","Color$c","type$3","set","value","charAt","out","Color$b","xyz0","xyz1","Color$a","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$9","Color$8","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","interpolate_hsx$4","Color$7","c1","c2","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","Color$5","scale$1","binom_row","row","newrow","j","bezier","I","lab0","lab1","lab2","lab3","labs","sum","el","RangeError","bezier_1","scale","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","lighten","screen","overlay","burn","dodge","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","Color$4","digits","floor$1","random","random_1","code","pow$1","abs$1","data","key","MAX_VALUE","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","contrast","l1","l2","Color$2","exp","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","C1","C2","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rc","Rt","Color$1","distance","sum_sq","valid","chroma$1","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewer_1","chroma_js"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC,UAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AACxB,SAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACH,OAAD,CAAnD,IACCD,MAAM,GAAG,OAAOM,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiDN,MAAM,IAAIO,IAApE,EAA0EP,MAAM,CAACQ,MAAP,GAAgBP,OAAO,EADlG,CADA;AAGH,CAJD,EAIG,IAJH,EAIU,YAAY;AAAE;;AAEpB,MAAIQ,OAAO,GAAG,UAAUC,CAAV,EAAaC,GAAb,EAAkBC,GAAlB,EAAuB;AACjC,QAAKD,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,CAAJ;AACtB,QAAKC,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,CAAJ;AAEtB,WAAOF,CAAC,GAAGC,GAAJ,GAAUA,GAAV,GAAgBD,CAAC,GAAGE,GAAJ,GAAUA,GAAV,GAAgBF,CAAvC;AACH,GALD;;AAOA,MAAIG,OAAO,GAAGJ,OAAd;;AAEA,MAAIK,UAAU,GAAG,UAAUC,GAAV,EAAe;AAC5BA,IAAAA,GAAG,CAACC,QAAJ,GAAe,KAAf;AACAD,IAAAA,GAAG,CAACE,UAAJ,GAAiBF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAjB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACrB,UAAIA,CAAC,GAAG,CAAR,EAAW;AACP,YAAIJ,GAAG,CAACI,CAAD,CAAH,GAAS,CAAT,IAAcJ,GAAG,CAACI,CAAD,CAAH,GAAS,GAA3B,EAAgC;AAAEJ,UAAAA,GAAG,CAACC,QAAJ,GAAe,IAAf;AAAsB;;AACxDD,QAAAA,GAAG,CAACI,CAAD,CAAH,GAASN,OAAO,CAACE,GAAG,CAACI,CAAD,CAAJ,EAAS,CAAT,EAAY,GAAZ,CAAhB;AACH,OAHD,MAGO,IAAIA,CAAC,KAAK,CAAV,EAAa;AAChBJ,QAAAA,GAAG,CAACI,CAAD,CAAH,GAASN,OAAO,CAACE,GAAG,CAACI,CAAD,CAAJ,EAAS,CAAT,EAAY,CAAZ,CAAhB;AACH;AACJ;;AACD,WAAOJ,GAAP;AACH,GAZD,CAXkB,CAyBlB;;;AACA,MAAIK,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAV,EAAaC,MAAM,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,UAAhC,EAA4C,OAA5C,EAAqD,MAArD,EAA6D,QAA7D,EAAuE,WAAvE,EAAoF,MAApF,CAA3B,EAAwHD,GAAG,GAAGC,MAAM,CAACC,MAArI,EAA6IF,GAAG,IAAI,CAApJ,EAAuJ;AACnJ,QAAIG,IAAI,GAAGF,MAAM,CAACD,GAAD,CAAjB;AAEAD,IAAAA,WAAW,CAAE,aAAaI,IAAb,GAAoB,GAAtB,CAAX,GAAyCA,IAAI,CAACC,WAAL,EAAzC;AACH;;AACD,MAAIC,MAAM,GAAG,UAASC,GAAT,EAAc;AACvB,WAAOP,WAAW,CAACQ,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,CAAD,CAAX,IAAoD,QAA3D;AACH,GAFD;;AAIA,MAAIK,MAAM,GAAGN,MAAb;;AAEA,MAAIO,QAAQ,GAAG,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACrC,QAAKA,QAAQ,KAAK,KAAK,CAAvB,EAA2BA,QAAQ,GAAC,IAAT,CADU,CAGxC;;AACG,QAAID,IAAI,CAACX,MAAL,IAAe,CAAnB,EAAsB;AAAE,aAAOa,KAAK,CAACP,SAAN,CAAgBX,KAAhB,CAAsBa,IAAtB,CAA2BG,IAA3B,CAAP;AAA0C,KAJ7B,CAKrC;AACA;;;AACH,QAAIF,MAAM,CAACE,IAAI,CAAC,CAAD,CAAL,CAAN,IAAmB,QAAnB,IAA+BC,QAAnC,EAA6C;AAC5C,aAAOA,QAAQ,CAACE,KAAT,CAAe,EAAf,EACLC,MADK,CACE,UAAUC,CAAV,EAAa;AAAE,eAAOL,IAAI,CAAC,CAAD,CAAJ,CAAQK,CAAR,MAAeC,SAAtB;AAAkC,OADnD,EAELC,GAFK,CAED,UAAUF,CAAV,EAAa;AAAE,eAAOL,IAAI,CAAC,CAAD,CAAJ,CAAQK,CAAR,CAAP;AAAoB,OAFlC,CAAP;AAGA,KAXuC,CAYxC;AACA;;;AACG,WAAOL,IAAI,CAAC,CAAD,CAAX;AACH,GAfD;;AAiBA,MAAIQ,MAAM,GAAGhB,MAAb;;AAEA,MAAIiB,MAAM,GAAG,UAAUT,IAAV,EAAgB;AACzB,QAAIA,IAAI,CAACX,MAAL,GAAc,CAAlB,EAAqB;AAAE,aAAO,IAAP;AAAc;;AACrC,QAAIqB,CAAC,GAAGV,IAAI,CAACX,MAAL,GAAY,CAApB;;AACA,QAAImB,MAAM,CAACR,IAAI,CAACU,CAAD,CAAL,CAAN,IAAmB,QAAvB,EAAiC;AAAE,aAAOV,IAAI,CAACU,CAAD,CAAJ,CAAQnB,WAAR,EAAP;AAA+B;;AAClE,WAAO,IAAP;AACH,GALD;;AAOA,MAAIoB,IAAI,GAAGC,IAAI,CAACC,EAAhB;AAEA,MAAIC,KAAK,GAAG;AACXC,IAAAA,QAAQ,EAAEnC,UADC;AAEXoC,IAAAA,KAAK,EAAEzC,OAFI;AAGX0C,IAAAA,IAAI,EAAEzB,MAHK;AAIX0B,IAAAA,MAAM,EAAEnB,QAJG;AAKXoB,IAAAA,IAAI,EAAEV,MALK;AAMXI,IAAAA,EAAE,EAAEF,IANO;AAOXS,IAAAA,KAAK,EAAET,IAAI,GAAC,CAPD;AAQXU,IAAAA,OAAO,EAAEV,IAAI,GAAC,CARH;AASXW,IAAAA,OAAO,EAAEX,IAAI,GAAG,GATL;AAUXY,IAAAA,OAAO,EAAE,MAAMZ;AAVJ,GAAZ;AAaA,MAAIa,OAAO,GAAG;AACbC,IAAAA,MAAM,EAAE,EADK;AAEbC,IAAAA,UAAU,EAAE;AAFC,GAAd;AAKA,MAAIC,MAAM,GAAGb,KAAK,CAACK,IAAnB;AACA,MAAIS,UAAU,GAAGd,KAAK,CAACC,QAAvB;AACA,MAAIc,MAAM,GAAGf,KAAK,CAACG,IAAnB;AACA,MAAIa,MAAM,GAAGN,OAAb;;AAEA,MAAIO,OAAO,GAAG,SAASC,KAAT,GAAiB;AAC3B,QAAIhC,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAIE,EAAE,GAAG,IAAT;;AACA,QAAIN,MAAM,CAAC7B,IAAI,CAAC,CAAD,CAAL,CAAN,KAAoB,QAApB,IACAA,IAAI,CAAC,CAAD,CAAJ,CAAQoC,WADR,IAEApC,IAAI,CAAC,CAAD,CAAJ,CAAQoC,WAAR,KAAwB,KAAKA,WAFjC,EAE8C;AAC1C;AACA,aAAOpC,IAAI,CAAC,CAAD,CAAX;AACH,KAV0B,CAY3B;;;AACA,QAAIqC,IAAI,GAAGV,MAAM,CAAC3B,IAAD,CAAjB;AACA,QAAI0B,UAAU,GAAG,KAAjB;;AAEA,QAAI,CAACW,IAAL,EAAW;AACPX,MAAAA,UAAU,GAAG,IAAb;;AACA,UAAI,CAACI,MAAM,CAACQ,MAAZ,EAAoB;AAChBR,QAAAA,MAAM,CAACJ,UAAP,GAAoBI,MAAM,CAACJ,UAAP,CAAkBa,IAAlB,CAAuB,UAAUC,CAAV,EAAYC,CAAZ,EAAe;AAAE,iBAAOA,CAAC,CAACC,CAAF,GAAMF,CAAC,CAACE,CAAf;AAAmB,SAA3D,CAApB;AACAZ,QAAAA,MAAM,CAACQ,MAAP,GAAgB,IAAhB;AACH,OALM,CAMP;;;AACA,WAAK,IAAIrD,CAAC,GAAG,CAAR,EAAW0D,IAAI,GAAGb,MAAM,CAACJ,UAA9B,EAA0CzC,CAAC,GAAG0D,IAAI,CAACtD,MAAnD,EAA2DJ,CAAC,IAAI,CAAhE,EAAmE;AAC/D,YAAI2D,GAAG,GAAGD,IAAI,CAAC1D,CAAD,CAAd;AAEAoD,QAAAA,IAAI,GAAGO,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAeF,GAAf,EAAoB5C,IAApB,CAAP;;AACA,YAAIqC,IAAJ,EAAU;AAAE;AAAQ;AACvB;AACJ;;AAED,QAAIP,MAAM,CAACL,MAAP,CAAcY,IAAd,CAAJ,EAAyB;AACrB,UAAIxD,GAAG,GAAGiD,MAAM,CAACL,MAAP,CAAcY,IAAd,EAAoBS,KAApB,CAA0B,IAA1B,EAAgCpB,UAAU,GAAG1B,IAAH,GAAUA,IAAI,CAAChB,KAAL,CAAW,CAAX,EAAa,CAAC,CAAd,CAApD,CAAV;;AACAmD,MAAAA,EAAE,CAACY,IAAH,GAAUnB,UAAU,CAAC/C,GAAD,CAApB;AACH,KAHD,MAGO;AACH,YAAM,IAAImE,KAAJ,CAAU,qBAAmBhD,IAA7B,CAAN;AACH,KApC0B,CAsC3B;;;AACA,QAAImC,EAAE,CAACY,IAAH,CAAQ1D,MAAR,KAAmB,CAAvB,EAA0B;AAAE8C,MAAAA,EAAE,CAACY,IAAH,CAAQE,IAAR,CAAa,CAAb;AAAkB;AACjD,GAxCD;;AA0CAlB,EAAAA,OAAO,CAACpC,SAAR,CAAkBC,QAAlB,GAA6B,SAASA,QAAT,GAAqB;AAC9C,QAAIiC,MAAM,CAAC,KAAKqB,GAAN,CAAN,IAAoB,UAAxB,EAAoC;AAAE,aAAO,KAAKA,GAAL,EAAP;AAAoB;;AAC1D,WAAQ,MAAO,KAAKH,IAAL,CAAUI,IAAV,CAAe,GAAf,CAAP,GAA8B,GAAtC;AACH,GAHD;;AAKA,MAAIC,OAAO,GAAGrB,OAAd;;AAEA,MAAIsB,QAAQ,GAAG,YAAY;AAC1B,QAAIrD,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BO,QAAQ,CAACrB,KAAxC,EAA+C,CAAE,IAAF,EAASwB,MAAT,CAAiBxD,IAAjB,CAA/C,CAAL,GAAP;AACA,GALD;;AAOAqD,EAAAA,QAAQ,CAACrB,KAAT,GAAiBoB,OAAjB;AACAC,EAAAA,QAAQ,CAACI,OAAT,GAAmB,OAAnB;AAEA,MAAIC,QAAQ,GAAGL,QAAf;AAEA,MAAIM,QAAQ,GAAG7C,KAAK,CAACI,MAArB;AACA,MAAI0C,KAAK,GAAGhD,IAAI,CAAClC,GAAjB;;AAEA,MAAImF,UAAU,GAAG,YAAY;AACzB,QAAI7D,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAGH,QAAQ,CAAC3D,IAAD,EAAO,KAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACAC,IAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AACAC,IAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AACAvB,IAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AACA,QAAIpC,CAAC,GAAG,IAAIuD,KAAK,CAACG,CAAD,EAAGH,KAAK,CAACI,CAAD,EAAGvB,CAAH,CAAR,CAAjB;AACA,QAAIwB,CAAC,GAAG5D,CAAC,GAAG,CAAJ,GAAQ,KAAK,IAAEA,CAAP,CAAR,GAAoB,CAA5B;AACA,QAAI6D,CAAC,GAAG,CAAC,IAAEH,CAAF,GAAI1D,CAAL,IAAU4D,CAAlB;AACA,QAAIE,CAAC,GAAG,CAAC,IAAEH,CAAF,GAAI3D,CAAL,IAAU4D,CAAlB;AACA,QAAIG,CAAC,GAAG,CAAC,IAAE3B,CAAF,GAAIpC,CAAL,IAAU4D,CAAlB;AACA,WAAO,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO/D,CAAP,CAAP;AACH,GAjBD;;AAmBA,MAAIgE,UAAU,GAAGR,UAAjB;AAEA,MAAIS,QAAQ,GAAGxD,KAAK,CAACI,MAArB;;AAEA,MAAIqD,QAAQ,GAAG,YAAY;AACvB,QAAIvE,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,IAAAA,IAAI,GAAGsE,QAAQ,CAACtE,IAAD,EAAO,MAAP,CAAf;AACA,QAAIkE,CAAC,GAAGlE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAImE,CAAC,GAAGnE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIoE,CAAC,GAAGpE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIK,CAAC,GAAGL,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIwE,KAAK,GAAGxE,IAAI,CAACX,MAAL,GAAc,CAAd,GAAkBW,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAAxC;;AACA,QAAIK,CAAC,KAAK,CAAV,EAAa;AAAE,aAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAOmE,KAAP,CAAP;AAAuB;;AACtC,WAAO,CACHN,CAAC,IAAI,CAAL,GAAS,CAAT,GAAa,OAAO,IAAEA,CAAT,KAAe,IAAE7D,CAAjB,CADV,EAC+B;AAClC8D,IAAAA,CAAC,IAAI,CAAL,GAAS,CAAT,GAAa,OAAO,IAAEA,CAAT,KAAe,IAAE9D,CAAjB,CAFV,EAE+B;AAClC+D,IAAAA,CAAC,IAAI,CAAL,GAAS,CAAT,GAAa,OAAO,IAAEA,CAAT,KAAe,IAAE/D,CAAjB,CAHV,EAG+B;AAClCmE,IAAAA,KAJG,CAAP;AAMH,GAjBD;;AAmBA,MAAIC,UAAU,GAAGF,QAAjB;AAEA,MAAIG,QAAQ,GAAGhB,QAAf;AACA,MAAIiB,OAAO,GAAGvB,OAAd;AACA,MAAIwB,OAAO,GAAGpD,OAAd;AACA,MAAIqD,QAAQ,GAAG/D,KAAK,CAACI,MAArB;AACA,MAAI4D,MAAM,GAAGhE,KAAK,CAACG,IAAnB;AAEA,MAAI8D,QAAQ,GAAGV,UAAf;;AAEAM,EAAAA,OAAO,CAAChF,SAAR,CAAkBqF,IAAlB,GAAyB,YAAW;AAChC,WAAOD,QAAQ,CAAC,KAAKhC,IAAN,CAAf;AACH,GAFD;;AAIA2B,EAAAA,QAAQ,CAACM,IAAT,GAAgB,YAAY;AACxB,QAAIhF,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+B6B,OAA/B,EAAwC,CAAE,IAAF,EAASnB,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,MAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOA4E,EAAAA,OAAO,CAACnD,MAAR,CAAeuD,IAAf,GAAsBP,UAAtB;AAEAG,EAAAA,OAAO,CAAClD,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAG6E,QAAQ,CAAC7E,IAAD,EAAO,MAAP,CAAf;;AACA,UAAI8E,MAAM,CAAC9E,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,eAAO,MAAP;AACH;AACJ;AAVmB,GAAxB;AAaA,MAAI4F,QAAQ,GAAGnE,KAAK,CAACI,MAArB;AACA,MAAIgE,MAAM,GAAGpE,KAAK,CAACK,IAAnB;;AACA,MAAIgE,GAAG,GAAG,UAAU3C,CAAV,EAAa;AAAE,WAAO5B,IAAI,CAACwE,KAAL,CAAW5C,CAAC,GAAC,GAAb,IAAkB,GAAzB;AAA+B,GAAxD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,MAAI6C,SAAS,GAAG,YAAY;AACxB,QAAIrF,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAIqD,IAAI,GAAGL,QAAQ,CAACjF,IAAD,EAAO,MAAP,CAAnB;AACA,QAAIqC,IAAI,GAAG6C,MAAM,CAAClF,IAAD,CAAN,IAAgB,KAA3B;AACAsF,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUH,GAAG,CAACG,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAZ,CAAb;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUH,GAAG,CAACG,IAAI,CAAC,CAAD,CAAJ,GAAQ,GAAT,CAAH,GAAmB,GAA7B;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUH,GAAG,CAACG,IAAI,CAAC,CAAD,CAAJ,GAAQ,GAAT,CAAH,GAAmB,GAA7B;;AACA,QAAIjD,IAAI,KAAK,MAAT,IAAoBiD,IAAI,CAACjG,MAAL,GAAc,CAAd,IAAmBiG,IAAI,CAAC,CAAD,CAAJ,GAAQ,CAAnD,EAAuD;AACnDA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAACjG,MAAL,GAAc,CAAd,GAAkBiG,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAAtC;AACAjD,MAAAA,IAAI,GAAG,MAAP;AACH,KAHD,MAGO;AACHiD,MAAAA,IAAI,CAACjG,MAAL,GAAc,CAAd;AACH;;AACD,WAAQgD,IAAI,GAAG,GAAP,GAAciD,IAAI,CAACnC,IAAL,CAAU,GAAV,CAAd,GAAgC,GAAxC;AACH,GAhBD;;AAkBA,MAAIoC,SAAS,GAAGF,SAAhB;AAEA,MAAIG,QAAQ,GAAG1E,KAAK,CAACI,MAArB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAIuE,SAAS,GAAG,YAAY;AACxB,QAAIzF,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,IAAAA,IAAI,GAAGwF,QAAQ,CAACxF,IAAD,EAAO,MAAP,CAAf;AACA,QAAI+D,CAAC,GAAG/D,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIgE,CAAC,GAAGhE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIyC,CAAC,GAAGzC,IAAI,CAAC,CAAD,CAAZ;AAEA+D,IAAAA,CAAC,IAAI,GAAL;AACAC,IAAAA,CAAC,IAAI,GAAL;AACAvB,IAAAA,CAAC,IAAI,GAAL;AAEA,QAAIhE,GAAG,GAAGmC,IAAI,CAACnC,GAAL,CAASsF,CAAT,EAAYC,CAAZ,EAAevB,CAAf,CAAV;AACA,QAAI/D,GAAG,GAAGkC,IAAI,CAAClC,GAAL,CAASqF,CAAT,EAAYC,CAAZ,EAAevB,CAAf,CAAV;AAEA,QAAI/B,CAAC,GAAG,CAAChC,GAAG,GAAGD,GAAP,IAAc,CAAtB;AACA,QAAIiH,CAAJ,EAAOC,CAAP;;AAEA,QAAIjH,GAAG,KAAKD,GAAZ,EAAgB;AACZiH,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAGC,MAAM,CAACC,GAAX;AACH,KAHD,MAGO;AACHH,MAAAA,CAAC,GAAGhF,CAAC,GAAG,GAAJ,GAAU,CAAChC,GAAG,GAAGD,GAAP,KAAeC,GAAG,GAAGD,GAArB,CAAV,GAAsC,CAACC,GAAG,GAAGD,GAAP,KAAe,IAAIC,GAAJ,GAAUD,GAAzB,CAA1C;AACH;;AAED,QAAIsF,CAAC,IAAIrF,GAAT,EAAc;AAAEiH,MAAAA,CAAC,GAAG,CAAC3B,CAAC,GAAGvB,CAAL,KAAW/D,GAAG,GAAGD,GAAjB,CAAJ;AAA4B,KAA5C,MACK,IAAIuF,CAAC,IAAItF,GAAT,EAAc;AAAEiH,MAAAA,CAAC,GAAG,IAAI,CAAClD,CAAC,GAAGsB,CAAL,KAAWrF,GAAG,GAAGD,GAAjB,CAAR;AAAgC,KAAhD,MACA,IAAIgE,CAAC,IAAI/D,GAAT,EAAc;AAAEiH,MAAAA,CAAC,GAAG,IAAI,CAAC5B,CAAC,GAAGC,CAAL,KAAWtF,GAAG,GAAGD,GAAjB,CAAR;AAAgC;;AAErDkH,IAAAA,CAAC,IAAI,EAAL;;AACA,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEA,MAAAA,CAAC,IAAI,GAAL;AAAW;;AACxB,QAAI3F,IAAI,CAACX,MAAL,GAAY,CAAZ,IAAiBW,IAAI,CAAC,CAAD,CAAJ,KAAUM,SAA/B,EAA0C;AAAE,aAAO,CAACqF,CAAD,EAAGD,CAAH,EAAKhF,CAAL,EAAOV,IAAI,CAAC,CAAD,CAAX,CAAP;AAAyB;;AACrE,WAAO,CAAC2F,CAAD,EAAGD,CAAH,EAAKhF,CAAL,CAAP;AACH,GAlCD;;AAoCA,MAAIoF,SAAS,GAAGL,SAAhB;AAEA,MAAIM,QAAQ,GAAGjF,KAAK,CAACI,MAArB;AACA,MAAI8E,MAAM,GAAGlF,KAAK,CAACK,IAAnB;AACA,MAAI8E,OAAO,GAAGV,SAAd;AACA,MAAIW,SAAS,GAAGJ,SAAhB;AACA,MAAIK,OAAO,GAAGvF,IAAI,CAACwE,KAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAIgB,SAAS,GAAG,YAAY;AACxB,QAAIpG,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAIoE,IAAI,GAAGN,QAAQ,CAAC/F,IAAD,EAAO,MAAP,CAAnB;AACA,QAAIqC,IAAI,GAAG2D,MAAM,CAAChG,IAAD,CAAN,IAAgB,KAA3B;;AACA,QAAIqC,IAAI,CAACiE,MAAL,CAAY,CAAZ,EAAc,CAAd,KAAoB,KAAxB,EAA+B;AAC3B,aAAOL,OAAO,CAACC,SAAS,CAACG,IAAD,CAAV,EAAkBhE,IAAlB,CAAd;AACH;;AACDgE,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUF,OAAO,CAACE,IAAI,CAAC,CAAD,CAAL,CAAjB;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUF,OAAO,CAACE,IAAI,CAAC,CAAD,CAAL,CAAjB;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUF,OAAO,CAACE,IAAI,CAAC,CAAD,CAAL,CAAjB;;AACA,QAAIhE,IAAI,KAAK,MAAT,IAAoBgE,IAAI,CAAChH,MAAL,GAAc,CAAd,IAAmBgH,IAAI,CAAC,CAAD,CAAJ,GAAQ,CAAnD,EAAuD;AACnDA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAChH,MAAL,GAAc,CAAd,GAAkBgH,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAAtC;AACAhE,MAAAA,IAAI,GAAG,MAAP;AACH;;AACD,WAAQA,IAAI,GAAG,GAAP,GAAcgE,IAAI,CAACrH,KAAL,CAAW,CAAX,EAAaqD,IAAI,KAAG,KAAP,GAAa,CAAb,GAAe,CAA5B,EAA+Bc,IAA/B,CAAoC,GAApC,CAAd,GAA0D,GAAlE;AACH,GAjBD;;AAmBA,MAAIoD,SAAS,GAAGH,SAAhB;AAEA,MAAII,QAAQ,GAAG1F,KAAK,CAACI,MAArB;AACA,MAAIuF,OAAO,GAAG7F,IAAI,CAACwE,KAAnB;;AAEA,MAAIsB,SAAS,GAAG,YAAY;AACxB,QAAIC,MAAJ;AAEA,QAAI3G,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAChBjC,IAAAA,IAAI,GAAGwG,QAAQ,CAACxG,IAAD,EAAO,KAAP,CAAf;AACA,QAAI2F,CAAC,GAAG3F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI0F,CAAC,GAAG1F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIU,CAAC,GAAGV,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI+D,CAAJ,EAAMC,CAAN,EAAQvB,CAAR;;AACA,QAAIiD,CAAC,KAAK,CAAV,EAAa;AACT3B,MAAAA,CAAC,GAAGC,CAAC,GAAGvB,CAAC,GAAG/B,CAAC,GAAC,GAAd;AACH,KAFD,MAEO;AACH,UAAIkG,EAAE,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAT;AACA,UAAI1C,CAAC,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAR;AACA,UAAI2C,EAAE,GAAGnG,CAAC,GAAG,GAAJ,GAAUA,CAAC,IAAI,IAAEgF,CAAN,CAAX,GAAsBhF,CAAC,GAACgF,CAAF,GAAIhF,CAAC,GAACgF,CAArC;AACA,UAAIoB,EAAE,GAAG,IAAIpG,CAAJ,GAAQmG,EAAjB;AACA,UAAIE,EAAE,GAAGpB,CAAC,GAAG,GAAb;AACAiB,MAAAA,EAAE,CAAC,CAAD,CAAF,GAAQG,EAAE,GAAG,IAAE,CAAf;AACAH,MAAAA,EAAE,CAAC,CAAD,CAAF,GAAQG,EAAR;AACAH,MAAAA,EAAE,CAAC,CAAD,CAAF,GAAQG,EAAE,GAAG,IAAE,CAAf;;AACA,WAAK,IAAI9H,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpB,YAAI2H,EAAE,CAAC3H,CAAD,CAAF,GAAQ,CAAZ,EAAe;AAAE2H,UAAAA,EAAE,CAAC3H,CAAD,CAAF,IAAS,CAAT;AAAa;;AAC9B,YAAI2H,EAAE,CAAC3H,CAAD,CAAF,GAAQ,CAAZ,EAAe;AAAE2H,UAAAA,EAAE,CAAC3H,CAAD,CAAF,IAAS,CAAT;AAAa;;AAC9B,YAAI,IAAI2H,EAAE,CAAC3H,CAAD,CAAN,GAAY,CAAhB,EACI;AAAEiF,UAAAA,CAAC,CAACjF,CAAD,CAAD,GAAO6H,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAN,IAAY,CAAZ,GAAgBF,EAAE,CAAC3H,CAAD,CAA9B;AAAoC,SAD1C,MAEK,IAAI,IAAI2H,EAAE,CAAC3H,CAAD,CAAN,GAAY,CAAhB,EACD;AAAEiF,UAAAA,CAAC,CAACjF,CAAD,CAAD,GAAO4H,EAAP;AAAY,SADb,MAEA,IAAI,IAAID,EAAE,CAAC3H,CAAD,CAAN,GAAY,CAAhB,EACD;AAAEiF,UAAAA,CAAC,CAACjF,CAAD,CAAD,GAAO6H,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAN,KAAc,IAAI,CAAL,GAAUF,EAAE,CAAC3H,CAAD,CAAzB,IAAgC,CAA5C;AAAgD,SADjD,MAGD;AAAEiF,UAAAA,CAAC,CAACjF,CAAD,CAAD,GAAO6H,EAAP;AAAY;AACrB;;AACAH,MAAAA,MAAM,GAAG,CAACF,OAAO,CAACvC,CAAC,CAAC,CAAD,CAAD,GAAK,GAAN,CAAR,EAAmBuC,OAAO,CAACvC,CAAC,CAAC,CAAD,CAAD,GAAK,GAAN,CAA1B,EAAqCuC,OAAO,CAACvC,CAAC,CAAC,CAAD,CAAD,GAAK,GAAN,CAA5C,CAAT,EAAkEH,CAAC,GAAG4C,MAAM,CAAC,CAAD,CAA5E,EAAiF3C,CAAC,GAAG2C,MAAM,CAAC,CAAD,CAA3F,EAAgGlE,CAAC,GAAGkE,MAAM,CAAC,CAAD,CAA3G;AACH;;AACD,QAAI3G,IAAI,CAACX,MAAL,GAAc,CAAlB,EAAqB;AACjB;AACA,aAAO,CAAC0E,CAAD,EAAGC,CAAH,EAAKvB,CAAL,EAAOzC,IAAI,CAAC,CAAD,CAAX,CAAP;AACH;;AACD,WAAO,CAAC+D,CAAD,EAAGC,CAAH,EAAKvB,CAAL,EAAO,CAAP,CAAP;AACH,GAxCD;;AA0CA,MAAIuE,SAAS,GAAGN,SAAhB;AAEA,MAAIO,OAAO,GAAGD,SAAd;AACA,MAAIE,OAAO,GAAG1F,OAAd;AAEA,MAAI2F,MAAM,GAAG,iDAAb;AACA,MAAIC,OAAO,GAAG,uEAAd;AACA,MAAIC,UAAU,GAAG,kFAAjB;AACA,MAAIC,WAAW,GAAG,wGAAlB;AACA,MAAIC,MAAM,GAAG,iFAAb;AACA,MAAIC,OAAO,GAAG,uGAAd;AAEA,MAAIC,OAAO,GAAG7G,IAAI,CAACwE,KAAnB;;AAEA,MAAIsC,SAAS,GAAG,UAAUC,GAAV,EAAe;AAC3BA,IAAAA,GAAG,GAAGA,GAAG,CAACpI,WAAJ,GAAkBqI,IAAlB,EAAN;AACA,QAAIzD,CAAJ;;AAEA,QAAI+C,OAAO,CAACzF,MAAR,CAAeoG,KAAnB,EAA0B;AACtB,UAAI;AACA,eAAOX,OAAO,CAACzF,MAAR,CAAeoG,KAAf,CAAqBF,GAArB,CAAP;AACH,OAFD,CAEE,OAAOG,CAAP,EAAU,CACR;AACH;AACJ,KAV0B,CAY3B;;;AACA,QAAK3D,CAAC,GAAGwD,GAAG,CAACI,KAAJ,CAAUZ,MAAV,CAAT,EAA6B;AACzB,UAAItI,GAAG,GAAGsF,CAAC,CAACnF,KAAF,CAAQ,CAAR,EAAU,CAAV,CAAV;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpBJ,QAAAA,GAAG,CAACI,CAAD,CAAH,GAAS,CAACJ,GAAG,CAACI,CAAD,CAAb;AACH;;AACDJ,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT,CALyB,CAKZ;;AACb,aAAOA,GAAP;AACH,KApB0B,CAsB3B;;;AACA,QAAKsF,CAAC,GAAGwD,GAAG,CAACI,KAAJ,CAAUX,OAAV,CAAT,EAA8B;AAC1B,UAAIY,KAAK,GAAG7D,CAAC,CAACnF,KAAF,CAAQ,CAAR,EAAU,CAAV,CAAZ;;AACA,WAAK,IAAIG,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC,CAApB,EAAuBA,GAAG,EAA1B,EAA8B;AAC1B6I,QAAAA,KAAK,CAAC7I,GAAD,CAAL,GAAa,CAAC6I,KAAK,CAAC7I,GAAD,CAAnB;AACH;;AACD,aAAO6I,KAAP;AACH,KA7B0B,CA+B3B;;;AACA,QAAK7D,CAAC,GAAGwD,GAAG,CAACI,KAAJ,CAAUV,UAAV,CAAT,EAAiC;AAC7B,UAAIY,KAAK,GAAG9D,CAAC,CAACnF,KAAF,CAAQ,CAAR,EAAU,CAAV,CAAZ;;AACA,WAAK,IAAIkJ,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC,CAApB,EAAuBA,GAAG,EAA1B,EAA8B;AAC1BD,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAaT,OAAO,CAACQ,KAAK,CAACC,GAAD,CAAL,GAAa,IAAd,CAApB;AACH;;AACDD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,CAL6B,CAKd;;AACf,aAAOA,KAAP;AACH,KAvC0B,CAyC3B;;;AACA,QAAK9D,CAAC,GAAGwD,GAAG,CAACI,KAAJ,CAAUT,WAAV,CAAT,EAAkC;AAC9B,UAAIa,KAAK,GAAGhE,CAAC,CAACnF,KAAF,CAAQ,CAAR,EAAU,CAAV,CAAZ;;AACA,WAAK,IAAIoJ,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC,CAApB,EAAuBA,GAAG,EAA1B,EAA8B;AAC1BD,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAaX,OAAO,CAACU,KAAK,CAACC,GAAD,CAAL,GAAa,IAAd,CAApB;AACH;;AACDD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAjB;AACA,aAAOA,KAAP;AACH,KAjD0B,CAmD3B;;;AACA,QAAKhE,CAAC,GAAGwD,GAAG,CAACI,KAAJ,CAAUR,MAAV,CAAT,EAA6B;AACzB,UAAIc,GAAG,GAAGlE,CAAC,CAACnF,KAAF,CAAQ,CAAR,EAAU,CAAV,CAAV;AACAqJ,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAU,IAAV;AACAA,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAU,IAAV;AACA,UAAIC,KAAK,GAAGrB,OAAO,CAACoB,GAAD,CAAnB;AACAC,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX;AACA,aAAOA,KAAP;AACH,KA3D0B,CA6D3B;;;AACA,QAAKnE,CAAC,GAAGwD,GAAG,CAACI,KAAJ,CAAUP,OAAV,CAAT,EAA8B;AAC1B,UAAIe,KAAK,GAAGpE,CAAC,CAACnF,KAAF,CAAQ,CAAR,EAAU,CAAV,CAAZ;AACAuJ,MAAAA,KAAK,CAAC,CAAD,CAAL,IAAY,IAAZ;AACAA,MAAAA,KAAK,CAAC,CAAD,CAAL,IAAY,IAAZ;AACA,UAAIC,KAAK,GAAGvB,OAAO,CAACsB,KAAD,CAAnB;AACAC,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAACrE,CAAC,CAAC,CAAD,CAAb,CAL0B,CAKP;;AACnB,aAAOqE,KAAP;AACH;AACJ,GAtED;;AAwEAd,EAAAA,SAAS,CAAC7E,IAAV,GAAiB,UAAU6C,CAAV,EAAa;AAC1B,WAAOyB,MAAM,CAACtE,IAAP,CAAY6C,CAAZ,KACH0B,OAAO,CAACvE,IAAR,CAAa6C,CAAb,CADG,IAEH2B,UAAU,CAACxE,IAAX,CAAgB6C,CAAhB,CAFG,IAGH4B,WAAW,CAACzE,IAAZ,CAAiB6C,CAAjB,CAHG,IAIH6B,MAAM,CAAC1E,IAAP,CAAY6C,CAAZ,CAJG,IAKH8B,OAAO,CAAC3E,IAAR,CAAa6C,CAAb,CALJ;AAMH,GAPD;;AASA,MAAI+C,SAAS,GAAGf,SAAhB;AAEA,MAAIgB,QAAQ,GAAGhF,QAAf;AACA,MAAIiF,OAAO,GAAGvF,OAAd;AACA,MAAIwF,OAAO,GAAGpH,OAAd;AACA,MAAIqH,MAAM,GAAG/H,KAAK,CAACG,IAAnB;AAEA,MAAI6H,OAAO,GAAGvC,SAAd;AACA,MAAIwC,OAAO,GAAGN,SAAd;;AAEAE,EAAAA,OAAO,CAAChJ,SAAR,CAAkBgI,GAAlB,GAAwB,UAAStF,IAAT,EAAe;AACnC,WAAOyG,OAAO,CAAC,KAAK/F,IAAN,EAAYV,IAAZ,CAAd;AACH,GAFD;;AAIAqG,EAAAA,QAAQ,CAACf,GAAT,GAAe,YAAY;AACvB,QAAI3H,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+B6F,OAA/B,EAAwC,CAAE,IAAF,EAASnF,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOA4I,EAAAA,OAAO,CAACnH,MAAR,CAAekG,GAAf,GAAqBoB,OAArB;AAEAH,EAAAA,OAAO,CAAClH,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,UAAU8C,CAAV,EAAa;AACf,UAAIqD,IAAI,GAAG,EAAX;AAAA,UAAe/G,GAAG,GAAGC,SAAS,CAAC7C,MAAV,GAAmB,CAAxC;;AACA,aAAQ4C,GAAG,KAAK,CAAhB,EAAoB+G,IAAI,CAAE/G,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAG,GAAG,CAAR,CAAvB;;AAEpB,UAAI,CAAC+G,IAAI,CAAC3J,MAAN,IAAgBwJ,MAAM,CAAClD,CAAD,CAAN,KAAc,QAA9B,IAA0CoD,OAAO,CAAClG,IAAR,CAAa8C,CAAb,CAA9C,EAA+D;AAC3D,eAAO,KAAP;AACH;AACJ;AATmB,GAAxB;AAYA,MAAIsD,OAAO,GAAG7F,OAAd;AACA,MAAI8F,QAAQ,GAAGxF,QAAf;AACA,MAAIyF,OAAO,GAAG3H,OAAd;AACA,MAAI4H,QAAQ,GAAGtI,KAAK,CAACI,MAArB;;AAEAiI,EAAAA,OAAO,CAAC1H,MAAR,CAAe4H,EAAf,GAAoB,YAAY;AAC5B,QAAIrJ,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAIpD,GAAG,GAAGuK,QAAQ,CAACpJ,IAAD,EAAO,MAAP,CAAlB;AACAnB,IAAAA,GAAG,CAAC,CAAD,CAAH,IAAU,GAAV;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,IAAU,GAAV;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,IAAU,GAAV;AACA,WAAOA,GAAP;AACH,GATD;;AAWAqK,EAAAA,QAAQ,CAACG,EAAT,GAAc,YAAY;AACtB,QAAIrJ,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BmG,OAA/B,EAAwC,CAAE,IAAF,EAASzF,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,IAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAiJ,EAAAA,OAAO,CAACtJ,SAAR,CAAkB0J,EAAlB,GAAuB,YAAW;AAC9B,QAAIxK,GAAG,GAAG,KAAKkE,IAAf;AACA,WAAO,CAAClE,GAAG,CAAC,CAAD,CAAH,GAAO,GAAR,EAAaA,GAAG,CAAC,CAAD,CAAH,GAAO,GAApB,EAAyBA,GAAG,CAAC,CAAD,CAAH,GAAO,GAAhC,EAAqCA,GAAG,CAAC,CAAD,CAAxC,CAAP;AACH,GAHD;;AAKA,MAAIyK,QAAQ,GAAGxI,KAAK,CAACI,MAArB;;AAEA,MAAIqI,SAAS,GAAG,YAAY;AACxB,QAAIvJ,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAGwF,QAAQ,CAACtJ,IAAD,EAAO,KAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrF,GAAG,GAAGmC,IAAI,CAACnC,GAAL,CAASsF,CAAT,EAAYC,CAAZ,EAAevB,CAAf,CAAV;AACA,QAAI/D,GAAG,GAAGkC,IAAI,CAAClC,GAAL,CAASqF,CAAT,EAAYC,CAAZ,EAAevB,CAAf,CAAV;AACA,QAAI+G,KAAK,GAAG9K,GAAG,GAAGD,GAAlB;AACA,QAAIyF,CAAC,GAAGsF,KAAK,GAAG,GAAR,GAAc,GAAtB;;AACA,QAAIC,EAAE,GAAGhL,GAAG,IAAI,MAAM+K,KAAV,CAAH,GAAsB,GAA/B;;AACA,QAAI7D,CAAJ;;AACA,QAAI6D,KAAK,KAAK,CAAd,EAAiB;AACb7D,MAAAA,CAAC,GAAGC,MAAM,CAACC,GAAX;AACH,KAFD,MAEO;AACH,UAAI9B,CAAC,KAAKrF,GAAV,EAAe;AAAEiH,QAAAA,CAAC,GAAG,CAAC3B,CAAC,GAAGvB,CAAL,IAAU+G,KAAd;AAAsB;;AACvC,UAAIxF,CAAC,KAAKtF,GAAV,EAAe;AAAEiH,QAAAA,CAAC,GAAG,IAAE,CAAClD,CAAC,GAAGsB,CAAL,IAAUyF,KAAhB;AAAwB;;AACzC,UAAI/G,CAAC,KAAK/D,GAAV,EAAe;AAAEiH,QAAAA,CAAC,GAAG,IAAE,CAAC5B,CAAC,GAAGC,CAAL,IAAUwF,KAAhB;AAAwB;;AACzC7D,MAAAA,CAAC,IAAI,EAAL;;AACA,UAAIA,CAAC,GAAG,CAAR,EAAW;AAAEA,QAAAA,CAAC,IAAI,GAAL;AAAW;AAC3B;;AACD,WAAO,CAACA,CAAD,EAAIzB,CAAJ,EAAOuF,EAAP,CAAP;AACH,GAxBD;;AA0BA,MAAIC,SAAS,GAAGH,SAAhB;AAEA,MAAII,QAAQ,GAAG7I,KAAK,CAACI,MAArB;AACA,MAAI0I,OAAO,GAAGhJ,IAAI,CAACiJ,KAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI,MAAIC,OAAO,GAAG,YAAY;AACtB,QAAInD,MAAJ,EAAYoD,QAAZ,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,QAApD;AAEA,QAAInK,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAChBjC,IAAAA,IAAI,GAAG2J,QAAQ,CAAC3J,IAAD,EAAO,KAAP,CAAf;AACA,QAAI2F,CAAC,GAAG3F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIkE,CAAC,GAAGlE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIyJ,EAAE,GAAGzJ,IAAI,CAAC,CAAD,CAAb;AACA,QAAI+D,CAAJ,EAAMC,CAAN,EAAQvB,CAAR;AACAgH,IAAAA,EAAE,GAAGA,EAAE,GAAG,GAAV;;AACA,QAAIW,EAAE,GAAGlG,CAAC,GAAG,GAAb;;AACA,QAAIA,CAAC,KAAK,CAAV,EAAa;AACTH,MAAAA,CAAC,GAAGC,CAAC,GAAGvB,CAAC,GAAGgH,EAAZ;AACH,KAFD,MAEO;AACH,UAAI9D,CAAC,KAAK,GAAV,EAAe;AAAEA,QAAAA,CAAC,GAAG,CAAJ;AAAQ;;AACzB,UAAIA,CAAC,GAAG,GAAR,EAAa;AAAEA,QAAAA,CAAC,IAAI,GAAL;AAAW;;AAC1B,UAAIA,CAAC,GAAG,CAAR,EAAW;AAAEA,QAAAA,CAAC,IAAI,GAAL;AAAW;;AACxBA,MAAAA,CAAC,IAAI,EAAL;AACA,UAAI1G,CAAC,GAAG2K,OAAO,CAACjE,CAAD,CAAf;AACA,UAAI1B,CAAC,GAAG0B,CAAC,GAAG1G,CAAZ;AACA,UAAIyD,CAAC,GAAG+G,EAAE,IAAI,IAAIvF,CAAR,CAAV;AACA,UAAImG,CAAC,GAAG3H,CAAC,GAAG0H,EAAE,IAAI,IAAInG,CAAR,CAAd;AACA,UAAIqG,CAAC,GAAG5H,CAAC,GAAG0H,EAAE,GAAGnG,CAAjB;AACA,UAAIsG,CAAC,GAAG7H,CAAC,GAAG0H,EAAZ;;AACA,cAAQnL,CAAR;AACI,aAAK,CAAL;AAAS0H,UAAAA,MAAM,GAAG,CAAC4D,CAAD,EAAID,CAAJ,EAAO5H,CAAP,CAAT,EAAoBqB,CAAC,GAAG4C,MAAM,CAAC,CAAD,CAA9B,EAAmC3C,CAAC,GAAG2C,MAAM,CAAC,CAAD,CAA7C,EAAkDlE,CAAC,GAAGkE,MAAM,CAAC,CAAD,CAA7D;AAAmE;;AAC3E,aAAK,CAAL;AAASoD,UAAAA,QAAQ,GAAG,CAACM,CAAD,EAAIE,CAAJ,EAAO7H,CAAP,CAAX,EAAsBqB,CAAC,GAAGgG,QAAQ,CAAC,CAAD,CAAlC,EAAuC/F,CAAC,GAAG+F,QAAQ,CAAC,CAAD,CAAnD,EAAwDtH,CAAC,GAAGsH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACtH,CAAD,EAAI6H,CAAJ,EAAOD,CAAP,CAAX,EAAsBvG,CAAC,GAAGiG,QAAQ,CAAC,CAAD,CAAlC,EAAuChG,CAAC,GAAGgG,QAAQ,CAAC,CAAD,CAAnD,EAAwDvH,CAAC,GAAGuH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACvH,CAAD,EAAI2H,CAAJ,EAAOE,CAAP,CAAX,EAAsBxG,CAAC,GAAGkG,QAAQ,CAAC,CAAD,CAAlC,EAAuCjG,CAAC,GAAGiG,QAAQ,CAAC,CAAD,CAAnD,EAAwDxH,CAAC,GAAGwH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACI,CAAD,EAAI5H,CAAJ,EAAO6H,CAAP,CAAX,EAAsBxG,CAAC,GAAGmG,QAAQ,CAAC,CAAD,CAAlC,EAAuClG,CAAC,GAAGkG,QAAQ,CAAC,CAAD,CAAnD,EAAwDzH,CAAC,GAAGyH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACI,CAAD,EAAI7H,CAAJ,EAAO2H,CAAP,CAAX,EAAsBtG,CAAC,GAAGoG,QAAQ,CAAC,CAAD,CAAlC,EAAuCnG,CAAC,GAAGmG,QAAQ,CAAC,CAAD,CAAnD,EAAwD1H,CAAC,GAAG0H,QAAQ,CAAC,CAAD,CAArE;AAA2E;AANvF;AAQH;;AACD,WAAO,CAACpG,CAAD,EAAIC,CAAJ,EAAOvB,CAAP,EAAUzC,IAAI,CAACX,MAAL,GAAc,CAAd,GAAkBW,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAAtC,CAAP;AACH,GAnCD;;AAqCA,MAAIwK,SAAS,GAAGV,OAAhB;AAEA,MAAIW,QAAQ,GAAG3J,KAAK,CAACI,MAArB;AACA,MAAIwJ,MAAM,GAAG5J,KAAK,CAACG,IAAnB;AACA,MAAI0J,QAAQ,GAAGjH,QAAf;AACA,MAAIkH,OAAO,GAAGxH,OAAd;AACA,MAAIyH,OAAO,GAAGrJ,OAAd;AAEA,MAAIsJ,OAAO,GAAGpB,SAAd;;AAEAkB,EAAAA,OAAO,CAACjL,SAAR,CAAkBoL,GAAlB,GAAwB,YAAW;AAC/B,WAAOD,OAAO,CAAC,KAAK/H,IAAN,CAAd;AACH,GAFD;;AAIA4H,EAAAA,QAAQ,CAACI,GAAT,GAAe,YAAY;AACvB,QAAI/K,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+B8H,OAA/B,EAAwC,CAAE,IAAF,EAASpH,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOA6K,EAAAA,OAAO,CAACpJ,MAAR,CAAesJ,GAAf,GAAqBP,SAArB;AAEAK,EAAAA,OAAO,CAACnJ,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAGyK,QAAQ,CAACzK,IAAD,EAAO,KAAP,CAAf;;AACA,UAAI0K,MAAM,CAAC1K,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,eAAO,KAAP;AACH;AACJ;AAVmB,GAAxB;AAaA,MAAI2L,QAAQ,GAAGlK,KAAK,CAACI,MAArB;AACA,MAAIC,IAAI,GAAGL,KAAK,CAACK,IAAjB;AACA,MAAI8J,OAAO,GAAGrK,IAAI,CAACwE,KAAnB;;AAEA,MAAI8F,SAAS,GAAG,YAAY;AACxB,QAAIlL,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAGkH,QAAQ,CAAChL,IAAD,EAAO,MAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACA,QAAItB,CAAC,GAAGsB,GAAG,CAAC,CAAD,CAAX;AACA,QAAIzB,IAAI,GAAGlB,IAAI,CAACnB,IAAD,CAAJ,IAAc,MAAzB;;AACA,QAAIwC,CAAC,KAAKlC,SAAV,EAAqB;AAAEkC,MAAAA,CAAC,GAAG,CAAJ;AAAQ;;AAC/B,QAAIH,IAAI,KAAK,MAAb,EAAqB;AACjBA,MAAAA,IAAI,GAAGG,CAAC,GAAG,CAAJ,GAAQ,MAAR,GAAiB,KAAxB;AACH;;AACDuB,IAAAA,CAAC,GAAGkH,OAAO,CAAClH,CAAD,CAAX;AACAC,IAAAA,CAAC,GAAGiH,OAAO,CAACjH,CAAD,CAAX;AACAvB,IAAAA,CAAC,GAAGwI,OAAO,CAACxI,CAAD,CAAX;AACA,QAAI0I,CAAC,GAAGpH,CAAC,IAAI,EAAL,GAAUC,CAAC,IAAI,CAAf,GAAmBvB,CAA3B;AACA,QAAI2I,GAAG,GAAG,WAAWD,CAAC,CAACvL,QAAF,CAAW,EAAX,CAArB,CAlBwB,CAkBa;;AACrCwL,IAAAA,GAAG,GAAGA,GAAG,CAAC9E,MAAJ,CAAW8E,GAAG,CAAC/L,MAAJ,GAAa,CAAxB,CAAN;AACA,QAAIgM,GAAG,GAAG,MAAMJ,OAAO,CAACzI,CAAC,GAAG,GAAL,CAAP,CAAiB5C,QAAjB,CAA0B,EAA1B,CAAhB;AACAyL,IAAAA,GAAG,GAAGA,GAAG,CAAC/E,MAAJ,CAAW+E,GAAG,CAAChM,MAAJ,GAAa,CAAxB,CAAN;;AACA,YAAQgD,IAAI,CAAC9C,WAAL,EAAR;AACI,WAAK,MAAL;AAAa,eAAQ,MAAM6L,GAAN,GAAYC,GAApB;;AACb,WAAK,MAAL;AAAa,eAAQ,MAAMA,GAAN,GAAYD,GAApB;;AACb;AAAS,eAAQ,MAAMA,GAAd;AAHb;AAKH,GA3BD;;AA6BA,MAAIE,SAAS,GAAGJ,SAAhB;AAEA,MAAIK,MAAM,GAAG,qCAAb;AACA,MAAIC,OAAO,GAAG,qCAAd;;AAEA,MAAIC,SAAS,GAAG,UAAUvI,GAAV,EAAe;AAC3B,QAAIA,GAAG,CAAC6E,KAAJ,CAAUwD,MAAV,CAAJ,EAAuB;AACnB;AACA,UAAIrI,GAAG,CAAC7D,MAAJ,KAAe,CAAf,IAAoB6D,GAAG,CAAC7D,MAAJ,KAAe,CAAvC,EAA0C;AACtC6D,QAAAA,GAAG,GAAGA,GAAG,CAACoD,MAAJ,CAAW,CAAX,CAAN;AACH,OAJkB,CAKnB;;;AACA,UAAIpD,GAAG,CAAC7D,MAAJ,KAAe,CAAnB,EAAsB;AAClB6D,QAAAA,GAAG,GAAGA,GAAG,CAAC/C,KAAJ,CAAU,EAAV,CAAN;AACA+C,QAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,GAAOA,GAAG,CAAC,CAAD,CAAV,GAAcA,GAAG,CAAC,CAAD,CAAjB,GAAqBA,GAAG,CAAC,CAAD,CAAxB,GAA4BA,GAAG,CAAC,CAAD,CAA/B,GAAmCA,GAAG,CAAC,CAAD,CAA5C;AACH;;AACD,UAAIiI,CAAC,GAAGO,QAAQ,CAACxI,GAAD,EAAM,EAAN,CAAhB;AACA,UAAIa,CAAC,GAAGoH,CAAC,IAAI,EAAb;AACA,UAAInH,CAAC,GAAGmH,CAAC,IAAI,CAAL,GAAS,IAAjB;AACA,UAAI1I,CAAC,GAAG0I,CAAC,GAAG,IAAZ;AACA,aAAO,CAACpH,CAAD,EAAGC,CAAH,EAAKvB,CAAL,EAAO,CAAP,CAAP;AACH,KAhB0B,CAkB3B;;;AACA,QAAIS,GAAG,CAAC6E,KAAJ,CAAUyD,OAAV,CAAJ,EAAwB;AACpB,UAAItI,GAAG,CAAC7D,MAAJ,KAAe,CAAf,IAAoB6D,GAAG,CAAC7D,MAAJ,KAAe,CAAvC,EAA0C;AACtC;AACA6D,QAAAA,GAAG,GAAGA,GAAG,CAACoD,MAAJ,CAAW,CAAX,CAAN;AACH,OAJmB,CAKpB;;;AACA,UAAIpD,GAAG,CAAC7D,MAAJ,KAAe,CAAnB,EAAsB;AAClB6D,QAAAA,GAAG,GAAGA,GAAG,CAAC/C,KAAJ,CAAU,EAAV,CAAN;AACA+C,QAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,GAAOA,GAAG,CAAC,CAAD,CAAV,GAAcA,GAAG,CAAC,CAAD,CAAjB,GAAqBA,GAAG,CAAC,CAAD,CAAxB,GAA4BA,GAAG,CAAC,CAAD,CAA/B,GAAmCA,GAAG,CAAC,CAAD,CAAtC,GAA0CA,GAAG,CAAC,CAAD,CAA7C,GAAiDA,GAAG,CAAC,CAAD,CAA1D;AACH;;AACD,UAAIyI,GAAG,GAAGD,QAAQ,CAACxI,GAAD,EAAM,EAAN,CAAlB;AACA,UAAI0I,GAAG,GAAGD,GAAG,IAAI,EAAP,GAAY,IAAtB;AACA,UAAIE,GAAG,GAAGF,GAAG,IAAI,EAAP,GAAY,IAAtB;AACA,UAAIG,GAAG,GAAGH,GAAG,IAAI,CAAP,GAAW,IAArB;AACA,UAAInJ,CAAC,GAAG5B,IAAI,CAACwE,KAAL,CAAW,CAACuG,GAAG,GAAG,IAAP,IAAe,IAAf,GAAsB,GAAjC,IAAwC,GAAhD;AACA,aAAO,CAACC,GAAD,EAAKC,GAAL,EAASC,GAAT,EAAatJ,CAAb,CAAP;AACH,KAnC0B,CAqC3B;AACA;AACA;;;AAEA,UAAM,IAAIQ,KAAJ,CAAW,wBAAwBE,GAAnC,CAAN;AACH,GA1CD;;AA4CA,MAAI6I,SAAS,GAAGN,SAAhB;AAEA,MAAIO,QAAQ,GAAGtI,QAAf;AACA,MAAIuI,OAAO,GAAG7I,OAAd;AACA,MAAI8I,MAAM,GAAGpL,KAAK,CAACG,IAAnB;AACA,MAAIkL,OAAO,GAAG3K,OAAd;AAEA,MAAI4K,SAAS,GAAGd,SAAhB;;AAEAW,EAAAA,OAAO,CAACtM,SAAR,CAAkBuD,GAAlB,GAAwB,UAASb,IAAT,EAAe;AACnC,WAAO+J,SAAS,CAAC,KAAKrJ,IAAN,EAAYV,IAAZ,CAAhB;AACH,GAFD;;AAIA2J,EAAAA,QAAQ,CAAC9I,GAAT,GAAe,YAAY;AACvB,QAAIlD,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BmJ,OAA/B,EAAwC,CAAE,IAAF,EAASzI,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAmM,EAAAA,OAAO,CAAC1K,MAAR,CAAeyB,GAAf,GAAqB6I,SAArB;AACAI,EAAAA,OAAO,CAACzK,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,UAAU8C,CAAV,EAAa;AACf,UAAIqD,IAAI,GAAG,EAAX;AAAA,UAAe/G,GAAG,GAAGC,SAAS,CAAC7C,MAAV,GAAmB,CAAxC;;AACA,aAAQ4C,GAAG,KAAK,CAAhB,EAAoB+G,IAAI,CAAE/G,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAG,GAAG,CAAR,CAAvB;;AAEpB,UAAI,CAAC+G,IAAI,CAAC3J,MAAN,IAAgB6M,MAAM,CAACvG,CAAD,CAAN,KAAc,QAA9B,IAA0C,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAgB0G,OAAhB,CAAwB1G,CAAC,CAACtG,MAA1B,KAAqC,CAAnF,EAAsF;AAClF,eAAO,KAAP;AACH;AACJ;AATmB,GAAxB;AAYA,MAAIiN,QAAQ,GAAGxL,KAAK,CAACI,MAArB;AACA,MAAIqL,OAAO,GAAGzL,KAAK,CAACM,KAApB;AACA,MAAIoL,KAAK,GAAG5L,IAAI,CAACnC,GAAjB;AACA,MAAIgO,MAAM,GAAG7L,IAAI,CAAC8L,IAAlB;AACA,MAAIC,IAAI,GAAG/L,IAAI,CAAC+L,IAAhB;;AAEA,MAAIC,SAAS,GAAG,YAAY;AACxB,QAAI5M,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;AAEhB;AACR;AACA;AACA;;;AACQ,QAAI6B,GAAG,GAAGwI,QAAQ,CAACtM,IAAD,EAAO,KAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACAC,IAAAA,CAAC,IAAI,GAAL;AACAC,IAAAA,CAAC,IAAI,GAAL;AACAvB,IAAAA,CAAC,IAAI,GAAL;AACA,QAAIkD,CAAJ;AACA,QAAIkH,IAAI,GAAGL,KAAK,CAACzI,CAAD,EAAGC,CAAH,EAAKvB,CAAL,CAAhB;AACA,QAAIxD,CAAC,GAAG,CAAC8E,CAAC,GAACC,CAAF,GAAIvB,CAAL,IAAU,CAAlB;AACA,QAAIiD,CAAC,GAAGzG,CAAC,GAAG,CAAJ,GAAQ,IAAI4N,IAAI,GAAC5N,CAAjB,GAAqB,CAA7B;;AACA,QAAIyG,CAAC,KAAK,CAAV,EAAa;AACTC,MAAAA,CAAC,GAAGE,GAAJ;AACH,KAFD,MAEO;AACHF,MAAAA,CAAC,GAAG,CAAE5B,CAAC,GAACC,CAAH,IAAOD,CAAC,GAACtB,CAAT,CAAD,IAAgB,CAApB;AACAkD,MAAAA,CAAC,IAAI8G,MAAM,CAAC,CAAC1I,CAAC,GAACC,CAAH,KAAOD,CAAC,GAACC,CAAT,IAAc,CAACD,CAAC,GAACtB,CAAH,KAAOuB,CAAC,GAACvB,CAAT,CAAf,CAAX;AACAkD,MAAAA,CAAC,GAAGgH,IAAI,CAAChH,CAAD,CAAR;;AACA,UAAIlD,CAAC,GAAGuB,CAAR,EAAW;AACP2B,QAAAA,CAAC,GAAG4G,OAAO,GAAG5G,CAAd;AACH;;AACDA,MAAAA,CAAC,IAAI4G,OAAL;AACH;;AACD,WAAO,CAAC5G,CAAC,GAAC,GAAH,EAAOD,CAAP,EAASzG,CAAT,CAAP;AACH,GA/BD;;AAiCA,MAAI6N,SAAS,GAAGF,SAAhB;AAEA,MAAIG,QAAQ,GAAGjM,KAAK,CAACI,MAArB;AACA,MAAIF,KAAK,GAAGF,KAAK,CAACE,KAAlB;AACA,MAAIgM,OAAO,GAAGlM,KAAK,CAACM,KAApB;AACA,MAAIC,OAAO,GAAGP,KAAK,CAACO,OAApB;AACA,MAAI4L,KAAK,GAAGrM,IAAI,CAACsM,GAAjB;AAEA;AACJ;AACA;AACA;AACA;;AACI,MAAIC,OAAO,GAAG,YAAY;AACtB,QAAInN,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;AAEhB;AACR;AACA;AACA;;;AACQjC,IAAAA,IAAI,GAAG+M,QAAQ,CAAC/M,IAAD,EAAO,KAAP,CAAf;AACA,QAAI2F,CAAC,GAAG3F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI0F,CAAC,GAAG1F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIf,CAAC,GAAGe,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI+D,CAAJ,EAAMC,CAAN,EAAQvB,CAAR;;AAEA,QAAI2K,KAAK,CAACzH,CAAD,CAAT,EAAc;AAAEA,MAAAA,CAAC,GAAG,CAAJ;AAAQ;;AACxB,QAAIyH,KAAK,CAAC1H,CAAD,CAAT,EAAc;AAAEA,MAAAA,CAAC,GAAG,CAAJ;AAAQ,KAfF,CAgBtB;;;AACA,QAAIC,CAAC,GAAG,GAAR,EAAa;AAAEA,MAAAA,CAAC,IAAI,GAAL;AAAW;;AAC1B,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEA,MAAAA,CAAC,IAAI,GAAL;AAAW;;AACxBA,IAAAA,CAAC,IAAI,GAAL;;AACA,QAAIA,CAAC,GAAG,IAAE,CAAV,EAAa;AACTlD,MAAAA,CAAC,GAAG,CAAC,IAAEiD,CAAH,IAAM,CAAV;AACA3B,MAAAA,CAAC,GAAG,CAAC,IAAE2B,CAAC,GAACuH,KAAK,CAACD,OAAO,GAACrH,CAAT,CAAP,GAAmBsH,KAAK,CAAC5L,OAAO,GAAC2L,OAAO,GAACrH,CAAjB,CAA3B,IAAgD,CAApD;AACA3B,MAAAA,CAAC,GAAG,KAAKvB,CAAC,GAACsB,CAAP,CAAJ;AACH,KAJD,MAIO,IAAI4B,CAAC,GAAG,IAAE,CAAV,EAAa;AAChBA,MAAAA,CAAC,IAAI,IAAE,CAAP;AACA5B,MAAAA,CAAC,GAAG,CAAC,IAAE2B,CAAH,IAAM,CAAV;AACA1B,MAAAA,CAAC,GAAG,CAAC,IAAE0B,CAAC,GAACuH,KAAK,CAACD,OAAO,GAACrH,CAAT,CAAP,GAAmBsH,KAAK,CAAC5L,OAAO,GAAC2L,OAAO,GAACrH,CAAjB,CAA3B,IAAgD,CAApD;AACAlD,MAAAA,CAAC,GAAG,KAAKsB,CAAC,GAACC,CAAP,CAAJ;AACH,KALM,MAKA;AACH2B,MAAAA,CAAC,IAAI,IAAE,CAAP;AACA3B,MAAAA,CAAC,GAAG,CAAC,IAAE0B,CAAH,IAAM,CAAV;AACAjD,MAAAA,CAAC,GAAG,CAAC,IAAEiD,CAAC,GAACuH,KAAK,CAACD,OAAO,GAACrH,CAAT,CAAP,GAAmBsH,KAAK,CAAC5L,OAAO,GAAC2L,OAAO,GAACrH,CAAjB,CAA3B,IAAgD,CAApD;AACA5B,MAAAA,CAAC,GAAG,KAAKC,CAAC,GAACvB,CAAP,CAAJ;AACH;;AACDsB,IAAAA,CAAC,GAAG/C,KAAK,CAAC/B,CAAC,GAAC8E,CAAF,GAAI,CAAL,CAAT;AACAC,IAAAA,CAAC,GAAGhD,KAAK,CAAC/B,CAAC,GAAC+E,CAAF,GAAI,CAAL,CAAT;AACAvB,IAAAA,CAAC,GAAGzB,KAAK,CAAC/B,CAAC,GAACwD,CAAF,GAAI,CAAL,CAAT;AACA,WAAO,CAACsB,CAAC,GAAC,GAAH,EAAQC,CAAC,GAAC,GAAV,EAAevB,CAAC,GAAC,GAAjB,EAAsBzC,IAAI,CAACX,MAAL,GAAc,CAAd,GAAkBW,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAAlD,CAAP;AACH,GAvCD;;AAyCA,MAAIqN,SAAS,GAAGF,OAAhB;AAEA,MAAIG,QAAQ,GAAGxM,KAAK,CAACI,MAArB;AACA,MAAIqM,MAAM,GAAGzM,KAAK,CAACG,IAAnB;AACA,MAAIuM,QAAQ,GAAG9J,QAAf;AACA,MAAI+J,OAAO,GAAGrK,OAAd;AACA,MAAIsK,OAAO,GAAGlM,OAAd;AAEA,MAAImM,OAAO,GAAGb,SAAd;;AAEAW,EAAAA,OAAO,CAAC9N,SAAR,CAAkBiO,GAAlB,GAAwB,YAAW;AAC/B,WAAOD,OAAO,CAAC,KAAK5K,IAAN,CAAd;AACH,GAFD;;AAIAyK,EAAAA,QAAQ,CAACI,GAAT,GAAe,YAAY;AACvB,QAAI5N,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+B2K,OAA/B,EAAwC,CAAE,IAAF,EAASjK,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOA0N,EAAAA,OAAO,CAACjM,MAAR,CAAemM,GAAf,GAAqBP,SAArB;AAEAK,EAAAA,OAAO,CAAChM,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAGsN,QAAQ,CAACtN,IAAD,EAAO,KAAP,CAAf;;AACA,UAAIuN,MAAM,CAACvN,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,eAAO,KAAP;AACH;AACJ;AAVmB,GAAxB;AAaA,MAAIwO,QAAQ,GAAG/M,KAAK,CAACI,MAArB;AACA,MAAI4M,MAAM,GAAGhN,KAAK,CAACG,IAAnB;AACA,MAAI8M,QAAQ,GAAGrK,QAAf;AACA,MAAIsK,OAAO,GAAG5K,OAAd;AACA,MAAI6K,OAAO,GAAGzM,OAAd;AAEA,MAAI0M,SAAS,GAAGpI,SAAhB;;AAEAkI,EAAAA,OAAO,CAACrO,SAAR,CAAkB0I,GAAlB,GAAwB,YAAW;AAC/B,WAAO6F,SAAS,CAAC,KAAKnL,IAAN,CAAhB;AACH,GAFD;;AAIAgL,EAAAA,QAAQ,CAAC1F,GAAT,GAAe,YAAY;AACvB,QAAIrI,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BkL,OAA/B,EAAwC,CAAE,IAAF,EAASxK,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAiO,EAAAA,OAAO,CAACxM,MAAR,CAAe4G,GAAf,GAAqBrB,SAArB;AAEAiH,EAAAA,OAAO,CAACvM,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAG6N,QAAQ,CAAC7N,IAAD,EAAO,KAAP,CAAf;;AACA,UAAI8N,MAAM,CAAC9N,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,eAAO,KAAP;AACH;AACJ;AAVmB,GAAxB;AAaA,MAAI8O,QAAQ,GAAGrN,KAAK,CAACI,MAArB;AACA,MAAIkN,KAAK,GAAGxN,IAAI,CAACnC,GAAjB;AACA,MAAI4P,KAAK,GAAGzN,IAAI,CAAClC,GAAjB;AAEA;AACJ;AACA;AACA;AACA;AACA;;AACI,MAAI4P,OAAO,GAAG,YAAY;AACtB,QAAItO,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,IAAAA,IAAI,GAAGmO,QAAQ,CAACnO,IAAD,EAAO,KAAP,CAAf;AACA,QAAI+D,CAAC,GAAG/D,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIgE,CAAC,GAAGhE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIyC,CAAC,GAAGzC,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI6M,IAAI,GAAGuB,KAAK,CAACrK,CAAD,EAAIC,CAAJ,EAAOvB,CAAP,CAAhB;AACA,QAAI8L,IAAI,GAAGF,KAAK,CAACtK,CAAD,EAAIC,CAAJ,EAAOvB,CAAP,CAAhB;AACA,QAAI+G,KAAK,GAAG+E,IAAI,GAAG1B,IAAnB;AACA,QAAIlH,CAAJ,EAAMD,CAAN,EAAQ6E,CAAR;AACAA,IAAAA,CAAC,GAAGgE,IAAI,GAAG,KAAX;;AACA,QAAIA,IAAI,KAAK,CAAb,EAAgB;AACZ5I,MAAAA,CAAC,GAAGC,MAAM,CAACC,GAAX;AACAH,MAAAA,CAAC,GAAG,CAAJ;AACH,KAHD,MAGO;AACHA,MAAAA,CAAC,GAAG8D,KAAK,GAAG+E,IAAZ;;AACA,UAAIxK,CAAC,KAAKwK,IAAV,EAAgB;AAAE5I,QAAAA,CAAC,GAAG,CAAC3B,CAAC,GAAGvB,CAAL,IAAU+G,KAAd;AAAsB;;AACxC,UAAIxF,CAAC,KAAKuK,IAAV,EAAgB;AAAE5I,QAAAA,CAAC,GAAG,IAAE,CAAClD,CAAC,GAAGsB,CAAL,IAAUyF,KAAhB;AAAwB;;AAC1C,UAAI/G,CAAC,KAAK8L,IAAV,EAAgB;AAAE5I,QAAAA,CAAC,GAAG,IAAE,CAAC5B,CAAC,GAAGC,CAAL,IAAUwF,KAAhB;AAAwB;;AAC1C7D,MAAAA,CAAC,IAAI,EAAL;;AACA,UAAIA,CAAC,GAAG,CAAR,EAAW;AAAEA,QAAAA,CAAC,IAAI,GAAL;AAAW;AAC3B;;AACD,WAAO,CAACA,CAAD,EAAID,CAAJ,EAAO6E,CAAP,CAAP;AACH,GAzBD;;AA2BA,MAAIiE,SAAS,GAAGF,OAAhB;AAEA,MAAIG,QAAQ,GAAG3N,KAAK,CAACI,MAArB;AACA,MAAIwN,OAAO,GAAG9N,IAAI,CAACiJ,KAAnB;;AAEA,MAAI8E,OAAO,GAAG,YAAY;AACtB,QAAIhI,MAAJ,EAAYoD,QAAZ,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,QAApD;AAEA,QAAInK,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAChBjC,IAAAA,IAAI,GAAGyO,QAAQ,CAACzO,IAAD,EAAO,KAAP,CAAf;AACA,QAAI2F,CAAC,GAAG3F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI0F,CAAC,GAAG1F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIuK,CAAC,GAAGvK,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI+D,CAAJ,EAAMC,CAAN,EAAQvB,CAAR;AACA8H,IAAAA,CAAC,IAAI,GAAL;;AACA,QAAI7E,CAAC,KAAK,CAAV,EAAa;AACT3B,MAAAA,CAAC,GAAGC,CAAC,GAAGvB,CAAC,GAAG8H,CAAZ;AACH,KAFD,MAEO;AACH,UAAI5E,CAAC,KAAK,GAAV,EAAe;AAAEA,QAAAA,CAAC,GAAG,CAAJ;AAAQ;;AACzB,UAAIA,CAAC,GAAG,GAAR,EAAa;AAAEA,QAAAA,CAAC,IAAI,GAAL;AAAW;;AAC1B,UAAIA,CAAC,GAAG,CAAR,EAAW;AAAEA,QAAAA,CAAC,IAAI,GAAL;AAAW;;AACxBA,MAAAA,CAAC,IAAI,EAAL;AAEA,UAAI1G,CAAC,GAAGyP,OAAO,CAAC/I,CAAD,CAAf;AACA,UAAI1B,CAAC,GAAG0B,CAAC,GAAG1G,CAAZ;AACA,UAAIyD,CAAC,GAAG6H,CAAC,IAAI,IAAI7E,CAAR,CAAT;AACA,UAAI2E,CAAC,GAAGE,CAAC,IAAI,IAAI7E,CAAC,GAAGzB,CAAZ,CAAT;AACA,UAAIqG,CAAC,GAAGC,CAAC,IAAI,IAAI7E,CAAC,IAAI,IAAIzB,CAAR,CAAT,CAAT;;AAEA,cAAQhF,CAAR;AACI,aAAK,CAAL;AAAS0H,UAAAA,MAAM,GAAG,CAAC4D,CAAD,EAAID,CAAJ,EAAO5H,CAAP,CAAT,EAAoBqB,CAAC,GAAG4C,MAAM,CAAC,CAAD,CAA9B,EAAmC3C,CAAC,GAAG2C,MAAM,CAAC,CAAD,CAA7C,EAAkDlE,CAAC,GAAGkE,MAAM,CAAC,CAAD,CAA7D;AAAmE;;AAC3E,aAAK,CAAL;AAASoD,UAAAA,QAAQ,GAAG,CAACM,CAAD,EAAIE,CAAJ,EAAO7H,CAAP,CAAX,EAAsBqB,CAAC,GAAGgG,QAAQ,CAAC,CAAD,CAAlC,EAAuC/F,CAAC,GAAG+F,QAAQ,CAAC,CAAD,CAAnD,EAAwDtH,CAAC,GAAGsH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACtH,CAAD,EAAI6H,CAAJ,EAAOD,CAAP,CAAX,EAAsBvG,CAAC,GAAGiG,QAAQ,CAAC,CAAD,CAAlC,EAAuChG,CAAC,GAAGgG,QAAQ,CAAC,CAAD,CAAnD,EAAwDvH,CAAC,GAAGuH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACvH,CAAD,EAAI2H,CAAJ,EAAOE,CAAP,CAAX,EAAsBxG,CAAC,GAAGkG,QAAQ,CAAC,CAAD,CAAlC,EAAuCjG,CAAC,GAAGiG,QAAQ,CAAC,CAAD,CAAnD,EAAwDxH,CAAC,GAAGwH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACI,CAAD,EAAI5H,CAAJ,EAAO6H,CAAP,CAAX,EAAsBxG,CAAC,GAAGmG,QAAQ,CAAC,CAAD,CAAlC,EAAuClG,CAAC,GAAGkG,QAAQ,CAAC,CAAD,CAAnD,EAAwDzH,CAAC,GAAGyH,QAAQ,CAAC,CAAD,CAArE;AAA2E;;AACnF,aAAK,CAAL;AAASC,UAAAA,QAAQ,GAAG,CAACI,CAAD,EAAI7H,CAAJ,EAAO2H,CAAP,CAAX,EAAsBtG,CAAC,GAAGoG,QAAQ,CAAC,CAAD,CAAlC,EAAuCnG,CAAC,GAAGmG,QAAQ,CAAC,CAAD,CAAnD,EAAwD1H,CAAC,GAAG0H,QAAQ,CAAC,CAAD,CAArE;AAA2E;AANvF;AAQH;;AACD,WAAO,CAACpG,CAAD,EAAGC,CAAH,EAAKvB,CAAL,EAAOzC,IAAI,CAACX,MAAL,GAAc,CAAd,GAAgBW,IAAI,CAAC,CAAD,CAApB,GAAwB,CAA/B,CAAP;AACH,GAnCD;;AAqCA,MAAI4O,SAAS,GAAGD,OAAhB;AAEA,MAAIE,QAAQ,GAAG/N,KAAK,CAACI,MAArB;AACA,MAAI4N,MAAM,GAAGhO,KAAK,CAACG,IAAnB;AACA,MAAI8N,QAAQ,GAAGrL,QAAf;AACA,MAAIsL,OAAO,GAAG5L,OAAd;AACA,MAAI6L,OAAO,GAAGzN,OAAd;AAEA,MAAI0N,OAAO,GAAGV,SAAd;;AAEAQ,EAAAA,OAAO,CAACrP,SAAR,CAAkBwP,GAAlB,GAAwB,YAAW;AAC/B,WAAOD,OAAO,CAAC,KAAKnM,IAAN,CAAd;AACH,GAFD;;AAIAgM,EAAAA,QAAQ,CAACI,GAAT,GAAe,YAAY;AACvB,QAAInP,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BkM,OAA/B,EAAwC,CAAE,IAAF,EAASxL,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAiP,EAAAA,OAAO,CAACxN,MAAR,CAAe0N,GAAf,GAAqBP,SAArB;AAEAK,EAAAA,OAAO,CAACvN,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAG6O,QAAQ,CAAC7O,IAAD,EAAO,KAAP,CAAf;;AACA,UAAI8O,MAAM,CAAC9O,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,eAAO,KAAP;AACH;AACJ;AAVmB,GAAxB;AAaA,MAAI+P,YAAY,GAAG;AACf;AACAC,IAAAA,EAAE,EAAE,EAFW;AAIf;AACAC,IAAAA,EAAE,EAAE,QALW;AAMfC,IAAAA,EAAE,EAAE,CANW;AAOfC,IAAAA,EAAE,EAAE,QAPW;AASfC,IAAAA,EAAE,EAAE,WATW;AASG;AAClB3I,IAAAA,EAAE,EAAE,WAVW;AAUG;AAClBD,IAAAA,EAAE,EAAE,UAXW;AAWG;AAClBD,IAAAA,EAAE,EAAE,WAZW,CAYG;;AAZH,GAAnB;AAeA,MAAI8I,eAAe,GAAGN,YAAtB;AACA,MAAIO,QAAQ,GAAG7O,KAAK,CAACI,MAArB;AACA,MAAI0O,KAAK,GAAGhP,IAAI,CAACiP,GAAjB;;AAEA,MAAIC,SAAS,GAAG,YAAY;AACxB,QAAI9P,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAG6L,QAAQ,CAAC3P,IAAD,EAAO,KAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACA,QAAIiM,KAAK,GAAGC,OAAO,CAACjM,CAAD,EAAGC,CAAH,EAAKvB,CAAL,CAAnB;AACA,QAAIjE,CAAC,GAAGuR,KAAK,CAAC,CAAD,CAAb;AACA,QAAI3L,CAAC,GAAG2L,KAAK,CAAC,CAAD,CAAb;AACA,QAAIE,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;AACA,QAAIrP,CAAC,GAAG,MAAM0D,CAAN,GAAU,EAAlB;AACA,WAAO,CAAC1D,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAb,EAAgB,OAAOlC,CAAC,GAAG4F,CAAX,CAAhB,EAA+B,OAAOA,CAAC,GAAG6L,CAAX,CAA/B,CAAP;AACH,GAdD;;AAgBA,MAAIC,OAAO,GAAG,UAAUnM,CAAV,EAAa;AACvB,QAAI,CAACA,CAAC,IAAI,GAAN,KAAc,OAAlB,EAA2B;AAAE,aAAOA,CAAC,GAAG,KAAX;AAAmB;;AAChD,WAAO6L,KAAK,CAAC,CAAC7L,CAAC,GAAG,KAAL,IAAc,KAAf,EAAsB,GAAtB,CAAZ;AACH,GAHD;;AAKA,MAAIoM,OAAO,GAAG,UAAU7F,CAAV,EAAa;AACvB,QAAIA,CAAC,GAAGoF,eAAe,CAAC9I,EAAxB,EAA4B;AAAE,aAAOgJ,KAAK,CAACtF,CAAD,EAAI,IAAI,CAAR,CAAZ;AAAyB;;AACvD,WAAOA,CAAC,GAAGoF,eAAe,CAAC7I,EAApB,GAAyB6I,eAAe,CAACD,EAAhD;AACH,GAHD;;AAKA,MAAIO,OAAO,GAAG,UAAUjM,CAAV,EAAYC,CAAZ,EAAcvB,CAAd,EAAiB;AAC3BsB,IAAAA,CAAC,GAAGmM,OAAO,CAACnM,CAAD,CAAX;AACAC,IAAAA,CAAC,GAAGkM,OAAO,CAAClM,CAAD,CAAX;AACAvB,IAAAA,CAAC,GAAGyN,OAAO,CAACzN,CAAD,CAAX;AACA,QAAIjE,CAAC,GAAG2R,OAAO,CAAC,CAAC,YAAYpM,CAAZ,GAAgB,YAAYC,CAA5B,GAAgC,YAAYvB,CAA7C,IAAkDiN,eAAe,CAACJ,EAAnE,CAAf;AACA,QAAIlL,CAAC,GAAG+L,OAAO,CAAC,CAAC,YAAYpM,CAAZ,GAAgB,YAAYC,CAA5B,GAAgC,YAAYvB,CAA7C,IAAkDiN,eAAe,CAACH,EAAnE,CAAf;AACA,QAAIU,CAAC,GAAGE,OAAO,CAAC,CAAC,YAAYpM,CAAZ,GAAgB,YAAYC,CAA5B,GAAgC,YAAYvB,CAA7C,IAAkDiN,eAAe,CAACF,EAAnE,CAAf;AACA,WAAO,CAAChR,CAAD,EAAG4F,CAAH,EAAK6L,CAAL,CAAP;AACH,GARD;;AAUA,MAAIG,SAAS,GAAGN,SAAhB;AAEA,MAAIO,eAAe,GAAGjB,YAAtB;AACA,MAAIkB,QAAQ,GAAGxP,KAAK,CAACI,MAArB;AACA,MAAIqP,KAAK,GAAG3P,IAAI,CAACiP,GAAjB;AAEA;AACJ;AACA;AACA;AACA;;AACI,MAAIW,SAAS,GAAG,YAAY;AACxB,QAAIxQ,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,IAAAA,IAAI,GAAGsQ,QAAQ,CAACtQ,IAAD,EAAO,KAAP,CAAf;AACA,QAAIU,CAAC,GAAGV,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIwC,CAAC,GAAGxC,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIyC,CAAC,GAAGzC,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIxB,CAAJ,EAAM4F,CAAN,EAAQ6L,CAAR,EAAWlM,CAAX,EAAaC,CAAb,EAAeyM,EAAf;AAEArM,IAAAA,CAAC,GAAG,CAAC1D,CAAC,GAAG,EAAL,IAAW,GAAf;AACAlC,IAAAA,CAAC,GAAG4O,KAAK,CAAC5K,CAAD,CAAL,GAAW4B,CAAX,GAAeA,CAAC,GAAG5B,CAAC,GAAG,GAA3B;AACAyN,IAAAA,CAAC,GAAG7C,KAAK,CAAC3K,CAAD,CAAL,GAAW2B,CAAX,GAAeA,CAAC,GAAG3B,CAAC,GAAG,GAA3B;AAEA2B,IAAAA,CAAC,GAAGiM,eAAe,CAACd,EAAhB,GAAqBmB,OAAO,CAACtM,CAAD,CAAhC;AACA5F,IAAAA,CAAC,GAAG6R,eAAe,CAACf,EAAhB,GAAqBoB,OAAO,CAAClS,CAAD,CAAhC;AACAyR,IAAAA,CAAC,GAAGI,eAAe,CAACb,EAAhB,GAAqBkB,OAAO,CAACT,CAAD,CAAhC;AAEAlM,IAAAA,CAAC,GAAG4M,OAAO,CAAC,YAAYnS,CAAZ,GAAgB,YAAY4F,CAA5B,GAAgC,YAAY6L,CAA7C,CAAX,CAlBwB,CAkBqC;;AAC7DjM,IAAAA,CAAC,GAAG2M,OAAO,CAAC,CAAC,SAAD,GAAanS,CAAb,GAAiB,YAAY4F,CAA7B,GAAiC,YAAY6L,CAA9C,CAAX;AACAQ,IAAAA,EAAE,GAAGE,OAAO,CAAC,YAAYnS,CAAZ,GAAgB,YAAY4F,CAA5B,GAAgC,YAAY6L,CAA7C,CAAZ;AAEA,WAAO,CAAClM,CAAD,EAAGC,CAAH,EAAKyM,EAAL,EAAQzQ,IAAI,CAACX,MAAL,GAAc,CAAd,GAAkBW,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAApC,CAAP;AACH,GAvBD;;AAyBA,MAAI2Q,OAAO,GAAG,UAAU5M,CAAV,EAAa;AACvB,WAAO,OAAOA,CAAC,IAAI,OAAL,GAAe,QAAQA,CAAvB,GAA2B,QAAQwM,KAAK,CAACxM,CAAD,EAAI,IAAI,GAAR,CAAb,GAA4B,KAA9D,CAAP;AACH,GAFD;;AAIA,MAAI2M,OAAO,GAAG,UAAUpG,CAAV,EAAa;AACvB,WAAOA,CAAC,GAAG+F,eAAe,CAACvJ,EAApB,GAAyBwD,CAAC,GAAGA,CAAJ,GAAQA,CAAjC,GAAqC+F,eAAe,CAACxJ,EAAhB,IAAsByD,CAAC,GAAG+F,eAAe,CAACZ,EAA1C,CAA5C;AACH,GAFD;;AAIA,MAAImB,SAAS,GAAGJ,SAAhB;AAEA,MAAIK,QAAQ,GAAG/P,KAAK,CAACI,MAArB;AACA,MAAI4P,MAAM,GAAGhQ,KAAK,CAACG,IAAnB;AACA,MAAI8P,QAAQ,GAAGrN,QAAf;AACA,MAAIsN,OAAO,GAAG5N,OAAd;AACA,MAAI6N,OAAO,GAAGzP,OAAd;AAEA,MAAI0P,SAAS,GAAGd,SAAhB;;AAEAY,EAAAA,OAAO,CAACrR,SAAR,CAAkBwR,GAAlB,GAAwB,YAAW;AAC/B,WAAOD,SAAS,CAAC,KAAKnO,IAAN,CAAhB;AACH,GAFD;;AAIAgO,EAAAA,QAAQ,CAACI,GAAT,GAAe,YAAY;AACvB,QAAInR,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BkO,OAA/B,EAAwC,CAAE,IAAF,EAASxN,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAiR,EAAAA,OAAO,CAACxP,MAAR,CAAe0P,GAAf,GAAqBP,SAArB;AAEAK,EAAAA,OAAO,CAACvP,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAG6Q,QAAQ,CAAC7Q,IAAD,EAAO,KAAP,CAAf;;AACA,UAAI8Q,MAAM,CAAC9Q,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,eAAO,KAAP;AACH;AACJ;AAVmB,GAAxB;AAaA,MAAI+R,QAAQ,GAAGtQ,KAAK,CAACI,MAArB;AACA,MAAIK,OAAO,GAAGT,KAAK,CAACS,OAApB;AACA,MAAI8P,MAAM,GAAGzQ,IAAI,CAAC8L,IAAlB;AACA,MAAI4E,OAAO,GAAG1Q,IAAI,CAAC2Q,KAAnB;AACA,MAAIC,OAAO,GAAG5Q,IAAI,CAACwE,KAAnB;;AAEA,MAAIqM,SAAS,GAAG,YAAY;AACxB,QAAIzR,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAGsN,QAAQ,CAACpR,IAAD,EAAO,KAAP,CAAlB;AACA,QAAIU,CAAC,GAAGoD,GAAG,CAAC,CAAD,CAAX;AACA,QAAItB,CAAC,GAAGsB,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACA,QAAII,CAAC,GAAGmN,MAAM,CAAC7O,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAb,CAAd;AACA,QAAIkD,CAAC,GAAG,CAAC2L,OAAO,CAAC7O,CAAD,EAAID,CAAJ,CAAP,GAAgBjB,OAAhB,GAA0B,GAA3B,IAAkC,GAA1C;;AACA,QAAIiQ,OAAO,CAACtN,CAAC,GAAC,KAAH,CAAP,KAAqB,CAAzB,EAA4B;AAAEyB,MAAAA,CAAC,GAAGC,MAAM,CAACC,GAAX;AAAiB;;AAC/C,WAAO,CAACnF,CAAD,EAAIwD,CAAJ,EAAOyB,CAAP,CAAP;AACH,GAZD;;AAcA,MAAI+L,SAAS,GAAGD,SAAhB;AAEA,MAAIE,QAAQ,GAAG7Q,KAAK,CAACI,MAArB;AACA,MAAI0Q,OAAO,GAAGxB,SAAd;AACA,MAAIyB,OAAO,GAAGH,SAAd;;AAEA,MAAII,SAAS,GAAG,YAAY;AACxB,QAAI9R,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAG6N,QAAQ,CAAC3R,IAAD,EAAO,KAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACA,QAAIiM,KAAK,GAAG6B,OAAO,CAAC7N,CAAD,EAAGC,CAAH,EAAKvB,CAAL,CAAnB;AACA,QAAI/B,CAAC,GAAGqP,KAAK,CAAC,CAAD,CAAb;AACA,QAAIvN,CAAC,GAAGuN,KAAK,CAAC,CAAD,CAAb;AACA,QAAIU,EAAE,GAAGV,KAAK,CAAC,CAAD,CAAd;AACA,WAAO8B,OAAO,CAACnR,CAAD,EAAG8B,CAAH,EAAKiO,EAAL,CAAd;AACH,GAbD;;AAeA,MAAIsB,SAAS,GAAGD,SAAhB;AAEA,MAAIE,QAAQ,GAAGlR,KAAK,CAACI,MAArB;AACA,MAAII,OAAO,GAAGR,KAAK,CAACQ,OAApB;AACA,MAAI2Q,KAAK,GAAGrR,IAAI,CAACsR,GAAjB;AACA,MAAIC,KAAK,GAAGvR,IAAI,CAACsM,GAAjB;;AAEA,MAAIkF,SAAS,GAAG,YAAY;AACxB,QAAIpS,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;AAEhB;AACR;AACA;AACA;AACA;AACA;;;AAEQ,QAAI6B,GAAG,GAAGkO,QAAQ,CAAChS,IAAD,EAAO,KAAP,CAAlB;AACA,QAAIU,CAAC,GAAGoD,GAAG,CAAC,CAAD,CAAX;AACA,QAAII,CAAC,GAAGJ,GAAG,CAAC,CAAD,CAAX;AACA,QAAI6B,CAAC,GAAG7B,GAAG,CAAC,CAAD,CAAX;;AACA,QAAIsJ,KAAK,CAACzH,CAAD,CAAT,EAAc;AAAEA,MAAAA,CAAC,GAAG,CAAJ;AAAQ;;AACxBA,IAAAA,CAAC,GAAGA,CAAC,GAAGrE,OAAR;AACA,WAAO,CAACZ,CAAD,EAAIyR,KAAK,CAACxM,CAAD,CAAL,GAAWzB,CAAf,EAAkB+N,KAAK,CAACtM,CAAD,CAAL,GAAWzB,CAA7B,CAAP;AACH,GAlBD;;AAoBA,MAAImO,SAAS,GAAGD,SAAhB;AAEA,MAAIE,QAAQ,GAAGxR,KAAK,CAACI,MAArB;AACA,MAAIqR,OAAO,GAAGF,SAAd;AACA,MAAIG,OAAO,GAAG5B,SAAd;;AAEA,MAAI6B,SAAS,GAAG,YAAY;AACxB,QAAIzS,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,IAAAA,IAAI,GAAGsS,QAAQ,CAACtS,IAAD,EAAO,KAAP,CAAf;AACA,QAAIU,CAAC,GAAGV,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIkE,CAAC,GAAGlE,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI2F,CAAC,GAAG3F,IAAI,CAAC,CAAD,CAAZ;AACA,QAAI8D,GAAG,GAAGyO,OAAO,CAAE7R,CAAF,EAAIwD,CAAJ,EAAMyB,CAAN,CAAjB;AACA,QAAI+M,CAAC,GAAG5O,GAAG,CAAC,CAAD,CAAX;AACA,QAAItB,CAAC,GAAGsB,GAAG,CAAC,CAAD,CAAX;AACA,QAAI2M,EAAE,GAAG3M,GAAG,CAAC,CAAD,CAAZ;AACA,QAAIiM,KAAK,GAAGyC,OAAO,CAAEE,CAAF,EAAIlQ,CAAJ,EAAMiO,EAAN,CAAnB;AACA,QAAI1M,CAAC,GAAGgM,KAAK,CAAC,CAAD,CAAb;AACA,QAAI/L,CAAC,GAAG+L,KAAK,CAAC,CAAD,CAAb;AACA,QAAItN,CAAC,GAAGsN,KAAK,CAAC,CAAD,CAAb;AACA,WAAO,CAAChM,CAAD,EAAIC,CAAJ,EAAOvB,CAAP,EAAUzC,IAAI,CAACX,MAAL,GAAc,CAAd,GAAkBW,IAAI,CAAC,CAAD,CAAtB,GAA4B,CAAtC,CAAP;AACH,GAjBD;;AAmBA,MAAI2S,SAAS,GAAGF,SAAhB;AAEA,MAAIG,QAAQ,GAAG9R,KAAK,CAACI,MAArB;AACA,MAAI2R,OAAO,GAAGF,SAAd;;AAEA,MAAIG,OAAO,GAAG,YAAY;AACtB,QAAI9S,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI8Q,GAAG,GAAGH,QAAQ,CAAC5S,IAAD,EAAO,KAAP,CAAR,CAAsBgT,OAAtB,EAAV;AACA,WAAOH,OAAO,CAAC/P,KAAR,CAAc,KAAK,CAAnB,EAAsBiQ,GAAtB,CAAP;AACH,GAND;;AAQA,MAAIE,SAAS,GAAGH,OAAhB;AAEA,MAAII,QAAQ,GAAGpS,KAAK,CAACI,MAArB;AACA,MAAIiS,MAAM,GAAGrS,KAAK,CAACG,IAAnB;AACA,MAAImS,QAAQ,GAAG1P,QAAf;AACA,MAAI2P,OAAO,GAAGjQ,OAAd;AACA,MAAIkQ,OAAO,GAAG9R,OAAd;AAEA,MAAI+R,OAAO,GAAGxB,SAAd;;AAEAsB,EAAAA,OAAO,CAAC1T,SAAR,CAAkB6T,GAAlB,GAAwB,YAAW;AAAE,WAAOD,OAAO,CAAC,KAAKxQ,IAAN,CAAd;AAA4B,GAAjE;;AACAsQ,EAAAA,OAAO,CAAC1T,SAAR,CAAkBoT,GAAlB,GAAwB,YAAW;AAAE,WAAOQ,OAAO,CAAC,KAAKxQ,IAAN,CAAP,CAAmBiQ,OAAnB,EAAP;AAAsC,GAA3E;;AAEAI,EAAAA,QAAQ,CAACI,GAAT,GAAe,YAAY;AACvB,QAAIxT,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BuQ,OAA/B,EAAwC,CAAE,IAAF,EAAS7P,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAMAoT,EAAAA,QAAQ,CAACL,GAAT,GAAe,YAAY;AACvB,QAAI/S,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+BuQ,OAA/B,EAAwC,CAAE,IAAF,EAAS7P,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAsT,EAAAA,OAAO,CAAC7R,MAAR,CAAe+R,GAAf,GAAqBb,SAArB;AACAW,EAAAA,OAAO,CAAC7R,MAAR,CAAesR,GAAf,GAAqBE,SAArB;AAEA,GAAC,KAAD,EAAO,KAAP,EAAcQ,OAAd,CAAsB,UAAUtP,CAAV,EAAa;AAAE,WAAOmP,OAAO,CAAC5R,UAAR,CAAmBuB,IAAnB,CAAwB;AAChEP,MAAAA,CAAC,EAAE,CAD6D;AAEhEG,MAAAA,IAAI,EAAE,YAAY;AACd,YAAI7C,IAAI,GAAG,EAAX;AAAA,YAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,eAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,QAAAA,IAAI,GAAGkT,QAAQ,CAAClT,IAAD,EAAOmE,CAAP,CAAf;;AACA,YAAIgP,MAAM,CAACnT,IAAD,CAAN,KAAiB,OAAjB,IAA4BA,IAAI,CAACX,MAAL,KAAgB,CAAhD,EAAmD;AAC/C,iBAAO8E,CAAP;AACH;AACJ;AAV+D,KAAxB,CAAP;AAWhC,GAXL;AAaA;AACJ;AACA;AACA;;AAGI,MAAIuP,QAAQ,GAAG;AACXC,IAAAA,SAAS,EAAE,SADA;AAEXC,IAAAA,YAAY,EAAE,SAFH;AAGXC,IAAAA,IAAI,EAAE,SAHK;AAIXC,IAAAA,UAAU,EAAE,SAJD;AAKXC,IAAAA,KAAK,EAAE,SALI;AAMXC,IAAAA,KAAK,EAAE,SANI;AAOXC,IAAAA,MAAM,EAAE,SAPG;AAQXC,IAAAA,KAAK,EAAE,SARI;AASXC,IAAAA,cAAc,EAAE,SATL;AAUXC,IAAAA,IAAI,EAAE,SAVK;AAWXC,IAAAA,UAAU,EAAE,SAXD;AAYXC,IAAAA,KAAK,EAAE,SAZI;AAaXC,IAAAA,SAAS,EAAE,SAbA;AAcXC,IAAAA,SAAS,EAAE,SAdA;AAeXC,IAAAA,UAAU,EAAE,SAfD;AAgBXC,IAAAA,SAAS,EAAE,SAhBA;AAiBXC,IAAAA,KAAK,EAAE,SAjBI;AAkBXC,IAAAA,UAAU,EAAE,SAlBD;AAmBXC,IAAAA,cAAc,EAAE,SAnBL;AAoBXC,IAAAA,QAAQ,EAAE,SApBC;AAqBXC,IAAAA,OAAO,EAAE,SArBE;AAsBXC,IAAAA,IAAI,EAAE,SAtBK;AAuBXC,IAAAA,QAAQ,EAAE,SAvBC;AAwBXC,IAAAA,QAAQ,EAAE,SAxBC;AAyBXC,IAAAA,aAAa,EAAE,SAzBJ;AA0BXC,IAAAA,QAAQ,EAAE,SA1BC;AA2BXC,IAAAA,SAAS,EAAE,SA3BA;AA4BXC,IAAAA,QAAQ,EAAE,SA5BC;AA6BXC,IAAAA,SAAS,EAAE,SA7BA;AA8BXC,IAAAA,WAAW,EAAE,SA9BF;AA+BXC,IAAAA,cAAc,EAAE,SA/BL;AAgCXC,IAAAA,UAAU,EAAE,SAhCD;AAiCXC,IAAAA,UAAU,EAAE,SAjCD;AAkCXC,IAAAA,OAAO,EAAE,SAlCE;AAmCXC,IAAAA,UAAU,EAAE,SAnCD;AAoCXC,IAAAA,YAAY,EAAE,SApCH;AAqCXC,IAAAA,aAAa,EAAE,SArCJ;AAsCXC,IAAAA,aAAa,EAAE,SAtCJ;AAuCXC,IAAAA,aAAa,EAAE,SAvCJ;AAwCXC,IAAAA,aAAa,EAAE,SAxCJ;AAyCXC,IAAAA,UAAU,EAAE,SAzCD;AA0CXC,IAAAA,QAAQ,EAAE,SA1CC;AA2CXC,IAAAA,WAAW,EAAE,SA3CF;AA4CXC,IAAAA,OAAO,EAAE,SA5CE;AA6CXC,IAAAA,OAAO,EAAE,SA7CE;AA8CXC,IAAAA,UAAU,EAAE,SA9CD;AA+CXC,IAAAA,SAAS,EAAE,SA/CA;AAgDXC,IAAAA,WAAW,EAAE,SAhDF;AAiDXC,IAAAA,WAAW,EAAE,SAjDF;AAkDXC,IAAAA,OAAO,EAAE,SAlDE;AAmDXC,IAAAA,SAAS,EAAE,SAnDA;AAoDXC,IAAAA,UAAU,EAAE,SApDD;AAqDXC,IAAAA,IAAI,EAAE,SArDK;AAsDXC,IAAAA,SAAS,EAAE,SAtDA;AAuDXC,IAAAA,IAAI,EAAE,SAvDK;AAwDXC,IAAAA,KAAK,EAAE,SAxDI;AAyDXC,IAAAA,WAAW,EAAE,SAzDF;AA0DXC,IAAAA,IAAI,EAAE,SA1DK;AA2DXC,IAAAA,QAAQ,EAAE,SA3DC;AA4DXC,IAAAA,OAAO,EAAE,SA5DE;AA6DXC,IAAAA,SAAS,EAAE,SA7DA;AA8DXC,IAAAA,MAAM,EAAE,SA9DG;AA+DXC,IAAAA,KAAK,EAAE,SA/DI;AAgEXC,IAAAA,KAAK,EAAE,SAhEI;AAiEXC,IAAAA,UAAU,EAAE,SAjED;AAkEXC,IAAAA,QAAQ,EAAE,SAlEC;AAmEXC,IAAAA,aAAa,EAAE,SAnEJ;AAoEXC,IAAAA,SAAS,EAAE,SApEA;AAqEXC,IAAAA,YAAY,EAAE,SArEH;AAsEXC,IAAAA,SAAS,EAAE,SAtEA;AAuEXC,IAAAA,UAAU,EAAE,SAvED;AAwEXC,IAAAA,SAAS,EAAE,SAxEA;AAyEXC,IAAAA,cAAc,EAAE,SAzEL;AA0EXC,IAAAA,oBAAoB,EAAE,SA1EX;AA2EXC,IAAAA,SAAS,EAAE,SA3EA;AA4EXC,IAAAA,UAAU,EAAE,SA5ED;AA6EXC,IAAAA,SAAS,EAAE,SA7EA;AA8EXC,IAAAA,SAAS,EAAE,SA9EA;AA+EXC,IAAAA,WAAW,EAAE,SA/EF;AAgFXC,IAAAA,aAAa,EAAE,SAhFJ;AAiFXC,IAAAA,YAAY,EAAE,SAjFH;AAkFXC,IAAAA,cAAc,EAAE,SAlFL;AAmFXC,IAAAA,cAAc,EAAE,SAnFL;AAoFXC,IAAAA,cAAc,EAAE,SApFL;AAqFXC,IAAAA,WAAW,EAAE,SArFF;AAsFXC,IAAAA,IAAI,EAAE,SAtFK;AAuFXC,IAAAA,SAAS,EAAE,SAvFA;AAwFXC,IAAAA,KAAK,EAAE,SAxFI;AAyFXC,IAAAA,OAAO,EAAE,SAzFE;AA0FXC,IAAAA,MAAM,EAAE,SA1FG;AA2FXC,IAAAA,OAAO,EAAE,SA3FE;AA4FXC,IAAAA,OAAO,EAAE,SA5FE;AA6FXC,IAAAA,gBAAgB,EAAE,SA7FP;AA8FXC,IAAAA,UAAU,EAAE,SA9FD;AA+FXC,IAAAA,YAAY,EAAE,SA/FH;AAgGXC,IAAAA,YAAY,EAAE,SAhGH;AAiGXC,IAAAA,cAAc,EAAE,SAjGL;AAkGXC,IAAAA,eAAe,EAAE,SAlGN;AAmGXC,IAAAA,iBAAiB,EAAE,SAnGR;AAoGXC,IAAAA,eAAe,EAAE,SApGN;AAqGXC,IAAAA,eAAe,EAAE,SArGN;AAsGXC,IAAAA,YAAY,EAAE,SAtGH;AAuGXC,IAAAA,SAAS,EAAE,SAvGA;AAwGXC,IAAAA,SAAS,EAAE,SAxGA;AAyGXC,IAAAA,QAAQ,EAAE,SAzGC;AA0GXC,IAAAA,WAAW,EAAE,SA1GF;AA2GXC,IAAAA,IAAI,EAAE,SA3GK;AA4GXC,IAAAA,OAAO,EAAE,SA5GE;AA6GXC,IAAAA,KAAK,EAAE,SA7GI;AA8GXC,IAAAA,SAAS,EAAE,SA9GA;AA+GXC,IAAAA,MAAM,EAAE,SA/GG;AAgHXC,IAAAA,SAAS,EAAE,SAhHA;AAiHXC,IAAAA,MAAM,EAAE,SAjHG;AAkHXC,IAAAA,aAAa,EAAE,SAlHJ;AAmHXC,IAAAA,SAAS,EAAE,SAnHA;AAoHXC,IAAAA,aAAa,EAAE,SApHJ;AAqHXC,IAAAA,aAAa,EAAE,SArHJ;AAsHXC,IAAAA,UAAU,EAAE,SAtHD;AAuHXC,IAAAA,SAAS,EAAE,SAvHA;AAwHXC,IAAAA,IAAI,EAAE,SAxHK;AAyHXC,IAAAA,IAAI,EAAE,SAzHK;AA0HXC,IAAAA,IAAI,EAAE,SA1HK;AA2HXC,IAAAA,UAAU,EAAE,SA3HD;AA4HXC,IAAAA,MAAM,EAAE,SA5HG;AA6HXC,IAAAA,OAAO,EAAE,SA7HE;AA8HXC,IAAAA,OAAO,EAAE,SA9HE;AA+HXC,IAAAA,aAAa,EAAE,SA/HJ;AAgIXC,IAAAA,GAAG,EAAE,SAhIM;AAiIXC,IAAAA,SAAS,EAAE,SAjIA;AAkIXC,IAAAA,SAAS,EAAE,SAlIA;AAmIXC,IAAAA,WAAW,EAAE,SAnIF;AAoIXC,IAAAA,MAAM,EAAE,SApIG;AAqIXC,IAAAA,UAAU,EAAE,SArID;AAsIXC,IAAAA,QAAQ,EAAE,SAtIC;AAuIXC,IAAAA,QAAQ,EAAE,SAvIC;AAwIXC,IAAAA,MAAM,EAAE,SAxIG;AAyIXC,IAAAA,MAAM,EAAE,SAzIG;AA0IXC,IAAAA,OAAO,EAAE,SA1IE;AA2IXC,IAAAA,SAAS,EAAE,SA3IA;AA4IXC,IAAAA,SAAS,EAAE,SA5IA;AA6IXC,IAAAA,SAAS,EAAE,SA7IA;AA8IXC,IAAAA,IAAI,EAAE,SA9IK;AA+IXC,IAAAA,WAAW,EAAE,SA/IF;AAgJXC,IAAAA,SAAS,EAAE,SAhJA;AAiJXC,IAAAA,GAAG,EAAE,SAjJM;AAkJXC,IAAAA,IAAI,EAAE,SAlJK;AAmJXC,IAAAA,OAAO,EAAE,SAnJE;AAoJXC,IAAAA,MAAM,EAAE,SApJG;AAqJXC,IAAAA,SAAS,EAAE,SArJA;AAsJXC,IAAAA,MAAM,EAAE,SAtJG;AAuJXC,IAAAA,KAAK,EAAE,SAvJI;AAwJXC,IAAAA,KAAK,EAAE,SAxJI;AAyJXC,IAAAA,UAAU,EAAE,SAzJD;AA0JXC,IAAAA,MAAM,EAAE,SA1JG;AA2JXC,IAAAA,WAAW,EAAE;AA3JF,GAAf;AA8JA,MAAIC,QAAQ,GAAG5J,QAAf;AAEA,MAAI6J,OAAO,GAAGna,OAAd;AACA,MAAIoa,OAAO,GAAGhc,OAAd;AACA,MAAIic,MAAM,GAAG3c,KAAK,CAACG,IAAnB;AAEA,MAAIyc,MAAM,GAAGJ,QAAb;AACA,MAAIK,OAAO,GAAG5R,SAAd;AACA,MAAI6R,OAAO,GAAGtS,SAAd;;AAEAiS,EAAAA,OAAO,CAAC5d,SAAR,CAAkBL,IAAlB,GAAyB,YAAW;AAChC,QAAI4D,GAAG,GAAG0a,OAAO,CAAC,KAAK7a,IAAN,EAAY,KAAZ,CAAjB;;AACA,SAAK,IAAI9D,CAAC,GAAG,CAAR,EAAW0D,IAAI,GAAGjD,MAAM,CAACme,IAAP,CAAYH,MAAZ,CAAvB,EAA4Cze,CAAC,GAAG0D,IAAI,CAACtD,MAArD,EAA6DJ,CAAC,IAAI,CAAlE,EAAqE;AACjE,UAAI6e,CAAC,GAAGnb,IAAI,CAAC1D,CAAD,CAAZ;;AAEA,UAAIye,MAAM,CAACI,CAAD,CAAN,KAAc5a,GAAlB,EAAuB;AAAE,eAAO4a,CAAC,CAACve,WAAF,EAAP;AAAyB;AACrD;;AACD,WAAO2D,GAAP;AACH,GARD;;AAUAsa,EAAAA,OAAO,CAAC/b,MAAR,CAAeoG,KAAf,GAAuB,UAAUvI,IAAV,EAAgB;AACnCA,IAAAA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAP;;AACA,QAAIme,MAAM,CAACpe,IAAD,CAAV,EAAkB;AAAE,aAAOqe,OAAO,CAACD,MAAM,CAACpe,IAAD,CAAP,CAAd;AAA+B;;AACnD,UAAM,IAAI0D,KAAJ,CAAU,yBAAuB1D,IAAjC,CAAN;AACH,GAJD;;AAMAke,EAAAA,OAAO,CAAC9b,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,UAAU8C,CAAV,EAAa;AACf,UAAIqD,IAAI,GAAG,EAAX;AAAA,UAAe/G,GAAG,GAAGC,SAAS,CAAC7C,MAAV,GAAmB,CAAxC;;AACA,aAAQ4C,GAAG,KAAK,CAAhB,EAAoB+G,IAAI,CAAE/G,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAG,GAAG,CAAR,CAAvB;;AAEpB,UAAI,CAAC+G,IAAI,CAAC3J,MAAN,IAAgBoe,MAAM,CAAC9X,CAAD,CAAN,KAAc,QAA9B,IAA0C+X,MAAM,CAAC/X,CAAC,CAACpG,WAAF,EAAD,CAApD,EAAuE;AACnE,eAAO,OAAP;AACH;AACJ;AATmB,GAAxB;AAYA,MAAIwe,QAAQ,GAAGjd,KAAK,CAACI,MAArB;;AAEA,MAAI8c,SAAS,GAAG,YAAY;AACxB,QAAIhe,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI6B,GAAG,GAAGia,QAAQ,CAAC/d,IAAD,EAAO,KAAP,CAAlB;AACA,QAAI+D,CAAC,GAAGD,GAAG,CAAC,CAAD,CAAX;AACA,QAAIE,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;AACA,QAAIrB,CAAC,GAAGqB,GAAG,CAAC,CAAD,CAAX;AACA,WAAO,CAACC,CAAC,IAAI,EAAN,KAAaC,CAAC,IAAI,CAAlB,IAAuBvB,CAA9B;AACH,GATD;;AAWA,MAAIwb,SAAS,GAAGD,SAAhB;AAEA,MAAIE,MAAM,GAAGpd,KAAK,CAACG,IAAnB;;AAEA,MAAIkd,OAAO,GAAG,UAAUC,GAAV,EAAe;AACzB,QAAIF,MAAM,CAACE,GAAD,CAAN,IAAe,QAAf,IAA2BA,GAAG,IAAI,CAAlC,IAAuCA,GAAG,IAAI,QAAlD,EAA4D;AACxD,UAAIra,CAAC,GAAGqa,GAAG,IAAI,EAAf;AACA,UAAIpa,CAAC,GAAIoa,GAAG,IAAI,CAAR,GAAa,IAArB;AACA,UAAI3b,CAAC,GAAG2b,GAAG,GAAG,IAAd;AACA,aAAO,CAACra,CAAD,EAAGC,CAAH,EAAKvB,CAAL,EAAO,CAAP,CAAP;AACH;;AACD,UAAM,IAAIO,KAAJ,CAAU,wBAAsBob,GAAhC,CAAN;AACH,GARD;;AAUA,MAAIC,SAAS,GAAGF,OAAhB;AAEA,MAAIG,QAAQ,GAAG5a,QAAf;AACA,MAAI6a,OAAO,GAAGnb,OAAd;AACA,MAAIob,OAAO,GAAGhd,OAAd;AACA,MAAIid,MAAM,GAAG3d,KAAK,CAACG,IAAnB;AAEA,MAAIyd,OAAO,GAAGT,SAAd;;AAEAM,EAAAA,OAAO,CAAC5e,SAAR,CAAkBye,GAAlB,GAAwB,YAAW;AAC/B,WAAOM,OAAO,CAAC,KAAK3b,IAAN,CAAd;AACH,GAFD;;AAIAub,EAAAA,QAAQ,CAACF,GAAT,GAAe,YAAY;AACvB,QAAIpe,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+Byb,OAA/B,EAAwC,CAAE,IAAF,EAAS/a,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOAwe,EAAAA,OAAO,CAAC/c,MAAR,CAAe2c,GAAf,GAAqBC,SAArB;AAEAG,EAAAA,OAAO,CAAC9c,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,UAAIjC,IAAI,CAACX,MAAL,KAAgB,CAAhB,IAAqBof,MAAM,CAACze,IAAI,CAAC,CAAD,CAAL,CAAN,KAAoB,QAAzC,IAAqDA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAhE,IAAqEA,IAAI,CAAC,CAAD,CAAJ,IAAW,QAApF,EAA8F;AAC1F,eAAO,KAAP;AACH;AACJ;AATmB,GAAxB;AAYA,MAAI2e,QAAQ,GAAGjb,QAAf;AACA,MAAIkb,OAAO,GAAGxb,OAAd;AACA,MAAIyb,OAAO,GAAGrd,OAAd;AACA,MAAIsd,QAAQ,GAAGhe,KAAK,CAACI,MAArB;AACA,MAAI6d,MAAM,GAAGje,KAAK,CAACG,IAAnB;AACA,MAAI+d,OAAO,GAAGpe,IAAI,CAACwE,KAAnB;;AAEAwZ,EAAAA,OAAO,CAACjf,SAAR,CAAkBd,GAAlB,GAAwB,UAASsG,GAAT,EAAc;AAClC,QAAKA,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,IAAJ;;AAEtB,QAAIA,GAAG,KAAK,KAAZ,EAAmB;AAAE,aAAO,KAAKpC,IAAL,CAAU/D,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,CAAP;AAA8B;;AACnD,WAAO,KAAK+D,IAAL,CAAU/D,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,EAAqBuB,GAArB,CAAyBye,OAAzB,CAAP;AACH,GALD;;AAOAJ,EAAAA,OAAO,CAACjf,SAAR,CAAkB0G,IAAlB,GAAyB,UAASlB,GAAT,EAAc;AACnC,QAAKA,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,IAAJ;AAEtB,WAAO,KAAKpC,IAAL,CAAU/D,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,EAAqBuB,GAArB,CAAyB,UAAUgK,CAAV,EAAYtL,CAAZ,EAAe;AAC3C,aAAOA,CAAC,GAAC,CAAF,GAAOkG,GAAG,KAAK,KAAR,GAAgBoF,CAAhB,GAAoByU,OAAO,CAACzU,CAAD,CAAlC,GAAyCA,CAAhD;AACH,KAFM,CAAP;AAGH,GAND;;AAQAoU,EAAAA,QAAQ,CAAC9f,GAAT,GAAe,YAAY;AACvB,QAAImB,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+B8b,OAA/B,EAAwC,CAAE,IAAF,EAASpb,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,KAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GALD;;AAOA6e,EAAAA,OAAO,CAACpd,MAAR,CAAe5C,GAAf,GAAqB,YAAY;AAC7B,QAAImB,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAIoE,IAAI,GAAGyY,QAAQ,CAAC9e,IAAD,EAAO,MAAP,CAAnB;;AACA,QAAIqG,IAAI,CAAC,CAAD,CAAJ,KAAY/F,SAAhB,EAA2B;AAAE+F,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV;AAAc;;AAC3C,WAAOA,IAAP;AACH,GAPD;;AASAwY,EAAAA,OAAO,CAACnd,UAAR,CAAmBuB,IAAnB,CAAwB;AACpBP,IAAAA,CAAC,EAAE,CADiB;AAEpBG,IAAAA,IAAI,EAAE,YAAY;AACd,UAAI7C,IAAI,GAAG,EAAX;AAAA,UAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,aAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhBjC,MAAAA,IAAI,GAAG8e,QAAQ,CAAC9e,IAAD,EAAO,MAAP,CAAf;;AACA,UAAI+e,MAAM,CAAC/e,IAAD,CAAN,KAAiB,OAAjB,KAA6BA,IAAI,CAACX,MAAL,KAAgB,CAAhB,IAC7BW,IAAI,CAACX,MAAL,KAAgB,CAAhB,IAAqB0f,MAAM,CAAC/e,IAAI,CAAC,CAAD,CAAL,CAAN,IAAmB,QAAxC,IAAoDA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAA/D,IAAoEA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAD/E,CAAJ,EACuF;AACnF,eAAO,KAAP;AACH;AACJ;AAXmB,GAAxB;AAcA;AACJ;AACA;AACA;;AAEI,MAAIif,KAAK,GAAGre,IAAI,CAACse,GAAjB;;AAEA,MAAIC,iBAAiB,GAAG,UAAUC,MAAV,EAAkB;AACtC,QAAIC,IAAI,GAAGD,MAAM,GAAG,GAApB;AACA,QAAIrb,CAAJ,EAAMC,CAAN,EAAQvB,CAAR;;AACA,QAAI4c,IAAI,GAAG,EAAX,EAAe;AACXtb,MAAAA,CAAC,GAAG,GAAJ;AACAC,MAAAA,CAAC,GAAGqb,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAC,kBAAD,GAAsB,uBAAuBrb,CAAC,GAAGqb,IAAI,GAAC,CAAhC,CAAtB,GAA2D,qBAAqBJ,KAAK,CAACjb,CAAD,CAAxG;AACAvB,MAAAA,CAAC,GAAG4c,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,CAAC,kBAAD,GAAsB,sBAAsB5c,CAAC,GAAG4c,IAAI,GAAC,EAA/B,CAAtB,GAA2D,qBAAqBJ,KAAK,CAACxc,CAAD,CAAzG;AACH,KAJD,MAIO;AACHsB,MAAAA,CAAC,GAAG,qBAAqB,qBAAqBA,CAAC,GAAGsb,IAAI,GAAC,EAA9B,CAArB,GAAyD,oBAAoBJ,KAAK,CAAClb,CAAD,CAAtF;AACAC,MAAAA,CAAC,GAAG,oBAAoB,uBAAuBA,CAAC,GAAGqb,IAAI,GAAC,EAAhC,CAApB,GAA0D,mBAAmBJ,KAAK,CAACjb,CAAD,CAAtF;AACAvB,MAAAA,CAAC,GAAG,GAAJ;AACH;;AACD,WAAO,CAACsB,CAAD,EAAGC,CAAH,EAAKvB,CAAL,EAAO,CAAP,CAAP;AACH,GAbD;;AAeA,MAAI6c,iBAAiB,GAAGH,iBAAxB;AAEA;AACJ;AACA;AACA;;AAEI,MAAII,eAAe,GAAGD,iBAAtB;AACA,MAAIpe,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AACA,MAAIkE,KAAK,GAAGxE,IAAI,CAACwE,KAAjB;;AAEA,MAAIoa,iBAAiB,GAAG,YAAY;AAChC,QAAIxf,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAIpD,GAAG,GAAGqC,MAAM,CAAClB,IAAD,EAAO,KAAP,CAAhB;AACA,QAAI+D,CAAC,GAAGlF,GAAG,CAAC,CAAD,CAAX;AAAA,QAAgB4D,CAAC,GAAG5D,GAAG,CAAC,CAAD,CAAvB;AACA,QAAI4gB,OAAO,GAAG,IAAd;AACA,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,GAAG,GAAG,GAAV;AACA,QAAIN,IAAJ;;AACA,WAAOK,OAAO,GAAGD,OAAV,GAAoBE,GAA3B,EAAgC;AAC5BN,MAAAA,IAAI,GAAG,CAACK,OAAO,GAAGD,OAAX,IAAsB,GAA7B;AACA,UAAIzX,KAAK,GAAGuX,eAAe,CAACF,IAAD,CAA3B;;AACA,UAAKrX,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAjB,IAA0BvF,CAAC,GAAGsB,CAAlC,EAAsC;AAClC2b,QAAAA,OAAO,GAAGL,IAAV;AACH,OAFD,MAEO;AACHI,QAAAA,OAAO,GAAGJ,IAAV;AACH;AACJ;;AACD,WAAOja,KAAK,CAACia,IAAD,CAAZ;AACH,GApBD;;AAsBA,MAAIO,iBAAiB,GAAGJ,iBAAxB;AAEA,MAAIK,QAAQ,GAAGnc,QAAf;AACA,MAAIoc,OAAO,GAAG1c,OAAd;AACA,MAAI2c,KAAK,GAAGve,OAAZ;AAEA,MAAIwe,eAAe,GAAGJ,iBAAtB;;AAEAE,EAAAA,OAAO,CAACngB,SAAR,CAAkB0f,IAAlB,GACAS,OAAO,CAACngB,SAAR,CAAkByf,MAAlB,GACAU,OAAO,CAACngB,SAAR,CAAkBsgB,WAAlB,GAAgC,YAAW;AACvC,WAAOD,eAAe,CAAC,KAAKjd,IAAN,CAAtB;AACH,GAJD;;AAMA8c,EAAAA,QAAQ,CAACR,IAAT,GACAQ,QAAQ,CAACT,MAAT,GACAS,QAAQ,CAACI,WAAT,GAAuB,YAAY;AAC/B,QAAIjgB,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,WAAO,KAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+Bgd,OAA/B,EAAwC,CAAE,IAAF,EAAStc,MAAT,CAAiBxD,IAAjB,EAAuB,CAAC,MAAD,CAAvB,CAAxC,CAAL,GAAP;AACH,GAPD;;AASA+f,EAAAA,KAAK,CAACte,MAAN,CAAa4d,IAAb,GACAU,KAAK,CAACte,MAAN,CAAa2d,MAAb,GACAW,KAAK,CAACte,MAAN,CAAawe,WAAb,GAA2BX,iBAF3B;AAIA,MAAIY,OAAO,GAAG9c,OAAd;AACA,MAAI+c,MAAM,GAAGrf,KAAK,CAACG,IAAnB;;AAEAif,EAAAA,OAAO,CAACvgB,SAAR,CAAkB6E,KAAlB,GAA0B,UAAShC,CAAT,EAAY4d,MAAZ,EAAoB;AAC1C,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,KAAP;;AAEzB,QAAI5d,CAAC,KAAKlC,SAAN,IAAmB6f,MAAM,CAAC3d,CAAD,CAAN,KAAc,QAArC,EAA+C;AAC3C,UAAI4d,MAAJ,EAAY;AACR,aAAKrd,IAAL,CAAU,CAAV,IAAeP,CAAf;AACA,eAAO,IAAP;AACH;;AACD,aAAO,IAAI0d,OAAJ,CAAY,CAAC,KAAKnd,IAAL,CAAU,CAAV,CAAD,EAAe,KAAKA,IAAL,CAAU,CAAV,CAAf,EAA6B,KAAKA,IAAL,CAAU,CAAV,CAA7B,EAA2CP,CAA3C,CAAZ,EAA2D,KAA3D,CAAP;AACH;;AACD,WAAO,KAAKO,IAAL,CAAU,CAAV,CAAP;AACH,GAXD;;AAaA,MAAIsd,OAAO,GAAGjd,OAAd;;AAEAid,EAAAA,OAAO,CAAC1gB,SAAR,CAAkB2gB,OAAlB,GAA4B,YAAW;AACnC,WAAO,KAAKvd,IAAL,CAAUjE,QAAV,IAAsB,KAA7B;AACH,GAFD;;AAIA,MAAIyhB,OAAO,GAAGnd,OAAd;AACA,MAAIod,eAAe,GAAGpR,YAAtB;;AAEAmR,EAAAA,OAAO,CAAC5gB,SAAR,CAAkB8gB,MAAlB,GAA2B,UAASC,MAAT,EAAiB;AAC3C,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,CAAP;AAEzB,QAAIve,EAAE,GAAG,IAAT;AACA,QAAIgP,GAAG,GAAGhP,EAAE,CAACgP,GAAH,EAAV;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,IAAUqP,eAAe,CAACnR,EAAhB,GAAqBqR,MAA/B;AACA,WAAO,IAAIH,OAAJ,CAAYpP,GAAZ,EAAiB,KAAjB,EAAwB3M,KAAxB,CAA8BrC,EAAE,CAACqC,KAAH,EAA9B,EAA0C,IAA1C,CAAP;AACA,GAPD;;AASA+b,EAAAA,OAAO,CAAC5gB,SAAR,CAAkBghB,QAAlB,GAA6B,UAASD,MAAT,EAAiB;AAC7C,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,CAAP;AAEzB,WAAO,KAAKD,MAAL,CAAY,CAACC,MAAb,CAAP;AACA,GAJD;;AAMAH,EAAAA,OAAO,CAAC5gB,SAAR,CAAkBihB,MAAlB,GAA2BL,OAAO,CAAC5gB,SAAR,CAAkB8gB,MAA7C;AACAF,EAAAA,OAAO,CAAC5gB,SAAR,CAAkBkhB,QAAlB,GAA6BN,OAAO,CAAC5gB,SAAR,CAAkBghB,QAA/C;AAEA,MAAIG,OAAO,GAAG1d,OAAd;;AAEA0d,EAAAA,OAAO,CAACnhB,SAAR,CAAkBohB,GAAlB,GAAwB,UAASC,EAAT,EAAa;AACjC,QAAIld,GAAG,GAAGkd,EAAE,CAAC7gB,KAAH,CAAS,GAAT,CAAV;AACA,QAAIkC,IAAI,GAAGyB,GAAG,CAAC,CAAD,CAAd;AACA,QAAImd,OAAO,GAAGnd,GAAG,CAAC,CAAD,CAAjB;AACA,QAAIod,GAAG,GAAG,KAAK7e,IAAL,GAAV;;AACA,QAAI4e,OAAJ,EAAa;AACT,UAAIhiB,CAAC,GAAGoD,IAAI,CAACgK,OAAL,CAAa4U,OAAb,CAAR;;AACA,UAAIhiB,CAAC,GAAG,CAAC,CAAT,EAAY;AAAE,eAAOiiB,GAAG,CAACjiB,CAAD,CAAV;AAAgB;;AAC9B,YAAM,IAAI+D,KAAJ,CAAW,qBAAqBie,OAArB,GAA+B,WAA/B,GAA6C5e,IAAxD,CAAN;AACH,KAJD,MAIO;AACH,aAAO6e,GAAP;AACH;AACJ,GAZD;;AAcA,MAAIC,OAAO,GAAG/d,OAAd;AACA,MAAIge,MAAM,GAAGtgB,KAAK,CAACG,IAAnB;AACA,MAAIogB,KAAK,GAAGzgB,IAAI,CAACiP,GAAjB;AAEA,MAAIyR,GAAG,GAAG,IAAV;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEAJ,EAAAA,OAAO,CAACxhB,SAAR,CAAkB6hB,SAAlB,GAA8B,UAASC,GAAT,EAAc;AACxC,QAAIA,GAAG,KAAKnhB,SAAR,IAAqB8gB,MAAM,CAACK,GAAD,CAAN,KAAgB,QAAzC,EAAmD;AAC/C,UAAIA,GAAG,KAAK,CAAZ,EAAe;AACX;AACA,eAAO,IAAIN,OAAJ,CAAY,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,KAAKpe,IAAL,CAAU,CAAV,CAAP,CAAZ,EAAkC,KAAlC,CAAP;AACH;;AACD,UAAI0e,GAAG,KAAK,CAAZ,EAAe;AACX;AACA,eAAO,IAAIN,OAAJ,CAAY,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,KAAKpe,IAAL,CAAU,CAAV,CAAb,CAAZ,EAAwC,KAAxC,CAAP;AACH,OAR8C,CAS/C;;;AACA,UAAI2e,OAAO,GAAG,KAAKF,SAAL,EAAd;AACA,UAAInf,IAAI,GAAG,KAAX;AACA,UAAIsf,QAAQ,GAAGJ,QAAf;;AAEA,UAAI1e,IAAI,GAAG,UAAU+e,GAAV,EAAeC,IAAf,EAAqB;AAC5B,YAAIC,GAAG,GAAGF,GAAG,CAACG,WAAJ,CAAgBF,IAAhB,EAAsB,GAAtB,EAA2Bxf,IAA3B,CAAV;AACA,YAAI2f,EAAE,GAAGF,GAAG,CAACN,SAAJ,EAAT;;AACA,YAAI5gB,IAAI,CAACqhB,GAAL,CAASR,GAAG,GAAGO,EAAf,IAAqBV,GAArB,IAA4B,CAACK,QAAQ,EAAzC,EAA6C;AACzC;AACA,iBAAOG,GAAP;AACH;;AACD,eAAOE,EAAE,GAAGP,GAAL,GAAW5e,IAAI,CAAC+e,GAAD,EAAME,GAAN,CAAf,GAA4Bjf,IAAI,CAACif,GAAD,EAAMD,IAAN,CAAvC;AACH,OARD;;AAUA,UAAIhjB,GAAG,GAAG,CAAC6iB,OAAO,GAAGD,GAAV,GAAgB5e,IAAI,CAAC,IAAIse,OAAJ,CAAY,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAZ,CAAD,EAAuB,IAAvB,CAApB,GAAmDte,IAAI,CAAC,IAAD,EAAO,IAAIse,OAAJ,CAAY,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAZ,CAAP,CAAxD,EAA4FtiB,GAA5F,EAAV;AACA,aAAO,IAAIsiB,OAAJ,CAAYtiB,GAAG,CAAC2E,MAAJ,CAAY,CAAC,KAAKT,IAAL,CAAU,CAAV,CAAD,CAAZ,CAAZ,CAAP;AACH;;AACD,WAAOmf,aAAa,CAACpf,KAAd,CAAoB,KAAK,CAAzB,EAA6B,KAAKC,IAAN,CAAY/D,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,CAA5B,CAAP;AACH,GA7BD;;AAgCA,MAAIkjB,aAAa,GAAG,UAAUne,CAAV,EAAYC,CAAZ,EAAcvB,CAAd,EAAiB;AACjC;AACA;AACAsB,IAAAA,CAAC,GAAGoe,WAAW,CAACpe,CAAD,CAAf;AACAC,IAAAA,CAAC,GAAGme,WAAW,CAACne,CAAD,CAAf;AACAvB,IAAAA,CAAC,GAAG0f,WAAW,CAAC1f,CAAD,CAAf;AACA,WAAO,SAASsB,CAAT,GAAa,SAASC,CAAtB,GAA0B,SAASvB,CAA1C;AACH,GAPD;;AASA,MAAI0f,WAAW,GAAG,UAAU3jB,CAAV,EAAa;AAC3BA,IAAAA,CAAC,IAAI,GAAL;AACA,WAAOA,CAAC,IAAI,OAAL,GAAeA,CAAC,GAAC,KAAjB,GAAyB6iB,KAAK,CAAC,CAAC7iB,CAAC,GAAC,KAAH,IAAU,KAAX,EAAkB,GAAlB,CAArC;AACH,GAHD;;AAKA,MAAI4jB,cAAc,GAAG,EAArB;AAEA,MAAIC,OAAO,GAAGjf,OAAd;AACA,MAAIkf,MAAM,GAAGxhB,KAAK,CAACG,IAAnB;AACA,MAAIshB,YAAY,GAAGH,cAAnB;;AAEA,MAAII,KAAK,GAAG,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AACjC,QAAKA,CAAC,KAAK,KAAK,CAAhB,EAAoBA,CAAC,GAAC,GAAF;AACpB,QAAI+E,IAAI,GAAG,EAAX;AAAA,QAAe/G,GAAG,GAAGC,SAAS,CAAC7C,MAAV,GAAmB,CAAxC;;AACA,WAAQ4C,GAAG,KAAK,CAAhB,EAAoB+G,IAAI,CAAE/G,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAG,GAAG,CAAR,CAAvB;;AAEpB,QAAII,IAAI,GAAG2G,IAAI,CAAC,CAAD,CAAJ,IAAW,MAAtB;;AACA,QAAI,CAACuZ,YAAY,CAAClgB,IAAD,CAAb,IAAuB,CAAC2G,IAAI,CAAC3J,MAAjC,EAAyC;AACrC;AACAgD,MAAAA,IAAI,GAAG3C,MAAM,CAACme,IAAP,CAAY0E,YAAZ,EAA0B,CAA1B,CAAP;AACH;;AACD,QAAI,CAACA,YAAY,CAAClgB,IAAD,CAAjB,EAAyB;AACrB,YAAM,IAAIW,KAAJ,CAAW,wBAAwBX,IAAxB,GAA+B,iBAA1C,CAAN;AACH;;AACD,QAAIigB,MAAM,CAACG,IAAD,CAAN,KAAiB,QAArB,EAA+B;AAAEA,MAAAA,IAAI,GAAG,IAAIJ,OAAJ,CAAYI,IAAZ,CAAP;AAA2B;;AAC5D,QAAIH,MAAM,CAACI,IAAD,CAAN,KAAiB,QAArB,EAA+B;AAAEA,MAAAA,IAAI,GAAG,IAAIL,OAAJ,CAAYK,IAAZ,CAAP;AAA2B;;AAC5D,WAAOH,YAAY,CAAClgB,IAAD,CAAZ,CAAmBogB,IAAnB,EAAyBC,IAAzB,EAA+Bze,CAA/B,EACFO,KADE,CACIie,IAAI,CAACje,KAAL,KAAeP,CAAC,IAAIye,IAAI,CAACle,KAAL,KAAeie,IAAI,CAACje,KAAL,EAAnB,CADpB,CAAP;AAEH,GAjBD;;AAmBA,MAAIme,OAAO,GAAGvf,OAAd;AACA,MAAIwf,GAAG,GAAGJ,KAAV;;AAEAG,EAAAA,OAAO,CAAChjB,SAAR,CAAkBijB,GAAlB,GACAD,OAAO,CAAChjB,SAAR,CAAkBoiB,WAAlB,GAAgC,UAASW,IAAT,EAAeze,CAAf,EAAkB;AACjD,QAAKA,CAAC,KAAK,KAAK,CAAhB,EAAoBA,CAAC,GAAC,GAAF;AACpB,QAAI+E,IAAI,GAAG,EAAX;AAAA,QAAe/G,GAAG,GAAGC,SAAS,CAAC7C,MAAV,GAAmB,CAAxC;;AACA,WAAQ4C,GAAG,KAAK,CAAhB,EAAoB+G,IAAI,CAAE/G,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAG,GAAG,CAAR,CAAvB;;AAEpB,WAAO2gB,GAAG,CAAC9f,KAAJ,CAAU,KAAK,CAAf,EAAkB,CAAE,IAAF,EAAQ4f,IAAR,EAAcze,CAAd,EAAkBT,MAAlB,CAA0BwF,IAA1B,CAAlB,CAAP;AACA,GAPD;;AASA,MAAI6Z,OAAO,GAAGzf,OAAd;;AAEAyf,EAAAA,OAAO,CAACljB,SAAR,CAAkBmjB,WAAlB,GAAgC,UAAS1C,MAAT,EAAiB;AAChD,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,KAAP;AAEzB,QAAIvhB,GAAG,GAAG,KAAKkE,IAAf;AACA,QAAIP,CAAC,GAAG3D,GAAG,CAAC,CAAD,CAAX;;AACA,QAAIuhB,MAAJ,EAAY;AACX,WAAKrd,IAAL,GAAY,CAAClE,GAAG,CAAC,CAAD,CAAH,GAAO2D,CAAR,EAAW3D,GAAG,CAAC,CAAD,CAAH,GAAO2D,CAAlB,EAAqB3D,GAAG,CAAC,CAAD,CAAH,GAAO2D,CAA5B,EAA+BA,CAA/B,CAAZ;AACA,aAAO,IAAP;AACA,KAHD,MAGO;AACN,aAAO,IAAIqgB,OAAJ,CAAY,CAAChkB,GAAG,CAAC,CAAD,CAAH,GAAO2D,CAAR,EAAW3D,GAAG,CAAC,CAAD,CAAH,GAAO2D,CAAlB,EAAqB3D,GAAG,CAAC,CAAD,CAAH,GAAO2D,CAA5B,EAA+BA,CAA/B,CAAZ,EAA+C,KAA/C,CAAP;AACA;AACD,GAXD;;AAaA,MAAIugB,OAAO,GAAG3f,OAAd;AACA,MAAI4f,aAAa,GAAG5T,YAApB;;AAEA2T,EAAAA,OAAO,CAACpjB,SAAR,CAAkBsjB,QAAlB,GAA6B,UAASvC,MAAT,EAAiB;AAC7C,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,CAAP;AAEzB,QAAIve,EAAE,GAAG,IAAT;AACA,QAAIqR,GAAG,GAAGrR,EAAE,CAACqR,GAAH,EAAV;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,IAAUwP,aAAa,CAAC3T,EAAd,GAAmBqR,MAA7B;;AACA,QAAIlN,GAAG,CAAC,CAAD,CAAH,GAAS,CAAb,EAAgB;AAAEA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAAa;;AAC/B,WAAO,IAAIuP,OAAJ,CAAYvP,GAAZ,EAAiB,KAAjB,EAAwBhP,KAAxB,CAA8BrC,EAAE,CAACqC,KAAH,EAA9B,EAA0C,IAA1C,CAAP;AACA,GARD;;AAUAue,EAAAA,OAAO,CAACpjB,SAAR,CAAkBujB,UAAlB,GAA+B,UAASxC,MAAT,EAAiB;AAC/C,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,CAAP;AAEzB,WAAO,KAAKuC,QAAL,CAAc,CAACvC,MAAf,CAAP;AACA,GAJD;;AAMA,MAAIyC,OAAO,GAAG/f,OAAd;AACA,MAAIggB,MAAM,GAAGtiB,KAAK,CAACG,IAAnB;;AAEAkiB,EAAAA,OAAO,CAACxjB,SAAR,CAAkB0jB,GAAlB,GAAwB,UAASrC,EAAT,EAAasC,KAAb,EAAoBlD,MAApB,EAA4B;AAChD,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAC,KAAP;AAEzB,QAAItc,GAAG,GAAGkd,EAAE,CAAC7gB,KAAH,CAAS,GAAT,CAAV;AACA,QAAIkC,IAAI,GAAGyB,GAAG,CAAC,CAAD,CAAd;AACA,QAAImd,OAAO,GAAGnd,GAAG,CAAC,CAAD,CAAjB;AACA,QAAIod,GAAG,GAAG,KAAK7e,IAAL,GAAV;;AACA,QAAI4e,OAAJ,EAAa;AACT,UAAIhiB,CAAC,GAAGoD,IAAI,CAACgK,OAAL,CAAa4U,OAAb,CAAR;;AACA,UAAIhiB,CAAC,GAAG,CAAC,CAAT,EAAY;AACR,YAAImkB,MAAM,CAACE,KAAD,CAAN,IAAiB,QAArB,EAA+B;AAC3B,kBAAOA,KAAK,CAACC,MAAN,CAAa,CAAb,CAAP;AACI,iBAAK,GAAL;AAAUrC,cAAAA,GAAG,CAACjiB,CAAD,CAAH,IAAU,CAACqkB,KAAX;AAAkB;;AAC5B,iBAAK,GAAL;AAAUpC,cAAAA,GAAG,CAACjiB,CAAD,CAAH,IAAU,CAACqkB,KAAX;AAAkB;;AAC5B,iBAAK,GAAL;AAAUpC,cAAAA,GAAG,CAACjiB,CAAD,CAAH,IAAU,CAAEqkB,KAAK,CAAChd,MAAN,CAAa,CAAb,CAAZ;AAA8B;;AACxC,iBAAK,GAAL;AAAU4a,cAAAA,GAAG,CAACjiB,CAAD,CAAH,IAAU,CAAEqkB,KAAK,CAAChd,MAAN,CAAa,CAAb,CAAZ;AAA8B;;AACxC;AAAS4a,cAAAA,GAAG,CAACjiB,CAAD,CAAH,GAAS,CAACqkB,KAAV;AALb;AAOH,SARD,MAQO,IAAIF,MAAM,CAACE,KAAD,CAAN,KAAkB,QAAtB,EAAgC;AACnCpC,UAAAA,GAAG,CAACjiB,CAAD,CAAH,GAASqkB,KAAT;AACH,SAFM,MAEA;AACH,gBAAM,IAAItgB,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,YAAIwgB,GAAG,GAAG,IAAIL,OAAJ,CAAYjC,GAAZ,EAAiB7e,IAAjB,CAAV;;AACA,YAAI+d,MAAJ,EAAY;AACR,eAAKrd,IAAL,GAAYygB,GAAG,CAACzgB,IAAhB;AACA,iBAAO,IAAP;AACH;;AACD,eAAOygB,GAAP;AACH;;AACD,YAAM,IAAIxgB,KAAJ,CAAW,qBAAqBie,OAArB,GAA+B,WAA/B,GAA6C5e,IAAxD,CAAN;AACH,KAxBD,MAwBO;AACH,aAAO6e,GAAP;AACH;AACJ,GAlCD;;AAoCA,MAAIuC,OAAO,GAAGrgB,OAAd;;AAEA,MAAIvE,GAAG,GAAG,UAAU4jB,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAC/B,QAAIyf,IAAI,GAAGjB,IAAI,CAAC1f,IAAhB;AACA,QAAI4gB,IAAI,GAAGjB,IAAI,CAAC3f,IAAhB;AACA,WAAO,IAAI0gB,OAAJ,CACHC,IAAI,CAAC,CAAD,CAAJ,GAAUzf,CAAC,IAAI0f,IAAI,CAAC,CAAD,CAAJ,GAAQD,IAAI,CAAC,CAAD,CAAhB,CADR,EAEHA,IAAI,CAAC,CAAD,CAAJ,GAAUzf,CAAC,IAAI0f,IAAI,CAAC,CAAD,CAAJ,GAAQD,IAAI,CAAC,CAAD,CAAhB,CAFR,EAGHA,IAAI,CAAC,CAAD,CAAJ,GAAUzf,CAAC,IAAI0f,IAAI,CAAC,CAAD,CAAJ,GAAQD,IAAI,CAAC,CAAD,CAAhB,CAHR,EAIH,KAJG,CAAP;AAMH,GATD,CAx6DkB,CAm7DlB;;;AACAtB,EAAAA,cAAc,CAACvjB,GAAf,GAAqBA,GAArB;AAEA,MAAI+kB,OAAO,GAAGxgB,OAAd;AACA,MAAIygB,MAAM,GAAGjjB,IAAI,CAAC8L,IAAlB;AACA,MAAIoX,KAAK,GAAGljB,IAAI,CAACiP,GAAjB;;AAEA,MAAIkU,IAAI,GAAG,UAAUtB,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAChC,QAAIH,GAAG,GAAG2e,IAAI,CAAC1f,IAAf;AACA,QAAIihB,EAAE,GAAGlgB,GAAG,CAAC,CAAD,CAAZ;AACA,QAAImgB,EAAE,GAAGngB,GAAG,CAAC,CAAD,CAAZ;AACA,QAAIogB,EAAE,GAAGpgB,GAAG,CAAC,CAAD,CAAZ;AACA,QAAIiM,KAAK,GAAG2S,IAAI,CAAC3f,IAAjB;AACA,QAAIohB,EAAE,GAAGpU,KAAK,CAAC,CAAD,CAAd;AACA,QAAIqU,EAAE,GAAGrU,KAAK,CAAC,CAAD,CAAd;AACA,QAAIsU,EAAE,GAAGtU,KAAK,CAAC,CAAD,CAAd;AACA,WAAO,IAAI6T,OAAJ,CACHC,MAAM,CAACC,KAAK,CAACE,EAAD,EAAI,CAAJ,CAAL,IAAe,IAAE/f,CAAjB,IAAsB6f,KAAK,CAACK,EAAD,EAAI,CAAJ,CAAL,GAAclgB,CAArC,CADH,EAEH4f,MAAM,CAACC,KAAK,CAACG,EAAD,EAAI,CAAJ,CAAL,IAAe,IAAEhgB,CAAjB,IAAsB6f,KAAK,CAACM,EAAD,EAAI,CAAJ,CAAL,GAAcngB,CAArC,CAFH,EAGH4f,MAAM,CAACC,KAAK,CAACI,EAAD,EAAI,CAAJ,CAAL,IAAe,IAAEjgB,CAAjB,IAAsB6f,KAAK,CAACO,EAAD,EAAI,CAAJ,CAAL,GAAcpgB,CAArC,CAHH,EAIH,KAJG,CAAP;AAMH,GAfD,CA17DkB,CA28DlB;;;AACAme,EAAAA,cAAc,CAAC2B,IAAf,GAAsBA,IAAtB;AAEA,MAAIO,OAAO,GAAGlhB,OAAd;;AAEA,MAAI+N,GAAG,GAAG,UAAUsR,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAC/B,QAAIyf,IAAI,GAAGjB,IAAI,CAACtR,GAAL,EAAX;AACA,QAAIwS,IAAI,GAAGjB,IAAI,CAACvR,GAAL,EAAX;AACA,WAAO,IAAImT,OAAJ,CACHZ,IAAI,CAAC,CAAD,CAAJ,GAAUzf,CAAC,IAAI0f,IAAI,CAAC,CAAD,CAAJ,GAAQD,IAAI,CAAC,CAAD,CAAhB,CADR,EAEHA,IAAI,CAAC,CAAD,CAAJ,GAAUzf,CAAC,IAAI0f,IAAI,CAAC,CAAD,CAAJ,GAAQD,IAAI,CAAC,CAAD,CAAhB,CAFR,EAGHA,IAAI,CAAC,CAAD,CAAJ,GAAUzf,CAAC,IAAI0f,IAAI,CAAC,CAAD,CAAJ,GAAQD,IAAI,CAAC,CAAD,CAAhB,CAHR,EAIH,KAJG,CAAP;AAMH,GATD,CAh9DkB,CA29DlB;;;AACAtB,EAAAA,cAAc,CAACjR,GAAf,GAAqBA,GAArB;AAEA,MAAIoT,OAAO,GAAGnhB,OAAd;;AAEA,MAAIohB,IAAI,GAAG,UAAU/B,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyBE,CAAzB,EAA4B;AACnC,QAAIwC,MAAJ,EAAYoD,QAAZ;AAEA,QAAI2Z,IAAJ,EAAUC,IAAV;;AACA,QAAIxf,CAAC,KAAK,KAAV,EAAiB;AACbuf,MAAAA,IAAI,GAAGjB,IAAI,CAACpa,GAAL,EAAP;AACAsb,MAAAA,IAAI,GAAGjB,IAAI,CAACra,GAAL,EAAP;AACH,KAHD,MAGO,IAAIlE,CAAC,KAAK,KAAV,EAAiB;AACpBuf,MAAAA,IAAI,GAAGjB,IAAI,CAACtT,GAAL,EAAP;AACAwU,MAAAA,IAAI,GAAGjB,IAAI,CAACvT,GAAL,EAAP;AACH,KAHM,MAGA,IAAIhL,CAAC,KAAK,KAAV,EAAiB;AACpBuf,MAAAA,IAAI,GAAGjB,IAAI,CAAC1X,GAAL,EAAP;AACA4Y,MAAAA,IAAI,GAAGjB,IAAI,CAAC3X,GAAL,EAAP;AACH,KAHM,MAGA,IAAI5G,CAAC,KAAK,KAAV,EAAiB;AACpBuf,MAAAA,IAAI,GAAGjB,IAAI,CAAC7U,GAAL,EAAP;AACA+V,MAAAA,IAAI,GAAGjB,IAAI,CAAC9U,GAAL,EAAP;AACH,KAHM,MAGA,IAAIzJ,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC;AACnCA,MAAAA,CAAC,GAAG,KAAJ;AACAuf,MAAAA,IAAI,GAAGjB,IAAI,CAAC1P,GAAL,EAAP;AACA4Q,MAAAA,IAAI,GAAGjB,IAAI,CAAC3P,GAAL,EAAP;AACH;;AAED,QAAI0R,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC;;AACA,QAAI3gB,CAAC,CAACmC,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,GAAvB,EAA4B;AACvBK,MAAAA,MAAM,GAAG+c,IAAT,EAAee,IAAI,GAAG9d,MAAM,CAAC,CAAD,CAA5B,EAAiCge,IAAI,GAAGhe,MAAM,CAAC,CAAD,CAA9C,EAAmDke,IAAI,GAAGle,MAAM,CAAC,CAAD,CAAjE;AACCoD,MAAAA,QAAQ,GAAG4Z,IAAX,EAAiBe,IAAI,GAAG3a,QAAQ,CAAC,CAAD,CAAhC,EAAqC6a,IAAI,GAAG7a,QAAQ,CAAC,CAAD,CAApD,EAAyD+a,IAAI,GAAG/a,QAAQ,CAAC,CAAD,CAAzE;AACH;;AAED,QAAIgb,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,EAAnB;;AAEA,QAAI,CAAC9X,KAAK,CAACqX,IAAD,CAAN,IAAgB,CAACrX,KAAK,CAACsX,IAAD,CAA1B,EAAkC;AAC9B;AACA,UAAIA,IAAI,GAAGD,IAAP,IAAeC,IAAI,GAAGD,IAAP,GAAc,GAAjC,EAAsC;AAClCS,QAAAA,EAAE,GAAGR,IAAI,IAAED,IAAI,GAAC,GAAP,CAAT;AACH,OAFD,MAEO,IAAIC,IAAI,GAAGD,IAAP,IAAeA,IAAI,GAAGC,IAAP,GAAc,GAAjC,EAAsC;AACzCQ,QAAAA,EAAE,GAAGR,IAAI,GAAC,GAAL,GAASD,IAAd;AACH,OAFM,MAEA;AACHS,QAAAA,EAAE,GAAGR,IAAI,GAAGD,IAAZ;AACH;;AACDO,MAAAA,GAAG,GAAGP,IAAI,GAAGxgB,CAAC,GAAGihB,EAAjB;AACH,KAVD,MAUO,IAAI,CAAC9X,KAAK,CAACqX,IAAD,CAAV,EAAkB;AACrBO,MAAAA,GAAG,GAAGP,IAAN;;AACA,UAAI,CAACK,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAtB,KAA4B3gB,CAAC,IAAI,KAArC,EAA4C;AAAE4gB,QAAAA,GAAG,GAAGJ,IAAN;AAAa;AAC9D,KAHM,MAGA,IAAI,CAACvX,KAAK,CAACsX,IAAD,CAAV,EAAkB;AACrBM,MAAAA,GAAG,GAAGN,IAAN;;AACA,UAAI,CAACG,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAtB,KAA4B1gB,CAAC,IAAI,KAArC,EAA4C;AAAE4gB,QAAAA,GAAG,GAAGH,IAAN;AAAa;AAC9D,KAHM,MAGA;AACHI,MAAAA,GAAG,GAAGpf,MAAM,CAACC,GAAb;AACH;;AAED,QAAIkf,GAAG,KAAKzkB,SAAZ,EAAuB;AAAEykB,MAAAA,GAAG,GAAGJ,IAAI,GAAG1gB,CAAC,IAAI2gB,IAAI,GAAGD,IAAX,CAAd;AAAiC;;AAC1DM,IAAAA,GAAG,GAAGJ,IAAI,GAAG5gB,CAAC,IAAI6gB,IAAI,GAACD,IAAT,CAAd;AACA,WAAO,IAAIN,OAAJ,CAAY,CAACS,GAAD,EAAMD,GAAN,EAAWE,GAAX,CAAZ,EAA6B9gB,CAA7B,CAAP;AACH,GArDD;;AAuDA,MAAIghB,iBAAiB,GAAGX,IAAxB;;AAEA,MAAIhR,GAAG,GAAG,UAAUiP,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAClC,WAAOkhB,iBAAiB,CAAC1C,IAAD,EAAOC,IAAP,EAAaze,CAAb,EAAgB,KAAhB,CAAxB;AACA,GAFD,CAzhEkB,CA6hElB;;;AACAme,EAAAA,cAAc,CAAC5O,GAAf,GAAqBA,GAArB;AACA4O,EAAAA,cAAc,CAACrP,GAAf,GAAqBS,GAArB;AAEA,MAAI4R,OAAO,GAAGhiB,OAAd;;AAEA,MAAIgb,GAAG,GAAG,UAAUqE,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAC/B,QAAIohB,EAAE,GAAG5C,IAAI,CAACrE,GAAL,EAAT;AACA,QAAIkH,EAAE,GAAG5C,IAAI,CAACtE,GAAL,EAAT;AACA,WAAO,IAAIgH,OAAJ,CAAYC,EAAE,GAAGphB,CAAC,IAAIqhB,EAAE,GAACD,EAAP,CAAlB,EAA8B,KAA9B,CAAP;AACH,GAJD,CAniEkB,CAyiElB;;;AACAjD,EAAAA,cAAc,CAAChE,GAAf,GAAqBA,GAArB;AAEA,MAAImH,iBAAiB,GAAGf,IAAxB;;AAEA,MAAIzZ,GAAG,GAAG,UAAU0X,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAClC,WAAOshB,iBAAiB,CAAC9C,IAAD,EAAOC,IAAP,EAAaze,CAAb,EAAgB,KAAhB,CAAxB;AACA,GAFD,CA9iEkB,CAkjElB;;;AACAme,EAAAA,cAAc,CAACrX,GAAf,GAAqBA,GAArB;AAEA,MAAIya,iBAAiB,GAAGhB,IAAxB;;AAEA,MAAI5W,GAAG,GAAG,UAAU6U,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAClC,WAAOuhB,iBAAiB,CAAC/C,IAAD,EAAOC,IAAP,EAAaze,CAAb,EAAgB,KAAhB,CAAxB;AACA,GAFD,CAvjEkB,CA2jElB;;;AACAme,EAAAA,cAAc,CAACxU,GAAf,GAAqBA,GAArB;AAEA,MAAI6X,iBAAiB,GAAGjB,IAAxB;;AAEA,MAAInc,GAAG,GAAG,UAAUoa,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAClC,WAAOwhB,iBAAiB,CAAChD,IAAD,EAAOC,IAAP,EAAaze,CAAb,EAAgB,KAAhB,CAAxB;AACA,GAFD,CAhkEkB,CAokElB;;;AACAme,EAAAA,cAAc,CAAC/Z,GAAf,GAAqBA,GAArB;AAEA,MAAIqd,eAAe,GAAGlB,IAAtB;;AAEA,MAAIrV,GAAG,GAAG,UAAUsT,IAAV,EAAgBC,IAAhB,EAAsBze,CAAtB,EAAyB;AAClC,WAAOyhB,eAAe,CAACjD,IAAD,EAAOC,IAAP,EAAaze,CAAb,EAAgB,KAAhB,CAAtB;AACA,GAFD,CAzkEkB,CA6kElB;;;AACAme,EAAAA,cAAc,CAACjT,GAAf,GAAqBA,GAArB;AAEA,MAAIwW,OAAO,GAAGviB,OAAd;AACA,MAAIwiB,UAAU,GAAG9kB,KAAK,CAACC,QAAvB;AACA,MAAI8kB,KAAK,GAAGjlB,IAAI,CAACiP,GAAjB;AACA,MAAIiW,MAAM,GAAGllB,IAAI,CAAC8L,IAAlB;AACA,MAAIqZ,IAAI,GAAGnlB,IAAI,CAACC,EAAhB;AACA,MAAImlB,KAAK,GAAGplB,IAAI,CAACsM,GAAjB;AACA,MAAI+Y,KAAK,GAAGrlB,IAAI,CAACsR,GAAjB;AACA,MAAIgU,OAAO,GAAGtlB,IAAI,CAAC2Q,KAAnB;;AAEA,MAAI4U,OAAO,GAAG,UAAUC,MAAV,EAAkB/jB,IAAlB,EAAwBgkB,OAAxB,EAAiC;AAC3C,QAAKhkB,IAAI,KAAK,KAAK,CAAnB,EAAuBA,IAAI,GAAC,MAAL;AACvB,QAAKgkB,OAAO,KAAK,KAAK,CAAtB,EAA0BA,OAAO,GAAC,IAAR;AAE1B,QAAI3lB,CAAC,GAAG0lB,MAAM,CAAC/mB,MAAf;;AACA,QAAI,CAACgnB,OAAL,EAAc;AAAEA,MAAAA,OAAO,GAAGnmB,KAAK,CAAComB,IAAN,CAAW,IAAIpmB,KAAJ,CAAUQ,CAAV,CAAX,EAAyBH,GAAzB,CAA6B,YAAY;AAAE,eAAO,CAAP;AAAW,OAAtD,CAAV;AAAoE,KALzC,CAM3C;;;AACA,QAAIF,CAAC,GAAGK,CAAC,GAAG2lB,OAAO,CAACE,MAAR,CAAe,UAAS/jB,CAAT,EAAYC,CAAZ,EAAe;AAAE,aAAOD,CAAC,GAAGC,CAAX;AAAe,KAA/C,CAAZ;AACA4jB,IAAAA,OAAO,CAAC5S,OAAR,CAAgB,UAAU+S,CAAV,EAAYvnB,CAAZ,EAAe;AAAEonB,MAAAA,OAAO,CAACpnB,CAAD,CAAP,IAAcoB,CAAd;AAAkB,KAAnD,EAR2C,CAS3C;;AACA+lB,IAAAA,MAAM,GAAGA,MAAM,CAAC7lB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,aAAO,IAAIyhB,OAAJ,CAAYzhB,CAAZ,CAAP;AAAwB,KAAlD,CAAT;;AACA,QAAI7B,IAAI,KAAK,MAAb,EAAqB;AACjB,aAAOokB,aAAa,CAACL,MAAD,EAASC,OAAT,CAApB;AACH;;AACD,QAAIK,KAAK,GAAGN,MAAM,CAACO,KAAP,EAAZ;AACA,QAAIC,GAAG,GAAGF,KAAK,CAAC3F,GAAN,CAAU1e,IAAV,CAAV;AACA,QAAIwkB,GAAG,GAAG,EAAV;AACA,QAAIC,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT,CAlB2C,CAmB3C;;AACA,SAAK,IAAI9nB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC2nB,GAAG,CAACvnB,MAApB,EAA4BJ,CAAC,EAA7B,EAAiC;AAC7B2nB,MAAAA,GAAG,CAAC3nB,CAAD,CAAH,GAAS,CAAC2nB,GAAG,CAAC3nB,CAAD,CAAH,IAAU,CAAX,IAAgBonB,OAAO,CAAC,CAAD,CAAhC;AACAQ,MAAAA,GAAG,CAAC5jB,IAAJ,CAASmK,KAAK,CAACwZ,GAAG,CAAC3nB,CAAD,CAAJ,CAAL,GAAgB,CAAhB,GAAoBonB,OAAO,CAAC,CAAD,CAApC;;AACA,UAAIhkB,IAAI,CAACkhB,MAAL,CAAYtkB,CAAZ,MAAmB,GAAnB,IAA0B,CAACmO,KAAK,CAACwZ,GAAG,CAAC3nB,CAAD,CAAJ,CAApC,EAA8C;AAC1C,YAAI+nB,CAAC,GAAGJ,GAAG,CAAC3nB,CAAD,CAAH,GAAS,GAAT,GAAe8mB,IAAvB;AACAe,QAAAA,EAAE,IAAId,KAAK,CAACgB,CAAD,CAAL,GAAWX,OAAO,CAAC,CAAD,CAAxB;AACAU,QAAAA,EAAE,IAAId,KAAK,CAACe,CAAD,CAAL,GAAWX,OAAO,CAAC,CAAD,CAAxB;AACH;AACJ;;AAED,QAAI7hB,KAAK,GAAGkiB,KAAK,CAACliB,KAAN,KAAgB6hB,OAAO,CAAC,CAAD,CAAnC;AACAD,IAAAA,MAAM,CAAC3S,OAAP,CAAe,UAAUvP,CAAV,EAAY+iB,EAAZ,EAAgB;AAC3B,UAAIC,IAAI,GAAGhjB,CAAC,CAAC6c,GAAF,CAAM1e,IAAN,CAAX;AACAmC,MAAAA,KAAK,IAAIN,CAAC,CAACM,KAAF,KAAY6hB,OAAO,CAACY,EAAE,GAAC,CAAJ,CAA5B;;AACA,WAAK,IAAIhoB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC2nB,GAAG,CAACvnB,MAApB,EAA4BJ,CAAC,EAA7B,EAAiC;AAC7B,YAAI,CAACmO,KAAK,CAAC8Z,IAAI,CAACjoB,CAAD,CAAL,CAAV,EAAqB;AACjB4nB,UAAAA,GAAG,CAAC5nB,CAAD,CAAH,IAAUonB,OAAO,CAACY,EAAE,GAAC,CAAJ,CAAjB;;AACA,cAAI5kB,IAAI,CAACkhB,MAAL,CAAYtkB,CAAZ,MAAmB,GAAvB,EAA4B;AACxB,gBAAI+nB,CAAC,GAAGE,IAAI,CAACjoB,CAAD,CAAJ,GAAU,GAAV,GAAgB8mB,IAAxB;AACAe,YAAAA,EAAE,IAAId,KAAK,CAACgB,CAAD,CAAL,GAAWX,OAAO,CAACY,EAAE,GAAC,CAAJ,CAAxB;AACAF,YAAAA,EAAE,IAAId,KAAK,CAACe,CAAD,CAAL,GAAWX,OAAO,CAACY,EAAE,GAAC,CAAJ,CAAxB;AACH,WAJD,MAIO;AACHL,YAAAA,GAAG,CAAC3nB,CAAD,CAAH,IAAUioB,IAAI,CAACjoB,CAAD,CAAJ,GAAUonB,OAAO,CAACY,EAAE,GAAC,CAAJ,CAA3B;AACH;AACJ;AACJ;AACJ,KAfD;;AAiBA,SAAK,IAAI9nB,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACynB,GAAG,CAACvnB,MAAxB,EAAgCF,GAAG,EAAnC,EAAuC;AACnC,UAAIkD,IAAI,CAACkhB,MAAL,CAAYpkB,GAAZ,MAAqB,GAAzB,EAA8B;AAC1B,YAAIgoB,GAAG,GAAGjB,OAAO,CAACa,EAAE,GAAGF,GAAG,CAAC1nB,GAAD,CAAT,EAAgB2nB,EAAE,GAAGD,GAAG,CAAC1nB,GAAD,CAAxB,CAAP,GAAwC4mB,IAAxC,GAA+C,GAAzD;;AACA,eAAOoB,GAAG,GAAG,CAAb,EAAgB;AAAEA,UAAAA,GAAG,IAAI,GAAP;AAAa;;AAC/B,eAAOA,GAAG,IAAI,GAAd,EAAmB;AAAEA,UAAAA,GAAG,IAAI,GAAP;AAAa;;AAClCP,QAAAA,GAAG,CAACznB,GAAD,CAAH,GAAWgoB,GAAX;AACH,OALD,MAKO;AACHP,QAAAA,GAAG,CAACznB,GAAD,CAAH,GAAWynB,GAAG,CAACznB,GAAD,CAAH,GAAS0nB,GAAG,CAAC1nB,GAAD,CAAvB;AACH;AACJ;;AACDqF,IAAAA,KAAK,IAAI9D,CAAT;AACA,WAAQ,IAAIilB,OAAJ,CAAYiB,GAAZ,EAAiBvkB,IAAjB,CAAD,CAAyBmC,KAAzB,CAA+BA,KAAK,GAAG,OAAR,GAAkB,CAAlB,GAAsBA,KAArD,EAA4D,IAA5D,CAAP;AACH,GA5DD;;AA+DA,MAAIiiB,aAAa,GAAG,UAAUL,MAAV,EAAkBC,OAAlB,EAA2B;AAC3C,QAAI3lB,CAAC,GAAG0lB,MAAM,CAAC/mB,MAAf;AACA,QAAIunB,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAV;;AACA,SAAK,IAAI3nB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGmnB,MAAM,CAAC/mB,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;AAClC,UAAImoB,GAAG,GAAGhB,MAAM,CAACnnB,CAAD,CAAhB;AACA,UAAIgF,CAAC,GAAGoiB,OAAO,CAACpnB,CAAD,CAAP,GAAayB,CAArB;AACA,UAAI7B,GAAG,GAAGuoB,GAAG,CAACrkB,IAAd;AACA6jB,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAUf,KAAK,CAAChnB,GAAG,CAAC,CAAD,CAAJ,EAAQ,CAAR,CAAL,GAAkBoF,CAA5B;AACA2iB,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAUf,KAAK,CAAChnB,GAAG,CAAC,CAAD,CAAJ,EAAQ,CAAR,CAAL,GAAkBoF,CAA5B;AACA2iB,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAUf,KAAK,CAAChnB,GAAG,CAAC,CAAD,CAAJ,EAAQ,CAAR,CAAL,GAAkBoF,CAA5B;AACA2iB,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAU/nB,GAAG,CAAC,CAAD,CAAH,GAASoF,CAAnB;AACH;;AACD2iB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASd,MAAM,CAACc,GAAG,CAAC,CAAD,CAAJ,CAAf;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASd,MAAM,CAACc,GAAG,CAAC,CAAD,CAAJ,CAAf;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASd,MAAM,CAACc,GAAG,CAAC,CAAD,CAAJ,CAAf;;AACA,QAAIA,GAAG,CAAC,CAAD,CAAH,GAAS,SAAb,EAAwB;AAAEA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAAa;;AACvC,WAAO,IAAIjB,OAAJ,CAAYC,UAAU,CAACgB,GAAD,CAAtB,CAAP;AACH,GAjBD,CAxpEkB,CA2qElB;AAEA;;;AAEA,MAAIS,QAAQ,GAAG3jB,QAAf;AACA,MAAI4jB,MAAM,GAAGxmB,KAAK,CAACG,IAAnB;AAEA,MAAIsmB,KAAK,GAAG3mB,IAAI,CAACiP,GAAjB;;AAEA,MAAI2X,OAAO,GAAG,UAASpB,MAAT,EAAiB;AAE3B;AACA,QAAIqB,KAAK,GAAG,KAAZ;;AACA,QAAIC,MAAM,GAAGL,QAAQ,CAAC,MAAD,CAArB;;AACA,QAAIM,OAAO,GAAG,CAAd,CAL2B,CAM3B;;AACA,QAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAd;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,CAAf;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,IAAI,GAAG,KAAX;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,iBAAiB,GAAG,KAAxB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,MAAM,GAAG,CAAb,CAlB2B,CAoB3B;;AAEA,QAAIC,SAAS,GAAG,UAASpC,MAAT,EAAiB;AAC7BA,MAAAA,MAAM,GAAGA,MAAM,IAAI,CAAC,MAAD,EAAS,MAAT,CAAnB;;AACA,UAAIA,MAAM,IAAIkB,MAAM,CAAClB,MAAD,CAAN,KAAmB,QAA7B,IAAyCiB,QAAQ,CAACoB,MAAlD,IACApB,QAAQ,CAACoB,MAAT,CAAgBrC,MAAM,CAAC7mB,WAAP,EAAhB,CADJ,EAC2C;AACvC6mB,QAAAA,MAAM,GAAGiB,QAAQ,CAACoB,MAAT,CAAgBrC,MAAM,CAAC7mB,WAAP,EAAhB,CAAT;AACH;;AACD,UAAI+nB,MAAM,CAAClB,MAAD,CAAN,KAAmB,OAAvB,EAAgC;AAC5B;AACA,YAAIA,MAAM,CAAC/mB,MAAP,KAAkB,CAAtB,EAAyB;AACrB+mB,UAAAA,MAAM,GAAG,CAACA,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAT;AACH,SAJ2B,CAK5B;;;AACAA,QAAAA,MAAM,GAAGA,MAAM,CAACpnB,KAAP,CAAa,CAAb,CAAT,CAN4B,CAO5B;;AACA,aAAK,IAAIkF,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACkiB,MAAM,CAAC/mB,MAAvB,EAA+B6E,CAAC,EAAhC,EAAoC;AAChCkiB,UAAAA,MAAM,CAACliB,CAAD,CAAN,GAAYmjB,QAAQ,CAACjB,MAAM,CAACliB,CAAD,CAAP,CAApB;AACH,SAV2B,CAW5B;;;AACA2jB,QAAAA,IAAI,CAACxoB,MAAL,GAAc,CAAd;;AACA,aAAK,IAAIqpB,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACtC,MAAM,CAAC/mB,MAA3B,EAAmCqpB,GAAG,EAAtC,EAA0C;AACtCb,UAAAA,IAAI,CAAC5kB,IAAL,CAAUylB,GAAG,IAAEtC,MAAM,CAAC/mB,MAAP,GAAc,CAAhB,CAAb;AACH;AACJ;;AACDspB,MAAAA,UAAU;AACV,aAAOX,OAAO,GAAG5B,MAAjB;AACH,KAzBD;;AA2BA,QAAIwC,QAAQ,GAAG,UAAStF,KAAT,EAAgB;AAC3B,UAAIyE,QAAQ,IAAI,IAAhB,EAAsB;AAClB,YAAIjK,CAAC,GAAGiK,QAAQ,CAAC1oB,MAAT,GAAgB,CAAxB;AACA,YAAIJ,CAAC,GAAG,CAAR;;AACA,eAAOA,CAAC,GAAG6e,CAAJ,IAASwF,KAAK,IAAIyE,QAAQ,CAAC9oB,CAAD,CAAjC,EAAsC;AAClCA,UAAAA,CAAC;AACJ;;AACD,eAAOA,CAAC,GAAC,CAAT;AACH;;AACD,aAAO,CAAP;AACH,KAVD;;AAYA,QAAI4pB,aAAa,GAAG,UAAUve,CAAV,EAAa;AAAE,aAAOA,CAAP;AAAW,KAA9C;;AACA,QAAIwe,UAAU,GAAG,UAAUxe,CAAV,EAAa;AAAE,aAAOA,CAAP;AAAW,KAA3C,CA9D2B,CAgE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAIye,QAAQ,GAAG,UAASC,GAAT,EAAcC,SAAd,EAAyB;AACpC,UAAI7B,GAAJ,EAAS9c,CAAT;;AACA,UAAI2e,SAAS,IAAI,IAAjB,EAAuB;AAAEA,QAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAC7C,UAAI7b,KAAK,CAAC4b,GAAD,CAAL,IAAeA,GAAG,KAAK,IAA3B,EAAkC;AAAE,eAAOtB,MAAP;AAAgB;;AACpD,UAAI,CAACuB,SAAL,EAAgB;AACZ,YAAIlB,QAAQ,IAAKA,QAAQ,CAAC1oB,MAAT,GAAkB,CAAnC,EAAuC;AACnC;AACA,cAAI6E,CAAC,GAAG0kB,QAAQ,CAACI,GAAD,CAAhB;AACA1e,UAAAA,CAAC,GAAGpG,CAAC,IAAI6jB,QAAQ,CAAC1oB,MAAT,GAAgB,CAApB,CAAL;AACH,SAJD,MAIO,IAAI8oB,IAAI,KAAKD,IAAb,EAAmB;AACtB;AACA5d,UAAAA,CAAC,GAAG,CAAC0e,GAAG,GAAGd,IAAP,KAAgBC,IAAI,GAAGD,IAAvB,CAAJ;AACH,SAHM,MAGA;AACH5d,UAAAA,CAAC,GAAG,CAAJ;AACH;AACJ,OAXD,MAWO;AACHA,QAAAA,CAAC,GAAG0e,GAAJ;AACH,OAjBmC,CAmBpC;;;AACA1e,MAAAA,CAAC,GAAGwe,UAAU,CAACxe,CAAD,CAAd;;AAEA,UAAI,CAAC2e,SAAL,EAAgB;AACZ3e,QAAAA,CAAC,GAAGue,aAAa,CAACve,CAAD,CAAjB,CADY,CACW;AAC1B;;AAED,UAAIie,MAAM,KAAK,CAAf,EAAkB;AAAEje,QAAAA,CAAC,GAAGid,KAAK,CAACjd,CAAD,EAAIie,MAAJ,CAAT;AAAuB;;AAE3Cje,MAAAA,CAAC,GAAGwd,QAAQ,CAAC,CAAD,CAAR,GAAexd,CAAC,IAAI,IAAIwd,QAAQ,CAAC,CAAD,CAAZ,GAAkBA,QAAQ,CAAC,CAAD,CAA9B,CAApB;AAEAxd,MAAAA,CAAC,GAAG1J,IAAI,CAACnC,GAAL,CAAS,CAAT,EAAYmC,IAAI,CAAClC,GAAL,CAAS,CAAT,EAAY4L,CAAZ,CAAZ,CAAJ;AAEA,UAAIjK,CAAC,GAAGO,IAAI,CAACiJ,KAAL,CAAWS,CAAC,GAAG,KAAf,CAAR;;AAEA,UAAIge,SAAS,IAAID,WAAW,CAAChoB,CAAD,CAA5B,EAAiC;AAC7B+mB,QAAAA,GAAG,GAAGiB,WAAW,CAAChoB,CAAD,CAAjB;AACH,OAFD,MAEO;AACH,YAAIinB,MAAM,CAACU,OAAD,CAAN,KAAoB,OAAxB,EAAiC;AAC7B;AACA,eAAK,IAAI/oB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC4oB,IAAI,CAACxoB,MAArB,EAA6BJ,CAAC,EAA9B,EAAkC;AAC9B,gBAAIyD,CAAC,GAAGmlB,IAAI,CAAC5oB,CAAD,CAAZ;;AACA,gBAAIqL,CAAC,IAAI5H,CAAT,EAAY;AACR0kB,cAAAA,GAAG,GAAGY,OAAO,CAAC/oB,CAAD,CAAb;AACA;AACH;;AACD,gBAAKqL,CAAC,IAAI5H,CAAN,IAAazD,CAAC,KAAM4oB,IAAI,CAACxoB,MAAL,GAAY,CAApC,EAAyC;AACrC+nB,cAAAA,GAAG,GAAGY,OAAO,CAAC/oB,CAAD,CAAb;AACA;AACH;;AACD,gBAAIqL,CAAC,GAAG5H,CAAJ,IAAS4H,CAAC,GAAGud,IAAI,CAAC5oB,CAAC,GAAC,CAAH,CAArB,EAA4B;AACxBqL,cAAAA,CAAC,GAAG,CAACA,CAAC,GAAC5H,CAAH,KAAOmlB,IAAI,CAAC5oB,CAAC,GAAC,CAAH,CAAJ,GAAUyD,CAAjB,CAAJ;AACA0kB,cAAAA,GAAG,GAAGC,QAAQ,CAACtF,WAAT,CAAqBiG,OAAO,CAAC/oB,CAAD,CAA5B,EAAiC+oB,OAAO,CAAC/oB,CAAC,GAAC,CAAH,CAAxC,EAA+CqL,CAA/C,EAAkDmd,KAAlD,CAAN;AACA;AACH;AACJ;AACJ,SAlBD,MAkBO,IAAIH,MAAM,CAACU,OAAD,CAAN,KAAoB,UAAxB,EAAoC;AACvCZ,UAAAA,GAAG,GAAGY,OAAO,CAAC1d,CAAD,CAAb;AACH;;AACD,YAAIge,SAAJ,EAAe;AAAED,UAAAA,WAAW,CAAChoB,CAAD,CAAX,GAAiB+mB,GAAjB;AAAuB;AAC3C;;AACD,aAAOA,GAAP;AACH,KA7DD;;AA+DA,QAAIuB,UAAU,GAAG,YAAY;AAAE,aAAON,WAAW,GAAG,EAArB;AAA0B,KAAzD;;AAEAG,IAAAA,SAAS,CAACpC,MAAD,CAAT,CA7I2B,CA+I3B;;AAEA,QAAIniB,CAAC,GAAG,UAASsG,CAAT,EAAY;AAChB,UAAIrG,CAAC,GAAGmjB,QAAQ,CAAC0B,QAAQ,CAACxe,CAAD,CAAT,CAAhB;;AACA,UAAI0d,IAAI,IAAI/jB,CAAC,CAAC+jB,IAAD,CAAb,EAAqB;AAAE,eAAO/jB,CAAC,CAAC+jB,IAAD,CAAD,EAAP;AAAmB,OAA1C,MAAgD;AAAE,eAAO/jB,CAAP;AAAW;AAChE,KAHD;;AAKAD,IAAAA,CAAC,CAACilB,OAAF,GAAY,UAASA,OAAT,EAAkB;AAC1B,UAAIA,OAAO,IAAI,IAAf,EAAqB;AACjB,YAAI5B,MAAM,CAAC4B,OAAD,CAAN,KAAoB,OAAxB,EAAiC;AAC7BnB,UAAAA,QAAQ,GAAGmB,OAAX;AACAtB,UAAAA,OAAO,GAAG,CAACsB,OAAO,CAAC,CAAD,CAAR,EAAaA,OAAO,CAACA,OAAO,CAAC7pB,MAAR,GAAe,CAAhB,CAApB,CAAV;AACH,SAHD,MAGO;AACH,cAAI8pB,CAAC,GAAG9B,QAAQ,CAAC+B,OAAT,CAAiBxB,OAAjB,CAAR;;AACA,cAAIsB,OAAO,KAAK,CAAhB,EAAmB;AACfnB,YAAAA,QAAQ,GAAG,CAACoB,CAAC,CAAC1qB,GAAH,EAAQ0qB,CAAC,CAACzqB,GAAV,CAAX;AACH,WAFD,MAEO;AACHqpB,YAAAA,QAAQ,GAAGV,QAAQ,CAACgC,MAAT,CAAgBF,CAAhB,EAAmB,GAAnB,EAAwBD,OAAxB,CAAX;AACH;AACJ;;AACD,eAAOjlB,CAAP;AACH;;AACD,aAAO8jB,QAAP;AACH,KAhBD;;AAmBA9jB,IAAAA,CAAC,CAACqlB,MAAF,GAAW,UAASA,MAAT,EAAiB;AACxB,UAAI,CAACpnB,SAAS,CAAC7C,MAAf,EAAuB;AACnB,eAAOuoB,OAAP;AACH;;AACDM,MAAAA,IAAI,GAAGoB,MAAM,CAAC,CAAD,CAAb;AACAnB,MAAAA,IAAI,GAAGmB,MAAM,CAACA,MAAM,CAACjqB,MAAP,GAAc,CAAf,CAAb;AACAwoB,MAAAA,IAAI,GAAG,EAAP;AACA,UAAIxnB,CAAC,GAAG2nB,OAAO,CAAC3oB,MAAhB;;AACA,UAAKiqB,MAAM,CAACjqB,MAAP,KAAkBgB,CAAnB,IAA0B6nB,IAAI,KAAKC,IAAvC,EAA8C;AAC1C;AACA,aAAK,IAAIlpB,CAAC,GAAG,CAAR,EAAW0D,IAAI,GAAGzC,KAAK,CAAComB,IAAN,CAAWgD,MAAX,CAAvB,EAA2CrqB,CAAC,GAAG0D,IAAI,CAACtD,MAApD,EAA4DJ,CAAC,IAAI,CAAjE,EAAoE;AAChE,cAAIkqB,CAAC,GAAGxmB,IAAI,CAAC1D,CAAD,CAAZ;;AAEF4oB,UAAAA,IAAI,CAAC5kB,IAAL,CAAU,CAACkmB,CAAC,GAACjB,IAAH,KAAYC,IAAI,GAACD,IAAjB,CAAV;AACD;AACJ,OAPD,MAOO;AACH,aAAK,IAAIhkB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC7D,CAAhB,EAAmB6D,CAAC,EAApB,EAAwB;AACpB2jB,UAAAA,IAAI,CAAC5kB,IAAL,CAAUiB,CAAC,IAAE7D,CAAC,GAAC,CAAJ,CAAX;AACH;;AACD,YAAIipB,MAAM,CAACjqB,MAAP,GAAgB,CAApB,EAAuB;AACnB;AACA,cAAIkqB,IAAI,GAAGD,MAAM,CAAC/oB,GAAP,CAAW,UAAU4oB,CAAV,EAAYlqB,CAAZ,EAAe;AAAE,mBAAOA,CAAC,IAAEqqB,MAAM,CAACjqB,MAAP,GAAc,CAAhB,CAAR;AAA6B,WAAzD,CAAX;AACA,cAAImqB,OAAO,GAAGF,MAAM,CAAC/oB,GAAP,CAAW,UAAU4oB,CAAV,EAAa;AAAE,mBAAO,CAACA,CAAC,GAAGjB,IAAL,KAAcC,IAAI,GAAGD,IAArB,CAAP;AAAoC,WAA9D,CAAd;;AACA,cAAI,CAACsB,OAAO,CAACC,KAAR,CAAc,UAAUT,GAAV,EAAe/pB,CAAf,EAAkB;AAAE,mBAAOsqB,IAAI,CAACtqB,CAAD,CAAJ,KAAY+pB,GAAnB;AAAyB,WAA3D,CAAL,EAAmE;AAC/DF,YAAAA,UAAU,GAAG,UAAUxe,CAAV,EAAa;AACtB,kBAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAnB,EAAsB;AAAE,uBAAOA,CAAP;AAAW;;AACnC,kBAAIrL,CAAC,GAAG,CAAR;;AACA,qBAAOqL,CAAC,IAAIkf,OAAO,CAACvqB,CAAC,GAAC,CAAH,CAAnB,EAA0B;AAAEA,gBAAAA,CAAC;AAAK;;AAClC,kBAAIgF,CAAC,GAAG,CAACqG,CAAC,GAAGkf,OAAO,CAACvqB,CAAD,CAAZ,KAAoBuqB,OAAO,CAACvqB,CAAC,GAAC,CAAH,CAAP,GAAeuqB,OAAO,CAACvqB,CAAD,CAA1C,CAAR;AACA,kBAAIukB,GAAG,GAAG+F,IAAI,CAACtqB,CAAD,CAAJ,GAAUgF,CAAC,IAAIslB,IAAI,CAACtqB,CAAC,GAAC,CAAH,CAAJ,GAAYsqB,IAAI,CAACtqB,CAAD,CAApB,CAArB;AACA,qBAAOukB,GAAP;AACH,aAPD;AAQH;AAEJ;AACJ;;AACDoE,MAAAA,OAAO,GAAG,CAACM,IAAD,EAAOC,IAAP,CAAV;AACA,aAAOlkB,CAAP;AACH,KAtCD;;AAwCAA,IAAAA,CAAC,CAAC5B,IAAF,GAAS,UAASqnB,EAAT,EAAa;AAClB,UAAI,CAACxnB,SAAS,CAAC7C,MAAf,EAAuB;AACnB,eAAOooB,KAAP;AACH;;AACDA,MAAAA,KAAK,GAAGiC,EAAR;AACAf,MAAAA,UAAU;AACV,aAAO1kB,CAAP;AACH,KAPD;;AASAA,IAAAA,CAAC,CAAC0lB,KAAF,GAAU,UAASvD,MAAT,EAAiByB,IAAjB,EAAuB;AAC7BW,MAAAA,SAAS,CAACpC,MAAD,CAAT;AACA,aAAOniB,CAAP;AACH,KAHD;;AAKAA,IAAAA,CAAC,CAACuf,GAAF,GAAQ,UAASoG,EAAT,EAAa;AACjB3B,MAAAA,IAAI,GAAG2B,EAAP;AACA,aAAO3lB,CAAP;AACH,KAHD;;AAKAA,IAAAA,CAAC,CAAC4lB,MAAF,GAAW,UAASb,GAAT,EAAc;AACrB,UAAI,CAAC9mB,SAAS,CAAC7C,MAAf,EAAuB;AACnB,eAAOsoB,OAAP;AACH;;AACDA,MAAAA,OAAO,GAAGqB,GAAV;AACA,aAAO/kB,CAAP;AACH,KAND;;AAQAA,IAAAA,CAAC,CAAC6lB,gBAAF,GAAqB,UAASvf,CAAT,EAAY;AAC7B,UAAIA,CAAC,IAAI,IAAT,EAAe;AAAEA,QAAAA,CAAC,GAAG,IAAJ;AAAW;;AAC5B6d,MAAAA,iBAAiB,GAAG7d,CAApB;AACAoe,MAAAA,UAAU;;AACV,UAAIP,iBAAJ,EAAuB;AACnBS,QAAAA,aAAa,GAAG,UAASve,CAAT,EAAY;AACxB,cAAIyf,EAAE,GAAGhB,QAAQ,CAAC,CAAD,EAAI,IAAJ,CAAR,CAAkB5X,GAAlB,GAAwB,CAAxB,CAAT;AACA,cAAI6Y,EAAE,GAAGjB,QAAQ,CAAC,CAAD,EAAI,IAAJ,CAAR,CAAkB5X,GAAlB,GAAwB,CAAxB,CAAT;AACA,cAAI8Y,GAAG,GAAGF,EAAE,GAAGC,EAAf;AACA,cAAIE,QAAQ,GAAGnB,QAAQ,CAACze,CAAD,EAAI,IAAJ,CAAR,CAAkB6G,GAAlB,GAAwB,CAAxB,CAAf;AACA,cAAIgZ,OAAO,GAAGJ,EAAE,GAAI,CAACC,EAAE,GAAGD,EAAN,IAAYzf,CAAhC;AACA,cAAI8f,MAAM,GAAGF,QAAQ,GAAGC,OAAxB;AACA,cAAI1a,EAAE,GAAG,CAAT;AACA,cAAI3I,EAAE,GAAG,CAAT;AACA,cAAI6a,QAAQ,GAAG,EAAf;;AACA,iBAAQ/gB,IAAI,CAACqhB,GAAL,CAASmI,MAAT,IAAmB,IAApB,IAA8BzI,QAAQ,KAAK,CAAlD,EAAsD;AAClD,aAAC,YAAW;AACR,kBAAIsI,GAAJ,EAAS;AAAEG,gBAAAA,MAAM,IAAI,CAAC,CAAX;AAAe;;AAC1B,kBAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ3a,gBAAAA,EAAE,GAAGnF,CAAL;AACAA,gBAAAA,CAAC,IAAI,CAACxD,EAAE,GAAGwD,CAAN,IAAW,GAAhB;AACH,eAHD,MAGO;AACHxD,gBAAAA,EAAE,GAAGwD,CAAL;AACAA,gBAAAA,CAAC,IAAI,CAACmF,EAAE,GAAGnF,CAAN,IAAW,GAAhB;AACH;;AACD4f,cAAAA,QAAQ,GAAGnB,QAAQ,CAACze,CAAD,EAAI,IAAJ,CAAR,CAAkB6G,GAAlB,GAAwB,CAAxB,CAAX;AACA,qBAAOiZ,MAAM,GAAGF,QAAQ,GAAGC,OAA3B;AACH,aAXD;AAYH;;AACD,iBAAO7f,CAAP;AACH,SAzBD;AA0BH,OA3BD,MA2BO;AACHue,QAAAA,aAAa,GAAG,UAAUve,CAAV,EAAa;AAAE,iBAAOA,CAAP;AAAW,SAA1C;AACH;;AACD,aAAOrG,CAAP;AACH,KAnCD;;AAqCAA,IAAAA,CAAC,CAAComB,OAAF,GAAY,UAAS3nB,CAAT,EAAY;AACpB,UAAIA,CAAC,IAAI,IAAT,EAAe;AACX,YAAI4kB,MAAM,CAAC5kB,CAAD,CAAN,KAAc,QAAlB,EAA4B;AACxBA,UAAAA,CAAC,GAAG,CAACA,CAAD,EAAGA,CAAH,CAAJ;AACH;;AACDolB,QAAAA,QAAQ,GAAGplB,CAAX;AACA,eAAOuB,CAAP;AACH,OAND,MAMO;AACH,eAAO6jB,QAAP;AACH;AACJ,KAVD;;AAYA7jB,IAAAA,CAAC,CAACmiB,MAAF,GAAW,UAASkE,SAAT,EAAoB9G,GAApB,EAAyB;AAChC;AACA,UAAIthB,SAAS,CAAC7C,MAAV,GAAmB,CAAvB,EAA0B;AAAEmkB,QAAAA,GAAG,GAAG,KAAN;AAAc;;AAC1C,UAAI+G,MAAM,GAAG,EAAb;;AAEA,UAAIroB,SAAS,CAAC7C,MAAV,KAAqB,CAAzB,EAA4B;AACxBkrB,QAAAA,MAAM,GAAGvC,OAAO,CAAChpB,KAAR,CAAc,CAAd,CAAT;AAEH,OAHD,MAGO,IAAIsrB,SAAS,KAAK,CAAlB,EAAqB;AACxBC,QAAAA,MAAM,GAAG,CAACtmB,CAAC,CAAC,GAAD,CAAF,CAAT;AAEH,OAHM,MAGA,IAAIqmB,SAAS,GAAG,CAAhB,EAAmB;AACtB,YAAIE,EAAE,GAAG5C,OAAO,CAAC,CAAD,CAAhB;AACA,YAAI6C,EAAE,GAAG7C,OAAO,CAAC,CAAD,CAAP,GAAa4C,EAAtB;AACAD,QAAAA,MAAM,GAAGG,SAAS,CAAC,CAAD,EAAIJ,SAAJ,EAAe,KAAf,CAAT,CAA+B/pB,GAA/B,CAAmC,UAAUtB,CAAV,EAAa;AAAE,iBAAOgF,CAAC,CAAEumB,EAAE,GAAKvrB,CAAC,IAAEqrB,SAAS,GAAC,CAAZ,CAAF,GAAoBG,EAA5B,CAAR;AAA4C,SAA9F,CAAT;AAEH,OALM,MAKA;AAAE;AACLrE,QAAAA,MAAM,GAAG,EAAT;AACA,YAAIuE,OAAO,GAAG,EAAd;;AACA,YAAI5C,QAAQ,IAAKA,QAAQ,CAAC1oB,MAAT,GAAkB,CAAnC,EAAuC;AACnC,eAAK,IAAIJ,CAAC,GAAG,CAAR,EAAW2rB,GAAG,GAAG7C,QAAQ,CAAC1oB,MAA1B,EAAkCwrB,GAAG,GAAG,KAAKD,GAAlD,EAAuDC,GAAG,GAAG5rB,CAAC,GAAG2rB,GAAP,GAAa3rB,CAAC,GAAG2rB,GAA3E,EAAgFC,GAAG,GAAG5rB,CAAC,EAAJ,GAASA,CAAC,EAA7F,EAAiG;AAC7F0rB,YAAAA,OAAO,CAAC1nB,IAAR,CAAa,CAAC8kB,QAAQ,CAAC9oB,CAAC,GAAC,CAAH,CAAR,GAAc8oB,QAAQ,CAAC9oB,CAAD,CAAvB,IAA4B,GAAzC;AACH;AACJ,SAJD,MAIO;AACH0rB,UAAAA,OAAO,GAAG/C,OAAV;AACH;;AACD2C,QAAAA,MAAM,GAAGI,OAAO,CAACpqB,GAAR,CAAY,UAAUgK,CAAV,EAAa;AAAE,iBAAOtG,CAAC,CAACsG,CAAD,CAAR;AAAc,SAAzC,CAAT;AACH;;AAED,UAAI8c,QAAQ,CAAC7D,GAAD,CAAZ,EAAmB;AACf+G,QAAAA,MAAM,GAAGA,MAAM,CAAChqB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAACsf,GAAD,CAAD,EAAP;AAAkB,SAA5C,CAAT;AACH;;AACD,aAAO+G,MAAP;AACH,KAjCD;;AAmCAtmB,IAAAA,CAAC,CAAC6mB,KAAF,GAAU,UAAS5mB,CAAT,EAAY;AAClB,UAAIA,CAAC,IAAI,IAAT,EAAe;AACXokB,QAAAA,SAAS,GAAGpkB,CAAZ;AACA,eAAOD,CAAP;AACH,OAHD,MAGO;AACH,eAAOqkB,SAAP;AACH;AACJ,KAPD;;AASArkB,IAAAA,CAAC,CAAC8mB,KAAF,GAAU,UAAS/mB,CAAT,EAAY;AAClB,UAAIA,CAAC,IAAI,IAAT,EAAe;AACXukB,QAAAA,MAAM,GAAGvkB,CAAT;AACA,eAAOC,CAAP;AACH,OAHD,MAGO;AACH,eAAOskB,MAAP;AACH;AACJ,KAPD;;AASAtkB,IAAAA,CAAC,CAAC+mB,MAAF,GAAW,UAAS7B,CAAT,EAAY;AACnB,UAAIA,CAAC,IAAI,IAAT,EAAe;AACXzB,QAAAA,MAAM,GAAGL,QAAQ,CAAC8B,CAAD,CAAjB;AACA,eAAOllB,CAAP;AACH,OAHD,MAGO;AACH,eAAOyjB,MAAP;AACH;AACJ,KAPD;;AASA,WAAOzjB,CAAP;AACH,GA5VD;;AA8VA,WAASymB,SAAT,CAAmBO,IAAnB,EAAyBC,KAAzB,EAAgCC,SAAhC,EAA2C;AACzC,QAAIxB,KAAK,GAAG,EAAZ;AACA,QAAIyB,SAAS,GAAGH,IAAI,GAAGC,KAAvB;AACA,QAAIN,GAAG,GAAG,CAACO,SAAD,GAAaD,KAAb,GAAqBE,SAAS,GAAGF,KAAK,GAAG,CAAX,GAAeA,KAAK,GAAG,CAA/D;;AACA,SAAK,IAAIjsB,CAAC,GAAGgsB,IAAb,EAAmBG,SAAS,GAAGnsB,CAAC,GAAG2rB,GAAP,GAAa3rB,CAAC,GAAG2rB,GAA7C,EAAkDQ,SAAS,GAAGnsB,CAAC,EAAJ,GAASA,CAAC,EAArE,EAAyE;AACvE0qB,MAAAA,KAAK,CAAC1mB,IAAN,CAAWhE,CAAX;AACD;;AACD,WAAO0qB,KAAP;AACD,GA1hFiB,CA4hFlB;AACA;AACA;AAEA;;;AACA,MAAI0B,OAAO,GAAGjoB,OAAd;AAEA,MAAIkoB,OAAO,GAAG9D,OAAd,CAniFkB,CAqiFlB;;AACA,MAAI+D,SAAS,GAAG,UAASzN,CAAT,EAAY;AACxB,QAAI0N,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAV;;AACA,SAAK,IAAIvsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6e,CAApB,EAAuB7e,CAAC,EAAxB,EAA4B;AACxB,UAAIwsB,MAAM,GAAG,CAAC,CAAD,CAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAAG,CAACnsB,MAAzB,EAAiCqsB,CAAC,EAAlC,EAAsC;AAClCD,QAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,CAACF,GAAG,CAACE,CAAD,CAAH,IAAU,CAAX,IAAgBF,GAAG,CAACE,CAAC,GAAG,CAAL,CAA/B;AACH;;AACDF,MAAAA,GAAG,GAAGC,MAAN;AACH;;AACD,WAAOD,GAAP;AACH,GAVD;;AAYA,MAAIG,MAAM,GAAG,UAASvF,MAAT,EAAiB;AAC1B,QAAIzf,MAAJ,EAAYoD,QAAZ,EAAsBC,QAAtB;AAEA,QAAI4hB,CAAJ,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB;AACA3F,IAAAA,MAAM,GAAGA,MAAM,CAAC7lB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,aAAO,IAAImnB,OAAJ,CAAYnnB,CAAZ,CAAP;AAAwB,KAAlD,CAAT;;AACA,QAAIkiB,MAAM,CAAC/mB,MAAP,KAAkB,CAAtB,EAAyB;AACrB;AACCsH,MAAAA,MAAM,GAAGyf,MAAM,CAAC7lB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACiN,GAAF,EAAP;AAAiB,OAA3C,CAAT,EAAuD0a,IAAI,GAAGllB,MAAM,CAAC,CAAD,CAApE,EAAyEmlB,IAAI,GAAGnlB,MAAM,CAAC,CAAD,CAAvF;;AACAilB,MAAAA,CAAC,GAAG,UAASthB,CAAT,EAAY;AACZ,YAAI6G,GAAG,GAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU5Q,GAAV,CAAc,UAAUtB,CAAV,EAAa;AAAE,iBAAO4sB,IAAI,CAAC5sB,CAAD,CAAJ,GAAWqL,CAAC,IAAIwhB,IAAI,CAAC7sB,CAAD,CAAJ,GAAU4sB,IAAI,CAAC5sB,CAAD,CAAlB,CAAnB;AAA6C,SAA1E,CAAX;AACA,eAAO,IAAIosB,OAAJ,CAAYla,GAAZ,EAAiB,KAAjB,CAAP;AACH,OAHD;AAIH,KAPD,MAOO,IAAIiV,MAAM,CAAC/mB,MAAP,KAAkB,CAAtB,EAAyB;AAC5B;AACC0K,MAAAA,QAAQ,GAAGqc,MAAM,CAAC7lB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACiN,GAAF,EAAP;AAAiB,OAA3C,CAAX,EAAyD0a,IAAI,GAAG9hB,QAAQ,CAAC,CAAD,CAAxE,EAA6E+hB,IAAI,GAAG/hB,QAAQ,CAAC,CAAD,CAA5F,EAAiGgiB,IAAI,GAAGhiB,QAAQ,CAAC,CAAD,CAAjH;;AACA6hB,MAAAA,CAAC,GAAG,UAASthB,CAAT,EAAY;AACZ,YAAI6G,GAAG,GAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU5Q,GAAV,CAAc,UAAUtB,CAAV,EAAa;AAAE,iBAAQ,CAAC,IAAEqL,CAAH,KAAO,IAAEA,CAAT,IAAcuhB,IAAI,CAAC5sB,CAAD,CAAnB,GAA2B,KAAK,IAAEqL,CAAP,IAAYA,CAAZ,GAAgBwhB,IAAI,CAAC7sB,CAAD,CAA/C,GAAuDqL,CAAC,GAAGA,CAAJ,GAAQyhB,IAAI,CAAC9sB,CAAD,CAA1E;AAAiF,SAA9G,CAAX;AACA,eAAO,IAAIosB,OAAJ,CAAYla,GAAZ,EAAiB,KAAjB,CAAP;AACH,OAHD;AAIH,KAPM,MAOA,IAAIiV,MAAM,CAAC/mB,MAAP,KAAkB,CAAtB,EAAyB;AAC5B;AACA,UAAI2sB,IAAJ;AACChiB,MAAAA,QAAQ,GAAGoc,MAAM,CAAC7lB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACiN,GAAF,EAAP;AAAiB,OAA3C,CAAX,EAAyD0a,IAAI,GAAG7hB,QAAQ,CAAC,CAAD,CAAxE,EAA6E8hB,IAAI,GAAG9hB,QAAQ,CAAC,CAAD,CAA5F,EAAiG+hB,IAAI,GAAG/hB,QAAQ,CAAC,CAAD,CAAhH,EAAqHgiB,IAAI,GAAGhiB,QAAQ,CAAC,CAAD,CAArI;;AACA4hB,MAAAA,CAAC,GAAG,UAASthB,CAAT,EAAY;AACZ,YAAI6G,GAAG,GAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU5Q,GAAV,CAAc,UAAUtB,CAAV,EAAa;AAAE,iBAAQ,CAAC,IAAEqL,CAAH,KAAO,IAAEA,CAAT,KAAa,IAAEA,CAAf,IAAoBuhB,IAAI,CAAC5sB,CAAD,CAAzB,GAAiC,KAAK,IAAEqL,CAAP,KAAa,IAAEA,CAAf,IAAoBA,CAApB,GAAwBwhB,IAAI,CAAC7sB,CAAD,CAA7D,GAAqE,KAAK,IAAEqL,CAAP,IAAYA,CAAZ,GAAgBA,CAAhB,GAAoByhB,IAAI,CAAC9sB,CAAD,CAA7F,GAAqGqL,CAAC,GAACA,CAAF,GAAIA,CAAJ,GAAQ0hB,IAAI,CAAC/sB,CAAD,CAAxH;AAA+H,SAA5J,CAAX;AACA,eAAO,IAAIosB,OAAJ,CAAYla,GAAZ,EAAiB,KAAjB,CAAP;AACH,OAHD;AAIH,KARM,MAQA,IAAIiV,MAAM,CAAC/mB,MAAP,IAAiB,CAArB,EAAwB;AAC3B;AACA,UAAI4sB,IAAJ,EAAUT,GAAV,EAAe1N,CAAf;AACAmO,MAAAA,IAAI,GAAG7F,MAAM,CAAC7lB,GAAP,CAAW,UAAU2D,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACiN,GAAF,EAAP;AAAiB,OAA3C,CAAP;AACA2M,MAAAA,CAAC,GAAGsI,MAAM,CAAC/mB,MAAP,GAAgB,CAApB;AACAmsB,MAAAA,GAAG,GAAGD,SAAS,CAACzN,CAAD,CAAf;;AACA8N,MAAAA,CAAC,GAAG,UAAUthB,CAAV,EAAa;AACb,YAAIa,CAAC,GAAG,IAAIb,CAAZ;AACA,YAAI6G,GAAG,GAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU5Q,GAAV,CAAc,UAAUtB,CAAV,EAAa;AAAE,iBAAOgtB,IAAI,CAAC1F,MAAL,CAAY,UAAU2F,GAAV,EAAeC,EAAf,EAAmBT,CAAnB,EAAsB;AAAE,mBAAQQ,GAAG,GAAGV,GAAG,CAACE,CAAD,CAAH,GAAS9qB,IAAI,CAACiP,GAAL,CAAU1E,CAAV,EAAc2S,CAAC,GAAG4N,CAAlB,CAAT,GAAkC9qB,IAAI,CAACiP,GAAL,CAAUvF,CAAV,EAAaohB,CAAb,CAAlC,GAAqDS,EAAE,CAACltB,CAAD,CAArE;AAA4E,WAAhH,EAAkH,CAAlH,CAAP;AAA8H,SAA3J,CAAX;AACA,eAAO,IAAIosB,OAAJ,CAAYla,GAAZ,EAAiB,KAAjB,CAAP;AACH,OAJD;AAKH,KAXM,MAWA;AACH,YAAM,IAAIib,UAAJ,CAAe,iDAAf,CAAN;AACH;;AACD,WAAOR,CAAP;AACH,GA1CD;;AA4CA,MAAIS,QAAQ,GAAG,UAAUjG,MAAV,EAAkB;AAC7B,QAAIniB,CAAC,GAAG0nB,MAAM,CAACvF,MAAD,CAAd;;AACAniB,IAAAA,CAAC,CAACqoB,KAAF,GAAU,YAAY;AAAE,aAAOhB,OAAO,CAACrnB,CAAD,CAAd;AAAoB,KAA5C;;AACA,WAAOA,CAAP;AACH,GAJD;AAMA;AACJ;AACA;AACA;;;AAEI,MAAIsoB,QAAQ,GAAG7oB,QAAf;;AAEA,MAAI8oB,KAAK,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBrqB,IAAvB,EAA6B;AACrC,QAAI,CAACmqB,KAAK,CAACnqB,IAAD,CAAV,EAAkB;AACd,YAAM,IAAIW,KAAJ,CAAU,wBAAwBX,IAAlC,CAAN;AACH;;AACD,WAAOmqB,KAAK,CAACnqB,IAAD,CAAL,CAAYoqB,MAAZ,EAAoBC,GAApB,CAAP;AACH,GALD;;AAOA,MAAIC,OAAO,GAAG,UAAU1oB,CAAV,EAAa;AAAE,WAAO,UAAUwoB,MAAV,EAAiBC,GAAjB,EAAsB;AAClD,UAAIE,EAAE,GAAGL,QAAQ,CAACG,GAAD,CAAR,CAAc7tB,GAAd,EAAT;AACA,UAAIwmB,EAAE,GAAGkH,QAAQ,CAACE,MAAD,CAAR,CAAiB5tB,GAAjB,EAAT;AACA,aAAO0tB,QAAQ,CAAC1tB,GAAT,CAAaoF,CAAC,CAAC2oB,EAAD,EAAKvH,EAAL,CAAd,CAAP;AACH,KAJwB;AAIrB,GAJR;;AAMA,MAAIwH,IAAI,GAAG,UAAU5oB,CAAV,EAAa;AAAE,WAAO,UAAU2oB,EAAV,EAAcvH,EAAd,EAAkB;AAC3C,UAAI7B,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASvf,CAAC,CAAC2oB,EAAE,CAAC,CAAD,CAAH,EAAQvH,EAAE,CAAC,CAAD,CAAV,CAAV;AACA7B,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASvf,CAAC,CAAC2oB,EAAE,CAAC,CAAD,CAAH,EAAQvH,EAAE,CAAC,CAAD,CAAV,CAAV;AACA7B,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASvf,CAAC,CAAC2oB,EAAE,CAAC,CAAD,CAAH,EAAQvH,EAAE,CAAC,CAAD,CAAV,CAAV;AACA,aAAO7B,GAAP;AACH,KANqB;AAMlB,GANR;;AAQA,MAAIsJ,MAAM,GAAG,UAAUtqB,CAAV,EAAa;AAAE,WAAOA,CAAP;AAAW,GAAvC;;AACA,MAAIuqB,QAAQ,GAAG,UAAUvqB,CAAV,EAAYC,CAAZ,EAAe;AAAE,WAAOD,CAAC,GAAGC,CAAJ,GAAQ,GAAf;AAAqB,GAArD;;AACA,MAAIge,MAAM,GAAG,UAAUje,CAAV,EAAYC,CAAZ,EAAe;AAAE,WAAOD,CAAC,GAAGC,CAAJ,GAAQA,CAAR,GAAYD,CAAnB;AAAuB,GAArD;;AACA,MAAIwqB,OAAO,GAAG,UAAUxqB,CAAV,EAAYC,CAAZ,EAAe;AAAE,WAAOD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAAnB;AAAuB,GAAtD;;AACA,MAAIwqB,MAAM,GAAG,UAAUzqB,CAAV,EAAYC,CAAZ,EAAe;AAAE,WAAO,OAAO,IAAI,CAAC,IAAED,CAAC,GAAC,GAAL,KAAa,IAAEC,CAAC,GAAC,GAAjB,CAAX,CAAP;AAA2C,GAAzE;;AACA,MAAIyqB,OAAO,GAAG,UAAU1qB,CAAV,EAAYC,CAAZ,EAAe;AAAE,WAAOA,CAAC,GAAG,GAAJ,GAAU,IAAID,CAAJ,GAAQC,CAAR,GAAY,GAAtB,GAA4B,OAAO,IAAI,KAAK,IAAID,CAAC,GAAG,GAAb,KAAuB,IAAIC,CAAC,GAAG,GAA/B,CAAX,CAAnC;AAAsF,GAArH;;AACA,MAAI0qB,IAAI,GAAG,UAAU3qB,CAAV,EAAYC,CAAZ,EAAe;AAAE,WAAO,OAAO,IAAI,CAAC,IAAIA,CAAC,GAAG,GAAT,KAAiBD,CAAC,GAAC,GAAnB,CAAX,CAAP;AAA6C,GAAzE;;AACA,MAAI4qB,KAAK,GAAG,UAAU5qB,CAAV,EAAYC,CAAZ,EAAe;AACvB,QAAID,CAAC,KAAK,GAAV,EAAe;AAAE,aAAO,GAAP;AAAa;;AAC9BA,IAAAA,CAAC,GAAG,OAAOC,CAAC,GAAG,GAAX,KAAmB,IAAID,CAAC,GAAG,GAA3B,CAAJ;AACA,WAAOA,CAAC,GAAG,GAAJ,GAAU,GAAV,GAAgBA,CAAvB;AACH,GAJD,CAvoFkB,CA6oFlB;AACA;;;AAEAgqB,EAAAA,KAAK,CAACM,MAAN,GAAeH,OAAO,CAACE,IAAI,CAACC,MAAD,CAAL,CAAtB;AACAN,EAAAA,KAAK,CAACO,QAAN,GAAiBJ,OAAO,CAACE,IAAI,CAACE,QAAD,CAAL,CAAxB;AACAP,EAAAA,KAAK,CAACS,MAAN,GAAeN,OAAO,CAACE,IAAI,CAACI,MAAD,CAAL,CAAtB;AACAT,EAAAA,KAAK,CAACU,OAAN,GAAgBP,OAAO,CAACE,IAAI,CAACK,OAAD,CAAL,CAAvB;AACAV,EAAAA,KAAK,CAAC/L,MAAN,GAAekM,OAAO,CAACE,IAAI,CAACpM,MAAD,CAAL,CAAtB;AACA+L,EAAAA,KAAK,CAACQ,OAAN,GAAgBL,OAAO,CAACE,IAAI,CAACG,OAAD,CAAL,CAAvB;AACAR,EAAAA,KAAK,CAACY,KAAN,GAAcT,OAAO,CAACE,IAAI,CAACO,KAAD,CAAL,CAArB;AACAZ,EAAAA,KAAK,CAACW,IAAN,GAAaR,OAAO,CAACE,IAAI,CAACM,IAAD,CAAL,CAApB,CAvpFkB,CAwpFlB;;AAEA,MAAIE,OAAO,GAAGb,KAAd,CA1pFkB,CA4pFlB;AACA;AACA;;AAEA,MAAIc,MAAM,GAAGxsB,KAAK,CAACG,IAAnB;AACA,MAAIF,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIK,KAAK,GAAGN,KAAK,CAACM,KAAlB;AACA,MAAImsB,KAAK,GAAG3sB,IAAI,CAACiP,GAAjB;AACA,MAAI2d,KAAK,GAAG5sB,IAAI,CAACsR,GAAjB;AACA,MAAIub,KAAK,GAAG7sB,IAAI,CAACsM,GAAjB;AACA,MAAIwgB,QAAQ,GAAGhqB,QAAf;;AAEA,MAAIiqB,SAAS,GAAG,UAASC,KAAT,EAAgBC,SAAhB,EAA2B7I,GAA3B,EAAgC+F,KAAhC,EAAuC+C,SAAvC,EAAkD;AAC9D,QAAKF,KAAK,KAAK,KAAK,CAApB,EAAwBA,KAAK,GAAC,GAAN;AACxB,QAAKC,SAAS,KAAK,KAAK,CAAxB,EAA4BA,SAAS,GAAC,CAAC,GAAX;AAC5B,QAAK7I,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,CAAJ;AACtB,QAAK+F,KAAK,KAAK,KAAK,CAApB,EAAwBA,KAAK,GAAC,CAAN;AACxB,QAAK+C,SAAS,KAAK,KAAK,CAAxB,EAA4BA,SAAS,GAAC,CAAC,CAAD,EAAG,CAAH,CAAV;AAE5B,QAAI5I,EAAE,GAAG,CAAT;AAAA,QAAY6I,EAAZ;;AACA,QAAIT,MAAM,CAACQ,SAAD,CAAN,KAAsB,OAA1B,EAAmC;AAC/BC,MAAAA,EAAE,GAAGD,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAA7B;AACH,KAFD,MAEO;AACHC,MAAAA,EAAE,GAAG,CAAL;AACAD,MAAAA,SAAS,GAAG,CAACA,SAAD,EAAYA,SAAZ,CAAZ;AACH;;AAED,QAAI7pB,CAAC,GAAG,UAAS+pB,KAAT,EAAgB;AACpB,UAAIxrB,CAAC,GAAGpB,KAAK,IAAK,CAACwsB,KAAK,GAAC,GAAP,IAAY,GAAb,GAAqBC,SAAS,GAAGG,KAArC,CAAb;AACA,UAAIttB,CAAC,GAAG6sB,KAAK,CAACO,SAAS,CAAC,CAAD,CAAT,GAAgBC,EAAE,GAAGC,KAAtB,EAA8BjD,KAA9B,CAAb;AACA,UAAIplB,CAAC,GAAGuf,EAAE,KAAK,CAAP,GAAWF,GAAG,CAAC,CAAD,CAAH,GAAUgJ,KAAK,GAAG9I,EAA7B,GAAmCF,GAA3C;AACA,UAAIiJ,GAAG,GAAItoB,CAAC,GAAGjF,CAAJ,IAAS,IAAEA,CAAX,CAAD,GAAkB,CAA5B;AACA,UAAIwtB,KAAK,GAAGT,KAAK,CAACjrB,CAAD,CAAjB;AACA,UAAI2rB,KAAK,GAAGX,KAAK,CAAChrB,CAAD,CAAjB;AACA,UAAIuB,CAAC,GAAGrD,CAAC,GAAIutB,GAAG,IAAK,CAAC,OAAD,GAAWC,KAAZ,GAAsB,UAASC,KAAnC,CAAhB;AACA,UAAInqB,CAAC,GAAGtD,CAAC,GAAIutB,GAAG,IAAK,CAAC,OAAD,GAAWC,KAAZ,GAAsB,UAASC,KAAnC,CAAhB;AACA,UAAI1rB,CAAC,GAAG/B,CAAC,GAAIutB,GAAG,IAAI,CAAC,OAAD,GAAWC,KAAf,CAAhB;AACA,aAAOR,QAAQ,CAAC3sB,QAAQ,CAAC,CAACgD,CAAC,GAAC,GAAH,EAAOC,CAAC,GAAC,GAAT,EAAavB,CAAC,GAAC,GAAf,EAAmB,CAAnB,CAAD,CAAT,CAAf;AACH,KAXD;;AAaAwB,IAAAA,CAAC,CAAC2pB,KAAF,GAAU,UAASloB,CAAT,EAAY;AAClB,UAAKA,CAAC,IAAI,IAAV,EAAiB;AAAE,eAAOkoB,KAAP;AAAe;;AAClCA,MAAAA,KAAK,GAAGloB,CAAR;AACA,aAAOzB,CAAP;AACH,KAJD;;AAMAA,IAAAA,CAAC,CAAC4pB,SAAF,GAAc,UAAS9pB,CAAT,EAAY;AACtB,UAAKA,CAAC,IAAI,IAAV,EAAiB;AAAE,eAAO8pB,SAAP;AAAmB;;AACtCA,MAAAA,SAAS,GAAG9pB,CAAZ;AACA,aAAOE,CAAP;AACH,KAJD;;AAMAA,IAAAA,CAAC,CAAC8mB,KAAF,GAAU,UAAS/mB,CAAT,EAAY;AAClB,UAAKA,CAAC,IAAI,IAAV,EAAiB;AAAE,eAAO+mB,KAAP;AAAe;;AAClCA,MAAAA,KAAK,GAAG/mB,CAAR;AACA,aAAOC,CAAP;AACH,KAJD;;AAMAA,IAAAA,CAAC,CAAC+gB,GAAF,GAAQ,UAASrf,CAAT,EAAY;AAChB,UAAKA,CAAC,IAAI,IAAV,EAAiB;AAAE,eAAOqf,GAAP;AAAa;;AAChCA,MAAAA,GAAG,GAAGrf,CAAN;;AACA,UAAI2nB,MAAM,CAACtI,GAAD,CAAN,KAAgB,OAApB,EAA6B;AACzBE,QAAAA,EAAE,GAAGF,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAjB;;AACA,YAAIE,EAAE,KAAK,CAAX,EAAc;AAAEF,UAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAT;AAAe;AAClC,OAHD,MAGO;AACHE,QAAAA,EAAE,GAAG,CAAL;AACH;;AACD,aAAOjhB,CAAP;AACH,KAVD;;AAYAA,IAAAA,CAAC,CAAC6pB,SAAF,GAAc,UAASnoB,CAAT,EAAY;AACtB,UAAKA,CAAC,IAAI,IAAV,EAAiB;AAAE,eAAOmoB,SAAP;AAAmB;;AACtC,UAAIR,MAAM,CAAC3nB,CAAD,CAAN,KAAc,OAAlB,EAA2B;AACvBmoB,QAAAA,SAAS,GAAGnoB,CAAZ;AACAooB,QAAAA,EAAE,GAAGpoB,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAb;AACH,OAHD,MAGO;AACHmoB,QAAAA,SAAS,GAAG,CAACnoB,CAAD,EAAGA,CAAH,CAAZ;AACAooB,QAAAA,EAAE,GAAG,CAAL;AACH;;AACD,aAAO9pB,CAAP;AACH,KAVD;;AAYAA,IAAAA,CAAC,CAACqoB,KAAF,GAAU,YAAY;AAAE,aAAOoB,QAAQ,CAACpB,KAAT,CAAeroB,CAAf,CAAP;AAA2B,KAAnD;;AAEAA,IAAAA,CAAC,CAAC+gB,GAAF,CAAMA,GAAN;AAEA,WAAO/gB,CAAP;AACH,GA3ED;;AA6EA,MAAImqB,OAAO,GAAGhrB,OAAd;AACA,MAAIirB,MAAM,GAAG,kBAAb;AAEA,MAAIC,OAAO,GAAG1tB,IAAI,CAACiJ,KAAnB;AACA,MAAI0kB,MAAM,GAAG3tB,IAAI,CAAC2tB,MAAlB;;AAEA,MAAIC,QAAQ,GAAG,YAAY;AACvB,QAAIC,IAAI,GAAG,GAAX;;AACA,SAAK,IAAIxvB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpBwvB,MAAAA,IAAI,IAAIJ,MAAM,CAAC9K,MAAP,CAAc+K,OAAO,CAACC,MAAM,KAAK,EAAZ,CAArB,CAAR;AACH;;AACD,WAAO,IAAIH,OAAJ,CAAYK,IAAZ,EAAkB,KAAlB,CAAP;AACH,GAND;;AAQA,MAAIxtB,IAAI,GAAGzB,MAAX;AACA,MAAI0f,GAAG,GAAGte,IAAI,CAACse,GAAf;AACA,MAAIwP,KAAK,GAAG9tB,IAAI,CAACiP,GAAjB;AACA,MAAIhG,KAAK,GAAGjJ,IAAI,CAACiJ,KAAjB;AACA,MAAI8kB,KAAK,GAAG/tB,IAAI,CAACqhB,GAAjB;;AAGA,MAAImH,OAAO,GAAG,UAAUwF,IAAV,EAAgBC,GAAhB,EAAqB;AAC/B,QAAKA,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,IAAJ;AAEtB,QAAI9qB,CAAC,GAAG;AACJtF,MAAAA,GAAG,EAAEmH,MAAM,CAACkpB,SADR;AAEJpwB,MAAAA,GAAG,EAAEkH,MAAM,CAACkpB,SAAP,GAAiB,CAAC,CAFnB;AAGJ5C,MAAAA,GAAG,EAAE,CAHD;AAIJ6C,MAAAA,MAAM,EAAE,EAJJ;AAKJC,MAAAA,KAAK,EAAE;AALH,KAAR;;AAOA,QAAI/tB,IAAI,CAAC2tB,IAAD,CAAJ,KAAe,QAAnB,EAA6B;AACzBA,MAAAA,IAAI,GAAGlvB,MAAM,CAACqvB,MAAP,CAAcH,IAAd,CAAP;AACH;;AACDA,IAAAA,IAAI,CAACnb,OAAL,CAAa,UAAUuV,GAAV,EAAe;AACxB,UAAI6F,GAAG,IAAI5tB,IAAI,CAAC+nB,GAAD,CAAJ,KAAc,QAAzB,EAAmC;AAAEA,QAAAA,GAAG,GAAGA,GAAG,CAAC6F,GAAD,CAAT;AAAiB;;AACtD,UAAI7F,GAAG,KAAK1oB,SAAR,IAAqB0oB,GAAG,KAAK,IAA7B,IAAqC,CAAC5b,KAAK,CAAC4b,GAAD,CAA/C,EAAsD;AAClDjlB,QAAAA,CAAC,CAACgrB,MAAF,CAAS9rB,IAAT,CAAc+lB,GAAd;AACAjlB,QAAAA,CAAC,CAACmoB,GAAF,IAASlD,GAAT;;AACA,YAAIA,GAAG,GAAGjlB,CAAC,CAACtF,GAAZ,EAAiB;AAAEsF,UAAAA,CAAC,CAACtF,GAAF,GAAQuqB,GAAR;AAAc;;AACjC,YAAIA,GAAG,GAAGjlB,CAAC,CAACrF,GAAZ,EAAiB;AAAEqF,UAAAA,CAAC,CAACrF,GAAF,GAAQsqB,GAAR;AAAc;;AACjCjlB,QAAAA,CAAC,CAACirB,KAAF,IAAW,CAAX;AACH;AACJ,KATD;AAWAjrB,IAAAA,CAAC,CAACulB,MAAF,GAAW,CAACvlB,CAAC,CAACtF,GAAH,EAAQsF,CAAC,CAACrF,GAAV,CAAX;;AAEAqF,IAAAA,CAAC,CAACslB,MAAF,GAAW,UAAUhnB,IAAV,EAAgB+b,GAAhB,EAAqB;AAAE,aAAOiL,MAAM,CAACtlB,CAAD,EAAI1B,IAAJ,EAAU+b,GAAV,CAAb;AAA8B,KAAhE;;AAEA,WAAOra,CAAP;AACH,GA7BD;;AAgCA,MAAIslB,MAAM,GAAG,UAAUuF,IAAV,EAAgBvsB,IAAhB,EAAsB+b,GAAtB,EAA2B;AACpC,QAAK/b,IAAI,KAAK,KAAK,CAAnB,EAAuBA,IAAI,GAAC,OAAL;AACvB,QAAK+b,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAC,CAAJ;;AAEtB,QAAInd,IAAI,CAAC2tB,IAAD,CAAJ,IAAc,OAAlB,EAA2B;AACvBA,MAAAA,IAAI,GAAGxF,OAAO,CAACwF,IAAD,CAAd;AACH;;AACD,QAAInwB,GAAG,GAAGmwB,IAAI,CAACnwB,GAAf;AACA,QAAIC,GAAG,GAAGkwB,IAAI,CAAClwB,GAAf;AACA,QAAIqwB,MAAM,GAAGH,IAAI,CAACG,MAAL,CAAYxsB,IAAZ,CAAiB,UAAUC,CAAV,EAAYC,CAAZ,EAAe;AAAE,aAAOD,CAAC,GAACC,CAAT;AAAa,KAA/C,CAAb;;AAEA,QAAI2b,GAAG,KAAK,CAAZ,EAAe;AAAE,aAAO,CAAC3f,GAAD,EAAKC,GAAL,CAAP;AAAmB;;AAEpC,QAAI2qB,MAAM,GAAG,EAAb;;AAEA,QAAIhnB,IAAI,CAACiE,MAAL,CAAY,CAAZ,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAAE;AAC5B+iB,MAAAA,MAAM,CAACpmB,IAAP,CAAYxE,GAAZ;AACA4qB,MAAAA,MAAM,CAACpmB,IAAP,CAAYvE,GAAZ;AACH;;AAED,QAAI2D,IAAI,CAACiE,MAAL,CAAY,CAAZ,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAAE;AAC5B+iB,MAAAA,MAAM,CAACpmB,IAAP,CAAYxE,GAAZ;;AACA,WAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACmf,GAAhB,EAAqBnf,CAAC,EAAtB,EAA0B;AACtBoqB,QAAAA,MAAM,CAACpmB,IAAP,CAAYxE,GAAG,GAAGQ,CAAC,GAACmf,GAAH,IAAS1f,GAAG,GAACD,GAAb,CAAjB;AACH;;AACD4qB,MAAAA,MAAM,CAACpmB,IAAP,CAAYvE,GAAZ;AACH,KAND,MAQK,IAAI2D,IAAI,CAACiE,MAAL,CAAY,CAAZ,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAAE;AACjC,UAAI7H,GAAG,IAAI,CAAX,EAAc;AACV,cAAM,IAAIuE,KAAJ,CAAU,qDAAV,CAAN;AACH;;AACD,UAAIisB,OAAO,GAAGruB,IAAI,CAACsuB,MAAL,GAAchQ,GAAG,CAACzgB,GAAD,CAA/B;AACA,UAAI0wB,OAAO,GAAGvuB,IAAI,CAACsuB,MAAL,GAAchQ,GAAG,CAACxgB,GAAD,CAA/B;AACA2qB,MAAAA,MAAM,CAACpmB,IAAP,CAAYxE,GAAZ;;AACA,WAAK,IAAIU,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACif,GAApB,EAAyBjf,GAAG,EAA5B,EAAgC;AAC5BkqB,QAAAA,MAAM,CAACpmB,IAAP,CAAYyrB,KAAK,CAAC,EAAD,EAAKO,OAAO,GAAK9vB,GAAG,GAACif,GAAL,IAAa+Q,OAAO,GAAGF,OAAvB,CAAhB,CAAjB;AACH;;AACD5F,MAAAA,MAAM,CAACpmB,IAAP,CAAYvE,GAAZ;AACH,KAXI,MAaA,IAAI2D,IAAI,CAACiE,MAAL,CAAY,CAAZ,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAAE;AACjC+iB,MAAAA,MAAM,CAACpmB,IAAP,CAAYxE,GAAZ;;AACA,WAAK,IAAIyJ,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACkW,GAApB,EAAyBlW,GAAG,EAA5B,EAAgC;AAC5B,YAAIxF,CAAC,GAAI,CAACqsB,MAAM,CAAC1vB,MAAP,GAAc,CAAf,IAAoB6I,GAArB,GAA0BkW,GAAlC;AACA,YAAIgR,EAAE,GAAGvlB,KAAK,CAACnH,CAAD,CAAd;;AACA,YAAI0sB,EAAE,KAAK1sB,CAAX,EAAc;AACV2mB,UAAAA,MAAM,CAACpmB,IAAP,CAAY8rB,MAAM,CAACK,EAAD,CAAlB;AACH,SAFD,MAEO;AAAE;AACL,cAAIC,EAAE,GAAG3sB,CAAC,GAAG0sB,EAAb;AACA/F,UAAAA,MAAM,CAACpmB,IAAP,CAAa8rB,MAAM,CAACK,EAAD,CAAN,IAAY,IAAEC,EAAd,CAAD,GAAuBN,MAAM,CAACK,EAAE,GAAC,CAAJ,CAAN,GAAaC,EAAhD;AACH;AACJ;;AACDhG,MAAAA,MAAM,CAACpmB,IAAP,CAAYvE,GAAZ;AAEH,KAdI,MAgBA,IAAI2D,IAAI,CAACiE,MAAL,CAAY,CAAZ,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAAE;;AACjC;AACZ;AACA;AACA;AACA;AACY,UAAIgpB,OAAJ;AACA,UAAIxR,CAAC,GAAGiR,MAAM,CAAC1vB,MAAf;AACA,UAAIkwB,WAAW,GAAG,IAAIrvB,KAAJ,CAAU4d,CAAV,CAAlB;AACA,UAAI0R,YAAY,GAAG,IAAItvB,KAAJ,CAAUke,GAAV,CAAnB;AACA,UAAIqR,MAAM,GAAG,IAAb;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,SAAS,GAAG,IAAhB,CAZ+B,CAc/B;;AACAA,MAAAA,SAAS,GAAG,EAAZ;AACAA,MAAAA,SAAS,CAAC1sB,IAAV,CAAexE,GAAf;;AACA,WAAK,IAAI2J,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACgW,GAApB,EAAyBhW,GAAG,EAA5B,EAAgC;AAC5BunB,QAAAA,SAAS,CAAC1sB,IAAV,CAAexE,GAAG,GAAK2J,GAAG,GAACgW,GAAL,IAAa1f,GAAG,GAACD,GAAjB,CAAtB;AACH;;AACDkxB,MAAAA,SAAS,CAAC1sB,IAAV,CAAevE,GAAf;;AAEA,aAAO+wB,MAAP,EAAe;AACX;AACA,aAAK,IAAI/D,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACtN,GAAhB,EAAqBsN,CAAC,EAAtB,EAA0B;AACtB8D,UAAAA,YAAY,CAAC9D,CAAD,CAAZ,GAAkB,CAAlB;AACH;;AACD,aAAK,IAAIkE,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC9R,CAApB,EAAuB8R,GAAG,EAA1B,EAA8B;AAC1B,cAAItM,KAAK,GAAGyL,MAAM,CAACa,GAAD,CAAlB;AACA,cAAIC,OAAO,GAAGjqB,MAAM,CAACkpB,SAArB;AACA,cAAIgB,IAAI,GAAI,KAAK,CAAjB;;AACA,eAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC3R,GAApB,EAAyB2R,GAAG,EAA5B,EAAgC;AAC5B,gBAAIC,IAAI,GAAGrB,KAAK,CAACgB,SAAS,CAACI,GAAD,CAAT,GAAezM,KAAhB,CAAhB;;AACA,gBAAI0M,IAAI,GAAGH,OAAX,EAAoB;AAChBA,cAAAA,OAAO,GAAGG,IAAV;AACAF,cAAAA,IAAI,GAAGC,GAAP;AACH;;AACDP,YAAAA,YAAY,CAACM,IAAD,CAAZ;AACAP,YAAAA,WAAW,CAACK,GAAD,CAAX,GAAmBE,IAAnB;AACH;AACJ,SAlBU,CAoBX;;;AACA,YAAIG,YAAY,GAAG,IAAI/vB,KAAJ,CAAUke,GAAV,CAAnB;;AACA,aAAK,IAAI8R,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC9R,GAApB,EAAyB8R,GAAG,EAA5B,EAAgC;AAC5BD,UAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoB,IAApB;AACH;;AACD,aAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACrS,CAApB,EAAuBqS,GAAG,EAA1B,EAA8B;AAC1Bb,UAAAA,OAAO,GAAGC,WAAW,CAACY,GAAD,CAArB;;AACA,cAAIF,YAAY,CAACX,OAAD,CAAZ,KAA0B,IAA9B,EAAoC;AAChCW,YAAAA,YAAY,CAACX,OAAD,CAAZ,GAAwBP,MAAM,CAACoB,GAAD,CAA9B;AACH,WAFD,MAEO;AACHF,YAAAA,YAAY,CAACX,OAAD,CAAZ,IAAyBP,MAAM,CAACoB,GAAD,CAA/B;AACH;AACJ;;AACD,aAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAChS,GAApB,EAAyBgS,GAAG,EAA5B,EAAgC;AAC5BH,UAAAA,YAAY,CAACG,GAAD,CAAZ,IAAqB,IAAEZ,YAAY,CAACY,GAAD,CAAnC;AACH,SAnCU,CAqCX;;;AACAX,QAAAA,MAAM,GAAG,KAAT;;AACA,aAAK,IAAIY,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACjS,GAApB,EAAyBiS,GAAG,EAA5B,EAAgC;AAC5B,cAAIJ,YAAY,CAACI,GAAD,CAAZ,KAAsBV,SAAS,CAACU,GAAD,CAAnC,EAA0C;AACtCZ,YAAAA,MAAM,GAAG,IAAT;AACA;AACH;AACJ;;AAEDE,QAAAA,SAAS,GAAGM,YAAZ;AACAP,QAAAA,QAAQ;;AAER,YAAIA,QAAQ,GAAG,GAAf,EAAoB;AAChBD,UAAAA,MAAM,GAAG,KAAT;AACH;AACJ,OA1E8B,CA4E/B;AACA;;;AACA,UAAIa,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACnS,GAApB,EAAyBmS,GAAG,EAA5B,EAAgC;AAC5BD,QAAAA,SAAS,CAACC,GAAD,CAAT,GAAiB,EAAjB;AACH;;AACD,WAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAC1S,CAApB,EAAuB0S,GAAG,EAA1B,EAA8B;AAC1BlB,QAAAA,OAAO,GAAGC,WAAW,CAACiB,GAAD,CAArB;AACAF,QAAAA,SAAS,CAAChB,OAAD,CAAT,CAAmBrsB,IAAnB,CAAwB8rB,MAAM,CAACyB,GAAD,CAA9B;AACH;;AACD,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACtS,GAApB,EAAyBsS,GAAG,EAA5B,EAAgC;AAC5BD,QAAAA,eAAe,CAACxtB,IAAhB,CAAqBqtB,SAAS,CAACI,GAAD,CAAT,CAAe,CAAf,CAArB;AACAD,QAAAA,eAAe,CAACxtB,IAAhB,CAAqBqtB,SAAS,CAACI,GAAD,CAAT,CAAeJ,SAAS,CAACI,GAAD,CAAT,CAAerxB,MAAf,GAAsB,CAArC,CAArB;AACH;;AACDoxB,MAAAA,eAAe,GAAGA,eAAe,CAACluB,IAAhB,CAAqB,UAAUC,CAAV,EAAYC,CAAZ,EAAc;AAAE,eAAOD,CAAC,GAACC,CAAT;AAAa,OAAlD,CAAlB;AACA4mB,MAAAA,MAAM,CAACpmB,IAAP,CAAYwtB,eAAe,CAAC,CAAD,CAA3B;;AACA,WAAK,IAAIE,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAAGF,eAAe,CAACpxB,MAAtC,EAA8CsxB,GAAG,IAAG,CAApD,EAAuD;AACnD,YAAIpmB,CAAC,GAAGkmB,eAAe,CAACE,GAAD,CAAvB;;AACA,YAAI,CAACvjB,KAAK,CAAC7C,CAAD,CAAN,IAAc8e,MAAM,CAAChd,OAAP,CAAe9B,CAAf,MAAsB,CAAC,CAAzC,EAA6C;AACzC8e,UAAAA,MAAM,CAACpmB,IAAP,CAAYsH,CAAZ;AACH;AACJ;AACJ;;AACD,WAAO8e,MAAP;AACH,GA9JD;;AAgKA,MAAIuH,SAAS,GAAG;AAACxH,IAAAA,OAAO,EAAEA,OAAV;AAAmBC,IAAAA,MAAM,EAAEA;AAA3B,GAAhB;AAEA,MAAIwH,OAAO,GAAGztB,OAAd;;AAGA,MAAI0tB,QAAQ,GAAG,UAAUtuB,CAAV,EAAaC,CAAb,EAAgB;AAC3B;AACA;AACAD,IAAAA,CAAC,GAAG,IAAIquB,OAAJ,CAAYruB,CAAZ,CAAJ;AACAC,IAAAA,CAAC,GAAG,IAAIouB,OAAJ,CAAYpuB,CAAZ,CAAJ;AACA,QAAIsuB,EAAE,GAAGvuB,CAAC,CAACgf,SAAF,EAAT;AACA,QAAIwP,EAAE,GAAGvuB,CAAC,CAAC+e,SAAF,EAAT;AACA,WAAOuP,EAAE,GAAGC,EAAL,GAAU,CAACD,EAAE,GAAG,IAAN,KAAeC,EAAE,GAAG,IAApB,CAAV,GAAsC,CAACA,EAAE,GAAG,IAAN,KAAeD,EAAE,GAAG,IAApB,CAA7C;AACH,GARD;;AAUA,MAAIE,OAAO,GAAG7tB,OAAd;AACA,MAAIsJ,IAAI,GAAG9L,IAAI,CAAC8L,IAAhB;AACA,MAAImD,GAAG,GAAGjP,IAAI,CAACiP,GAAf;AACA,MAAIpR,GAAG,GAAGmC,IAAI,CAACnC,GAAf;AACA,MAAIC,GAAG,GAAGkC,IAAI,CAAClC,GAAf;AACA,MAAI6S,KAAK,GAAG3Q,IAAI,CAAC2Q,KAAjB;AACA,MAAI0Q,GAAG,GAAGrhB,IAAI,CAACqhB,GAAf;AACA,MAAI/U,GAAG,GAAGtM,IAAI,CAACsM,GAAf;AACA,MAAIgF,GAAG,GAAGtR,IAAI,CAACsR,GAAf;AACA,MAAIgf,GAAG,GAAGtwB,IAAI,CAACswB,GAAf;AACA,MAAIrwB,EAAE,GAAGD,IAAI,CAACC,EAAd;;AAEA,MAAIswB,MAAM,GAAG,UAAS3uB,CAAT,EAAYC,CAAZ,EAAe2uB,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2B;AACpC,QAAKF,EAAE,KAAK,KAAK,CAAjB,EAAqBA,EAAE,GAAC,CAAH;AACrB,QAAKC,EAAE,KAAK,KAAK,CAAjB,EAAqBA,EAAE,GAAC,CAAH;AACrB,QAAKC,EAAE,KAAK,KAAK,CAAjB,EAAqBA,EAAE,GAAC,CAAH,CAHe,CAKpC;AACA;;AACA,QAAIC,OAAO,GAAG,UAASC,GAAT,EAAc;AACxB,aAAO,MAAMA,GAAN,IAAa,IAAI3wB,EAAjB,CAAP;AACH,KAFD;;AAGA,QAAI4wB,OAAO,GAAG,UAASC,GAAT,EAAc;AACxB,aAAQ,IAAI7wB,EAAJ,GAAS6wB,GAAV,GAAiB,GAAxB;AACH,KAFD;;AAGAlvB,IAAAA,CAAC,GAAG,IAAIyuB,OAAJ,CAAYzuB,CAAZ,CAAJ;AACAC,IAAAA,CAAC,GAAG,IAAIwuB,OAAJ,CAAYxuB,CAAZ,CAAJ;AACA,QAAIqB,GAAG,GAAG5D,KAAK,CAAComB,IAAN,CAAW9jB,CAAC,CAAC2O,GAAF,EAAX,CAAV;AACA,QAAI6Y,EAAE,GAAGlmB,GAAG,CAAC,CAAD,CAAZ;AACA,QAAI6tB,EAAE,GAAG7tB,GAAG,CAAC,CAAD,CAAZ;AACA,QAAI8tB,EAAE,GAAG9tB,GAAG,CAAC,CAAD,CAAZ;AACA,QAAIiM,KAAK,GAAG7P,KAAK,CAAComB,IAAN,CAAW7jB,CAAC,CAAC0O,GAAF,EAAX,CAAZ;AACA,QAAI0gB,EAAE,GAAG9hB,KAAK,CAAC,CAAD,CAAd;AACA,QAAI+hB,EAAE,GAAG/hB,KAAK,CAAC,CAAD,CAAd;AACA,QAAIgiB,EAAE,GAAGhiB,KAAK,CAAC,CAAD,CAAd;AACA,QAAIiiB,IAAI,GAAG,CAAChI,EAAE,GAAG6H,EAAN,IAAU,CAArB;AACA,QAAII,EAAE,GAAGvlB,IAAI,CAACmD,GAAG,CAAC8hB,EAAD,EAAK,CAAL,CAAH,GAAa9hB,GAAG,CAAC+hB,EAAD,EAAK,CAAL,CAAjB,CAAb;AACA,QAAIM,EAAE,GAAGxlB,IAAI,CAACmD,GAAG,CAACiiB,EAAD,EAAK,CAAL,CAAH,GAAajiB,GAAG,CAACkiB,EAAD,EAAK,CAAL,CAAjB,CAAb;AACA,QAAII,IAAI,GAAG,CAACF,EAAE,GAAGC,EAAN,IAAU,CAArB;AACA,QAAIE,CAAC,GAAG,OAAK,IAAE1lB,IAAI,CAACmD,GAAG,CAACsiB,IAAD,EAAO,CAAP,CAAH,IAActiB,GAAG,CAACsiB,IAAD,EAAO,CAAP,CAAH,GAAetiB,GAAG,CAAC,EAAD,EAAK,CAAL,CAAhC,CAAD,CAAX,CAAR;AACA,QAAIwiB,GAAG,GAAGV,EAAE,IAAE,IAAES,CAAJ,CAAZ;AACA,QAAIE,GAAG,GAAGR,EAAE,IAAE,IAAEM,CAAJ,CAAZ;AACA,QAAIG,GAAG,GAAG7lB,IAAI,CAACmD,GAAG,CAACwiB,GAAD,EAAM,CAAN,CAAH,GAAcxiB,GAAG,CAAC+hB,EAAD,EAAK,CAAL,CAAlB,CAAd;AACA,QAAIY,GAAG,GAAG9lB,IAAI,CAACmD,GAAG,CAACyiB,GAAD,EAAM,CAAN,CAAH,GAAcziB,GAAG,CAACkiB,EAAD,EAAK,CAAL,CAAlB,CAAd;AACA,QAAIU,KAAK,GAAG,CAACF,GAAG,GAAGC,GAAP,IAAY,CAAxB;AACA,QAAIE,OAAO,GAAGnB,OAAO,CAAChgB,KAAK,CAACqgB,EAAD,EAAKS,GAAL,CAAN,CAArB;AACA,QAAIM,OAAO,GAAGpB,OAAO,CAAChgB,KAAK,CAACwgB,EAAD,EAAKO,GAAL,CAAN,CAArB;AACA,QAAIM,GAAG,GAAGF,OAAO,IAAI,CAAX,GAAeA,OAAf,GAAyBA,OAAO,GAAG,GAA7C;AACA,QAAIG,GAAG,GAAGF,OAAO,IAAI,CAAX,GAAeA,OAAf,GAAyBA,OAAO,GAAG,GAA7C;AACA,QAAIG,KAAK,GAAG7Q,GAAG,CAAC2Q,GAAG,GAAGC,GAAP,CAAH,GAAiB,GAAjB,GAAuB,CAACD,GAAG,GAAGC,GAAN,GAAY,GAAb,IAAkB,CAAzC,GAA6C,CAACD,GAAG,GAAGC,GAAP,IAAY,CAArE;AACA,QAAIE,CAAC,GAAG,IAAI,OAAK7lB,GAAG,CAACukB,OAAO,CAACqB,KAAK,GAAG,EAAT,CAAR,CAAZ,GAAoC,OAAK5lB,GAAG,CAACukB,OAAO,CAAC,IAAEqB,KAAH,CAAR,CAA5C,GAAiE,OAAK5lB,GAAG,CAACukB,OAAO,CAAC,IAAEqB,KAAF,GAAU,CAAX,CAAR,CAAzE,GAAkG,MAAI5lB,GAAG,CAACukB,OAAO,CAAC,IAAEqB,KAAF,GAAU,EAAX,CAAR,CAAjH;AACA,QAAIE,OAAO,GAAGH,GAAG,GAAGD,GAApB;AACAI,IAAAA,OAAO,GAAG/Q,GAAG,CAAC+Q,OAAD,CAAH,IAAgB,GAAhB,GAAsBA,OAAtB,GAAgCH,GAAG,IAAID,GAAP,GAAaI,OAAO,GAAG,GAAvB,GAA6BA,OAAO,GAAG,GAAjF;AACAA,IAAAA,OAAO,GAAG,IAAEtmB,IAAI,CAAC6lB,GAAG,GAACC,GAAL,CAAN,GAAgBtgB,GAAG,CAACuf,OAAO,CAACuB,OAAD,CAAP,GAAiB,CAAlB,CAA7B;AACA,QAAIC,MAAM,GAAGpB,EAAE,GAAG7H,EAAlB;AACA,QAAIkJ,OAAO,GAAGV,GAAG,GAAGD,GAApB;AACA,QAAIY,EAAE,GAAG,IAAK,QAAMtjB,GAAG,CAACmiB,IAAI,GAAG,EAAR,EAAY,CAAZ,CAAV,GAA0BtlB,IAAI,CAAC,KAAKmD,GAAG,CAACmiB,IAAI,GAAG,EAAR,EAAY,CAAZ,CAAT,CAA3C;AACA,QAAIoB,EAAE,GAAG,IAAI,QAAMX,KAAnB;AACA,QAAIY,EAAE,GAAG,IAAI,QAAMZ,KAAN,GAAYM,CAAzB;AACA,QAAIO,UAAU,GAAG,KAAGpC,GAAG,CAAC,CAACrhB,GAAG,CAAC,CAACijB,KAAK,GAAG,GAAT,IAAc,EAAf,EAAmB,CAAnB,CAAL,CAAvB;AACA,QAAIS,EAAE,GAAG,IAAE7mB,IAAI,CAACmD,GAAG,CAAC4iB,KAAD,EAAQ,CAAR,CAAH,IAAe5iB,GAAG,CAAC4iB,KAAD,EAAQ,CAAR,CAAH,GAAgB5iB,GAAG,CAAC,EAAD,EAAK,CAAL,CAAlC,CAAD,CAAf;AACA,QAAI2jB,EAAE,GAAG,CAACD,EAAD,GAAIrhB,GAAG,CAAC,IAAEuf,OAAO,CAAC6B,UAAD,CAAV,CAAhB;AACA,QAAI/I,MAAM,GAAG7d,IAAI,CAACmD,GAAG,CAACojB,MAAM,IAAE7B,EAAE,GAAC+B,EAAL,CAAP,EAAiB,CAAjB,CAAH,GAAyBtjB,GAAG,CAACqjB,OAAO,IAAE7B,EAAE,GAAC+B,EAAL,CAAR,EAAkB,CAAlB,CAA5B,GAAmDvjB,GAAG,CAACmjB,OAAO,IAAE1B,EAAE,GAAC+B,EAAL,CAAR,EAAkB,CAAlB,CAAtD,GAA6EG,EAAE,IAAEN,OAAO,IAAE7B,EAAE,GAAC+B,EAAL,CAAT,CAAF,IAAsBJ,OAAO,IAAE1B,EAAE,GAAC+B,EAAL,CAA7B,CAA9E,CAAjB;AACA,WAAO30B,GAAG,CAAC,CAAD,EAAID,GAAG,CAAC,GAAD,EAAM8rB,MAAN,CAAP,CAAV;AACH,GApDD;;AAsDA,MAAIkJ,OAAO,GAAGrwB,OAAd,CA3hGkB,CA6hGlB;;AACA,MAAIswB,QAAQ,GAAG,UAASlxB,CAAT,EAAYC,CAAZ,EAAeJ,IAAf,EAAqB;AAChC,QAAKA,IAAI,KAAK,KAAK,CAAnB,EAAuBA,IAAI,GAAC,KAAL,CADS,CAGhC;AACA;;AACAG,IAAAA,CAAC,GAAG,IAAIixB,OAAJ,CAAYjxB,CAAZ,CAAJ;AACAC,IAAAA,CAAC,GAAG,IAAIgxB,OAAJ,CAAYhxB,CAAZ,CAAJ;AACA,QAAIsuB,EAAE,GAAGvuB,CAAC,CAACue,GAAF,CAAM1e,IAAN,CAAT;AACA,QAAI2uB,EAAE,GAAGvuB,CAAC,CAACse,GAAF,CAAM1e,IAAN,CAAT;AACA,QAAIsxB,MAAM,GAAG,CAAb;;AACA,SAAK,IAAI10B,CAAT,IAAc8xB,EAAd,EAAkB;AACd,UAAI5H,CAAC,GAAG,CAAC4H,EAAE,CAAC9xB,CAAD,CAAF,IAAS,CAAV,KAAgB+xB,EAAE,CAAC/xB,CAAD,CAAF,IAAS,CAAzB,CAAR;AACA00B,MAAAA,MAAM,IAAIxK,CAAC,GAACA,CAAZ;AACH;;AACD,WAAOvoB,IAAI,CAAC8L,IAAL,CAAUinB,MAAV,CAAP;AACH,GAfD;;AAiBA,MAAI3xB,KAAK,GAAGoB,OAAZ;;AAEA,MAAIwwB,KAAK,GAAG,YAAY;AACpB,QAAI5zB,IAAI,GAAG,EAAX;AAAA,QAAeiC,GAAG,GAAGC,SAAS,CAAC7C,MAA/B;;AACA,WAAQ4C,GAAG,EAAX,EAAgBjC,IAAI,CAAEiC,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAF,CAAvB;;AAEhB,QAAI;AACA,WAAKqB,QAAQ,CAAC3D,SAAT,CAAmB4D,IAAnB,CAAwBT,KAAxB,CAA+Bd,KAA/B,EAAsC,CAAE,IAAF,EAASwB,MAAT,CAAiBxD,IAAjB,CAAtC,CAAL;AACA,aAAO,IAAP;AACH,KAHD,CAGE,OAAO8H,CAAP,EAAU;AACR,aAAO,KAAP;AACH;AACJ,GAVD,CAjjGkB,CA6jGlB;;;AACA,MAAI+rB,QAAQ,GAAGnwB,QAAf;AAEA,MAAI4oB,KAAK,GAAG9E,OAAZ;AAEA,MAAIsM,MAAM,GAAG;AACZC,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AAAE,aAAOzH,KAAK,CAAC,CAACuH,QAAQ,CAACxrB,GAAT,CAAa,GAAb,EAAiB,CAAjB,EAAmB,EAAnB,CAAD,EAAyBwrB,QAAQ,CAACxrB,GAAT,CAAa,GAAb,EAAiB,EAAjB,EAAoB,EAApB,CAAzB,CAAD,CAAZ;AAAiE,KAD7E;AAEZ2rB,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAAE,aAAO1H,KAAK,CAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,CAAD,CAAL,CAAqCjqB,IAArC,CAA0C,KAA1C,CAAP;AAAyD;AAFnE,GAAb;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,MAAI4xB,WAAW,GAAG;AACd;AACAC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAFQ;AAGdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAHQ;AAIdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAJQ;AAKdC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CALK;AAMdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CANQ;AAOdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAPM;AAQdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CARQ;AASdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CATQ;AAUdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAVQ;AAWdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAXM;AAYdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAZM;AAadC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAbK;AAcdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAdQ;AAedC,IAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAfO;AAgBdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAhBM;AAiBdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAjBQ;AAkBdC,IAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAlBO;AAmBdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAnBM;AAoBdC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CApBK;AAsBd;AAEAC,IAAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CAxBI;AAyBdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CAzBM;AA0BdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CA1BQ;AA2BdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CA3BQ;AA4BdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CA5BQ;AA6BdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CA7BM;AA8BdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CA9BQ;AA+BdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CA/BQ;AAgCdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,CAhCQ;AAkCd;AAEAC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CApCQ;AAqCdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CArCM;AAsCdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAtCQ;AAuCdC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,EAA0H,SAA1H,CAvCQ;AAwCdC,IAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CAxCO;AAyCdC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,EAA0H,SAA1H,CAzCM;AA0CdC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CA1CK;AA2CdC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF;AA3CK,GAAlB,CAxlGkB,CAsoGlB;;AACA,OAAK,IAAIp3B,CAAC,GAAG,CAAR,EAAW0D,IAAI,GAAGjD,MAAM,CAACme,IAAP,CAAYoW,WAAZ,CAAvB,EAAiDh1B,CAAC,GAAG0D,IAAI,CAACtD,MAA1D,EAAkEJ,CAAC,IAAI,CAAvE,EAA0E;AACtE,QAAI4vB,GAAG,GAAGlsB,IAAI,CAAC1D,CAAD,CAAd;AAEAg1B,IAAAA,WAAW,CAACpF,GAAG,CAACtvB,WAAJ,EAAD,CAAX,GAAiC00B,WAAW,CAACpF,GAAD,CAA5C;AACH;;AAED,MAAIyH,aAAa,GAAGrC,WAApB;AAEA,MAAI31B,MAAM,GAAGoF,QAAb,CA/oGkB,CAipGlB;AACA;AAEA;AAgBA;AAWA;AAWA;;AACApF,EAAAA,MAAM,CAAC6nB,OAAP,GAAiBA,OAAjB;AACA7nB,EAAAA,MAAM,CAACqtB,MAAP,GAAgBU,QAAhB;AACA/tB,EAAAA,MAAM,CAACkuB,KAAP,GAAea,OAAf;AACA/uB,EAAAA,MAAM,CAACqvB,SAAP,GAAmBA,SAAnB;AACArvB,EAAAA,MAAM,CAACskB,GAAP,GAAatkB,MAAM,CAACyjB,WAAP,GAAqBS,KAAlC;AACAlkB,EAAAA,MAAM,CAACiwB,MAAP,GAAgBC,QAAhB;AACAlwB,EAAAA,MAAM,CAACguB,KAAP,GAAe9E,OAAf,CAjsGkB,CAmsGlB;;AACAlpB,EAAAA,MAAM,CAAC8qB,OAAP,GAAiBwH,SAAS,CAACxH,OAA3B;AACA9qB,EAAAA,MAAM,CAACwyB,QAAP,GAAkBA,QAAlB;AACAxyB,EAAAA,MAAM,CAAC6yB,MAAP,GAAgBA,MAAhB;AACA7yB,EAAAA,MAAM,CAACo1B,QAAP,GAAkBA,QAAlB;AACAp1B,EAAAA,MAAM,CAAC+qB,MAAP,GAAgBuH,SAAS,CAACvH,MAA1B;AACA/qB,EAAAA,MAAM,CAACs1B,KAAP,GAAeA,KAAf,CAzsGkB,CA2sGlB;;AACAt1B,EAAAA,MAAM,CAACw1B,MAAP,GAAgBA,MAAhB,CA5sGkB,CA8sGlB;;AACAx1B,EAAAA,MAAM,CAAC8nB,MAAP,GAAgB9I,QAAhB;AACAhf,EAAAA,MAAM,CAACmqB,MAAP,GAAgB6N,aAAhB;AAEA,MAAIC,SAAS,GAAGj4B,MAAhB;AAEA,SAAOi4B,SAAP;AAEH,CA1tGD","sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$n = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$m = type$n;\n\n    var unpack$v = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$m(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$l = type$n;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$l(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$n,\n    \tunpack: unpack$v,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$f = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$k = utils.type;\n    var _input = input$f;\n\n    var Color$A = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$k(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$A.prototype.toString = function toString () {\n        if (type$k(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$A;\n\n    var chroma$i = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$i.Color, [ null ].concat( args) ));\n    };\n\n    chroma$i.Color = Color_1;\n    chroma$i.version = '2.3.0';\n\n    var chroma_1 = chroma$i;\n\n    var unpack$u = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$u(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$t = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$t(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$h = chroma_1;\n    var Color$z = Color_1;\n    var input$e = input$f;\n    var unpack$s = utils.unpack;\n    var type$j = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$z.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$h.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$e.format.cmyk = cmyk2rgb_1;\n\n    input$e.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, 'cmyk');\n            if (type$j(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$r = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$r(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$q = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$p = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$p(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$o = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$o(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$d = input$f;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$d.format.named) {\n            try {\n                return input$d.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$g = chroma_1;\n    var Color$y = Color_1;\n    var input$c = input$f;\n    var type$i = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$y.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$g.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['css']) ));\n    };\n\n    input$c.format.css = css2rgb;\n\n    input$c.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$x = Color_1;\n    var chroma$f = chroma_1;\n    var input$b = input$f;\n    var unpack$n = utils.unpack;\n\n    input$b.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$n(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$f.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$x.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$m = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$m(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$l = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$l(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$k = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$w = Color_1;\n    var input$a = input$f;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$w.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$e.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$a.format.hcg = hcg2rgb_1;\n\n    input$a.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$k(args, 'hcg');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$j = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$j(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$d = chroma_1;\n    var Color$v = Color_1;\n    var type$g = utils.type;\n    var input$9 = input$f;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$v.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$d.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$9.format.hex = hex2rgb_1;\n    input$9.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$g(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$i = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$i(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$h = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$h(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$g = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$u = Color_1;\n    var input$8 = input$f;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$u.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$c.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$8.format.hsi = hsi2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsi');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$t = Color_1;\n    var input$7 = input$f;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$t.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$b.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$7.format.hsl = hsl2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsl');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$e(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$d = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$d(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$c = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$s = Color_1;\n    var input$6 = input$f;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$s.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$a.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$s, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$6.format.hsv = hsv2rgb_1;\n\n    input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$c(args, 'hsv');\n            if (type$d(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$b = utils.unpack;\n    var pow$8 = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$b(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$8((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$8(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$a = utils.unpack;\n    var pow$7 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$a(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$7(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$9 = utils.unpack;\n    var type$c = utils.type;\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$5 = input$f;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$r.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$9.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$5.format.lab = lab2rgb_1;\n\n    input$5.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, 'lab');\n            if (type$c(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$1;\n\n    var unpack$7 = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$7(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$6 = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$6(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$1;\n\n    var unpack$5 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$4 = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$4(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$b = utils.type;\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$4 = input$f;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$q.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$q.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$8.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$8.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$4.format.lch = lch2rgb_1;\n    input$4.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$4.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, m);\n            if (type$b(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$p = Color_1;\n    var input$3 = input$f;\n    var type$a = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$p.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$3.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$3.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$a(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$9 = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$9(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$7 = chroma_1;\n    var Color$o = Color_1;\n    var input$2 = input$f;\n    var type$8 = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$o.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$7.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['num']) ));\n    };\n\n    input$2.format.num = num2rgb_1;\n\n    input$2.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$8(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$6 = chroma_1;\n    var Color$n = Color_1;\n    var input$1 = input$f;\n    var unpack$1 = utils.unpack;\n    var type$7 = utils.type;\n    var round$1 = Math.round;\n\n    Color$n.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$n.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$6.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$1.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$1(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$1(args, 'rgba');\n            if (type$7(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$7(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$5 = chroma_1;\n    var Color$m = Color_1;\n    var input = input$f;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$m.prototype.temp =\n    Color$m.prototype.kelvin =\n    Color$m.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$5.temp =\n    chroma$5.kelvin =\n    chroma$5.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$m, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var Color$l = Color_1;\n    var type$6 = utils.type;\n\n    Color$l.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$l([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$k = Color_1;\n\n    Color$k.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$j = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$j.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$j(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$j.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$j.prototype.darker = Color$j.prototype.darken;\n    Color$j.prototype.brighter = Color$j.prototype.brighten;\n\n    var Color$i = Color_1;\n\n    Color$i.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$h = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$h.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$h([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$h([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$h([0,0,0]), this) : test(this, new Color$h([255,255,255]))).rgb();\n            return new Color$h(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$g = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$g(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$g(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$f = Color_1;\n    var mix = mix$1;\n\n    Color$f.prototype.mix =\n    Color$f.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$e = Color_1;\n\n    Color$e.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$e([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$d = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$d.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$d(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$d.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$c = Color_1;\n    var type$3 = utils.type;\n\n    Color$c.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$c(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$b = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$b(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$a = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$a(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$9 = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$9(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$8 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color$8([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$4 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$7 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$7(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$n;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n"]},"metadata":{},"sourceType":"script"}